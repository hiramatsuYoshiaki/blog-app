[{"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx":"1","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx":"2","D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx":"3","D:\\develop-react\\blog-app\\src\\App.jsx":"4","D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js":"5","D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js":"6","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js":"7","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js":"8","D:\\develop-react\\blog-app\\src\\templates\\Header.jsx":"9","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx":"10","D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx":"11","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx":"12","D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx":"13","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx":"14","D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js":"15","D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js":"16","D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js":"17","D:\\develop-react\\blog-app\\src\\firebase\\index.js":"18","D:\\develop-react\\blog-app\\src\\components\\tags\\index.js":"19","D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx":"20","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx":"21","D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx":"22","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx":"23","D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx":"24","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx":"25","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx":"26","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx":"27","D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx":"28","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx":"29","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx":"30","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx":"31","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx":"32","D:\\develop-react\\blog-app\\src\\reportWebVitals.js":"33","D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js":"34","D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js":"35","D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx":"36","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx":"37","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx":"38","D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx":"39","D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js":"40","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js":"41","D:\\develop-react\\blog-app\\src\\Auth.jsx":"42","D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js":"43","D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js":"44","D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js":"45","D:\\develop-react\\blog-app\\src\\components\\stage\\index.js":"46","D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js":"47","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js":"48","D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx":"49","D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx":"50","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx":"51","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx":"52","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx":"53","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx":"54","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx":"55","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx":"56","D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx":"57","D:\\develop-react\\blog-app\\src\\index.js":"58","D:\\develop-react\\blog-app\\src\\Router.jsx":"59","D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js":"60","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx":"61","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx":"62","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx":"63","D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js":"64","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js":"65","D:\\develop-react\\blog-app\\src\\components\\home\\index.js":"66","D:\\develop-react\\blog-app\\src\\components\\location\\index.js":"67","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx":"68","D:\\develop-react\\blog-app\\src\\firebase\\config.js":"69","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx":"70","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx":"71","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js":"72","D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx":"73","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx":"74","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js":"75","D:\\develop-react\\blog-app\\src\\googleMap\\config.js":"76","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx":"77","D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx":"78","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx":"79","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx":"80","D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx":"81","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js":"82","D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js":"83","D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx":"84","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx":"85","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx":"86","D:\\develop-react\\blog-app\\src\\templates\\index.js":"87","D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js":"88","D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx":"89","D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx":"90","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx":"91","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx":"92","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx":"93","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx":"94","D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx":"95","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx":"96","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx":"97","D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js":"98"},{"size":1178,"mtime":1613112367408,"results":"99","hashOfConfig":"100"},{"size":7707,"mtime":1613110235895,"results":"101","hashOfConfig":"100"},{"size":1715,"mtime":1613114868305,"results":"102","hashOfConfig":"100"},{"size":272,"mtime":1612502317658,"results":"103","hashOfConfig":"100"},{"size":478,"mtime":1609854411718,"results":"104","hashOfConfig":"100"},{"size":538,"mtime":1610689428433,"results":"105","hashOfConfig":"100"},{"size":574,"mtime":1609854468131,"results":"106","hashOfConfig":"100"},{"size":324,"mtime":1610685636013,"results":"107","hashOfConfig":"100"},{"size":4294,"mtime":1612683713713,"results":"108","hashOfConfig":"100"},{"size":674,"mtime":1612275440072,"results":"109","hashOfConfig":"100"},{"size":6367,"mtime":1612941158046,"results":"110","hashOfConfig":"100"},{"size":1840,"mtime":1612883513207,"results":"111","hashOfConfig":"100"},{"size":2737,"mtime":1612883429521,"results":"112","hashOfConfig":"100"},{"size":2895,"mtime":1612856647485,"results":"113","hashOfConfig":"100"},{"size":2057,"mtime":1612275339413,"results":"114","hashOfConfig":"100"},{"size":1905,"mtime":1610812188627,"results":"115","hashOfConfig":"100"},{"size":470,"mtime":1611500285060,"results":"116","hashOfConfig":"100"},{"size":562,"mtime":1609855395833,"results":"117","hashOfConfig":"100"},{"size":47,"mtime":1610810670546,"results":"118","hashOfConfig":"100"},{"size":772,"mtime":1610810018688,"results":"119","hashOfConfig":"100"},{"size":685,"mtime":1610810699159,"results":"120","hashOfConfig":"100"},{"size":4429,"mtime":1610810995823,"results":"121","hashOfConfig":"100"},{"size":1563,"mtime":1611038792529,"results":"122","hashOfConfig":"100"},{"size":2021,"mtime":1610810676726,"results":"123","hashOfConfig":"100"},{"size":1494,"mtime":1612941158007,"results":"124","hashOfConfig":"100"},{"size":2848,"mtime":1612936417154,"results":"125","hashOfConfig":"100"},{"size":3457,"mtime":1612940156583,"results":"126","hashOfConfig":"100"},{"size":461,"mtime":1611644466420,"results":"127","hashOfConfig":"100"},{"size":1188,"mtime":1611040859308,"results":"128","hashOfConfig":"100"},{"size":4347,"mtime":1610810649449,"results":"129","hashOfConfig":"100"},{"size":4143,"mtime":1612938265396,"results":"130","hashOfConfig":"100"},{"size":2172,"mtime":1612495041043,"results":"131","hashOfConfig":"100"},{"size":362,"mtime":1606632244700,"results":"132","hashOfConfig":"100"},{"size":534,"mtime":1611896770248,"results":"133","hashOfConfig":"100"},{"size":558,"mtime":1610810952720,"results":"134","hashOfConfig":"100"},{"size":2508,"mtime":1612275483349,"results":"135","hashOfConfig":"100"},{"size":2164,"mtime":1612704387130,"results":"136","hashOfConfig":"100"},{"size":1398,"mtime":1612883526326,"results":"137","hashOfConfig":"100"},{"size":2120,"mtime":1612855040977,"results":"138","hashOfConfig":"100"},{"size":334,"mtime":1611896764916,"results":"139","hashOfConfig":"100"},{"size":381,"mtime":1610810964974,"results":"140","hashOfConfig":"100"},{"size":641,"mtime":1612268267860,"results":"141","hashOfConfig":"100"},{"size":189,"mtime":1609995316979,"results":"142","hashOfConfig":"100"},{"size":194,"mtime":1610287566559,"results":"143","hashOfConfig":"100"},{"size":386,"mtime":1609859521995,"results":"144","hashOfConfig":"100"},{"size":220,"mtime":1610779050687,"results":"145","hashOfConfig":"100"},{"size":184,"mtime":1610379821286,"results":"146","hashOfConfig":"100"},{"size":317,"mtime":1612943404932,"results":"147","hashOfConfig":"100"},{"size":4416,"mtime":1612503620317,"results":"148","hashOfConfig":"100"},{"size":857,"mtime":1610892386053,"results":"149","hashOfConfig":"100"},{"size":3948,"mtime":1611902322953,"results":"150","hashOfConfig":"100"},{"size":5948,"mtime":1610810558402,"results":"151","hashOfConfig":"100"},{"size":289,"mtime":1610810606887,"results":"152","hashOfConfig":"100"},{"size":1702,"mtime":1612941072413,"results":"153","hashOfConfig":"100"},{"size":340,"mtime":1610810041233,"results":"154","hashOfConfig":"100"},{"size":1200,"mtime":1611727042798,"results":"155","hashOfConfig":"100"},{"size":1863,"mtime":1611282795015,"results":"156","hashOfConfig":"100"},{"size":792,"mtime":1609854623605,"results":"157","hashOfConfig":"100"},{"size":1814,"mtime":1612931188438,"results":"158","hashOfConfig":"100"},{"size":528,"mtime":1610685674059,"results":"159","hashOfConfig":"100"},{"size":2691,"mtime":1612855842572,"results":"160","hashOfConfig":"100"},{"size":1605,"mtime":1612883486004,"results":"161","hashOfConfig":"100"},{"size":5491,"mtime":1612883386640,"results":"162","hashOfConfig":"100"},{"size":342,"mtime":1610809231975,"results":"163","hashOfConfig":"100"},{"size":2228,"mtime":1612248495951,"results":"164","hashOfConfig":"100"},{"size":265,"mtime":1612103877974,"results":"165","hashOfConfig":"100"},{"size":218,"mtime":1610810004627,"results":"166","hashOfConfig":"100"},{"size":1265,"mtime":1611039774151,"results":"167","hashOfConfig":"100"},{"size":394,"mtime":1610031357760,"results":"168","hashOfConfig":"100"},{"size":970,"mtime":1610810551110,"results":"169","hashOfConfig":"100"},{"size":3063,"mtime":1610944911106,"results":"170","hashOfConfig":"100"},{"size":1044,"mtime":1610550536840,"results":"171","hashOfConfig":"100"},{"size":1588,"mtime":1612685173682,"results":"172","hashOfConfig":"100"},{"size":3837,"mtime":1612713217048,"results":"173","hashOfConfig":"100"},{"size":2201,"mtime":1610812159008,"results":"174","hashOfConfig":"100"},{"size":91,"mtime":1610517406770,"results":"175","hashOfConfig":"100"},{"size":4827,"mtime":1610810011559,"results":"176","hashOfConfig":"100"},{"size":1201,"mtime":1612495094572,"results":"177","hashOfConfig":"100"},{"size":969,"mtime":1612941158046,"results":"178","hashOfConfig":"100"},{"size":3840,"mtime":1612940585319,"results":"179","hashOfConfig":"100"},{"size":1786,"mtime":1612882469024,"results":"180","hashOfConfig":"100"},{"size":338,"mtime":1610550482017,"results":"181","hashOfConfig":"100"},{"size":209,"mtime":1610552535912,"results":"182","hashOfConfig":"100"},{"size":1287,"mtime":1610810578677,"results":"183","hashOfConfig":"100"},{"size":1375,"mtime":1611039237001,"results":"184","hashOfConfig":"100"},{"size":1696,"mtime":1612941158046,"results":"185","hashOfConfig":"100"},{"size":1008,"mtime":1613350400877,"results":"186","hashOfConfig":"100"},{"size":2622,"mtime":1610810804083,"results":"187","hashOfConfig":"100"},{"size":533,"mtime":1610810725893,"results":"188","hashOfConfig":"100"},{"size":1621,"mtime":1611213887222,"results":"189","hashOfConfig":"100"},{"size":1289,"mtime":1610863400313,"results":"190","hashOfConfig":"100"},{"size":2249,"mtime":1612494772414,"results":"191","hashOfConfig":"100"},{"size":672,"mtime":1612494399533,"results":"192","hashOfConfig":"100"},{"size":1864,"mtime":1611039564908,"results":"193","hashOfConfig":"100"},{"size":6214,"mtime":1613547623027,"results":"194","hashOfConfig":"100"},{"size":1246,"mtime":1611644460787,"results":"195","hashOfConfig":"100"},{"size":3638,"mtime":1612883464370,"results":"196","hashOfConfig":"100"},{"size":41,"mtime":1613108363481,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"vg192i",{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"200"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"216"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"209"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"238"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"209"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"209"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"200"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"241"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"200"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"266"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"216"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"200"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"241"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"209"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"209"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"241"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx",[],["419","420"],"D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx",["421"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../firebase/index'\r\nimport moment from 'moment'\r\nimport {TopImageArea,PostArea,LocationArea,Pagination,SNSArea} from '../components/postDetail/index'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\n\r\nconst Postdetail = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    let id = window.location.pathname.split('/post/detail')[1]\r\n    if (id !== '') {\r\n        id = id.split('/')[1]\r\n    }\r\n    const [title, setTitle] = useState(\"\")\r\n    const [article, setArticle] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n\r\n    const dateNow = moment().format()//2014-08-18T21:11:54+09:47\r\n    const dateSplit = dateNow.split('+')//2014-08-18T21:11:54 この形式でpicerに渡す\r\n    const [postDate, setPostDate] = useState(dateSplit[0]);\r\n\r\n    const [topImages, setTopImages] = useState([])\r\n    const [postImages, setPostImages] = useState([])\r\n    //stage\r\n    const [stage, setStage] = useState(\"\")\r\n    const [stageNo,setStageNo]= useState(\"\")\r\n    const [stageYear,setStageYear]= useState(0)\r\n    const [stageImages,setStageImages] = useState([])\r\n    //tag\r\n    const [tags, setTags] = useState([])\r\n    //location\r\n    const [locationName, setLocationName] = useState([])\r\n    const [locationAddress, setLocationAddress] = useState([])\r\n    const [locationLat, setLocationLat] = useState([])\r\n    const [locationLng, setLocationLng] = useState([])\r\n    const [locationImages, setLocationImages] = useState([])\r\n   \r\n    // useEffect(() => {\r\n    //     if(!posts){\r\n    //         dispatch(fetchPosts())\r\n    //     }\r\n\r\n    //     // }else{\r\n    //         const post = posts.find(post => post.id === id)\r\n    //         if(post){\r\n    //             setTitle(post.title)\r\n    //             setArticle(post.article)\r\n    //             setType(post.type)\r\n    //             setPostDate(post.postDate)\r\n    //             setTopImages(post.topImages)\r\n    //             setPostImages(post.postImages)\r\n    //             //stage\r\n    //             setStage(post.stage.stage)\r\n    //             setStageNo(post.stage.stageNo)\r\n    //             setStageYear(post.stage.stageYear)\r\n    //             setStageImages(post.stage.images)\r\n    //             //tag\r\n    //             setTags(post.tags)\r\n    //             //location\r\n    //             setLocationName(post.location.name)\r\n    //             setLocationAddress(post.location.address)\r\n    //             setLocationLat(post.location.position.lat)\r\n    //             setLocationLng(post.location.position.lng)\r\n    //             setLocationImages(post.location.images)\r\n    //         // }\r\n    //     }\r\n    // }, [])\r\n    useEffect(() => {\r\n        if(!posts || posts.length === 0){\r\n            dispatch(fetchPosts())\r\n        }\r\n        if (id !== '') {\r\n            db.collection('posts').doc(id).get().then(snapshot => {\r\n                const post = snapshot.data()\r\n                setTitle(post.title)\r\n                setArticle(post.article)\r\n                setType(post.type)\r\n                setPostDate(post.postDate)\r\n                setTopImages(post.topImages)\r\n                setPostImages(post.postImages)\r\n                //stage\r\n                setStage(post.stage.stage)\r\n                setStageNo(post.stage.stageNo)\r\n                setStageYear(post.stage.stageYear)\r\n                setStageImages(post.stage.images)\r\n                //tag\r\n                setTags(post.tags)\r\n                //location\r\n                setLocationName(post.location.name)\r\n                setLocationAddress(post.location.address)\r\n                setLocationLat(post.location.position.lat)\r\n                setLocationLng(post.location.position.lng)\r\n                setLocationImages(post.location.images)\r\n\r\n            }).catch(error => {\r\n                throw new Error(error) \r\n            })\r\n        }\r\n    },[id])  \r\n\r\n    \r\n    return (\r\n        <main>\r\n            {/* TopImageArea--------------------------------------------------------- */}\r\n            <TopImageArea title={title} stage={stage} stageNo={stageNo} stageYear={stageYear} images={topImages}/> \r\n            {/* PostArea--------------------------------------------------------- */}\r\n            <PostArea stage={stage} stageNo={stageNo} stageYear={stageYear} stageImages={stageImages}\r\n                        article={article} type={type} postDate={postDate} postImages={postImages}\r\n                        tags={tags} \r\n                        locationName={locationName} locationAddress={locationAddress}\r\n                    />\r\n            {/* Pagination--------------------------------------------------------- */}\r\n            <Pagination posts={posts} id={id}/>\r\n            {/* LocationArea--------------------------------------------------------- */}\r\n            <LocationArea locationName={locationName} locationAddress={locationAddress}\r\n                locationLat={locationLat}\r\n                locationLng={locationLng}\r\n                locationImages={locationImages} \r\n                    />\r\n             \r\n            {/* PostListArea--------------------------------------------------------- */}\r\n            {/* <PostListArea  */}\r\n            {/* SNSrea--------------------------------------------------------- */}\r\n            <SNSArea images={topImages} postImages={postImages}/> \r\n            {/* <h1>{id}</h1>\r\n            <h1>{title}</h1>\r\n            <h1>{article}</h1>\r\n            <h1>{type}</h1>\r\n            <h1>{postDate}</h1>\r\n            <h1>TopImage</h1>\r\n            {topImages.length > 0 && (\r\n                topImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={ image.description} className=\"p-imagePreview__img\"/>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>PostImage</h1>\r\n            {postImages.length > 0 && (\r\n                postImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )} */}\r\n\r\n\r\n\r\n{/*             \r\n            <h1>Stage</h1>\r\n            <p>{stage}</p>\r\n            <p>{stageNo}</p>\r\n            <p>{stageYear}</p>\r\n            {stageImages.length > 0 && (\r\n                stageImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )}\r\n\r\n            <h1>Locations</h1>\r\n            \r\n            <p>{locationName}</p>\r\n            <p>{locationAddress}</p>\r\n            <p>{locationLat}</p>\r\n            <p>{locationLng}</p>\r\n            {locationImages.length > 0 && (\r\n                locationImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <video  muted className=\"p-imagePreview__img\">\r\n                            <source src={image.path} type=\"video/mp4\" />\r\n                        </video>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>Tags</h1>\r\n            \r\n            {tags.length > 0 && (\r\n               tags.map(tag => (\r\n                    <div key={tag.id}>\r\n                        <p>{tag.name}</p>\r\n                    </div>\r\n                ))\r\n            )} */}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Postdetail\r\n","D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx",["422","423","424"],"import React,{useEffect} from 'react'\r\n\r\nconst Enbed = props => {\r\n    const styleBlokquote = { background:\"#FFF\", \r\n                                border:0, \r\n                                borderRadius:\"3px\", \r\n                                boxShadow:\"0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15)\", \r\n                                margin: \"1px\", \r\n                                maxWidth:\"540px\", \r\n                                minWidth:\"326px\", \r\n                                padding:0, \r\n                                width:\"99.375%\", \r\n                                width:\"-webkit-calc(100% - 2px)\", \r\n                                width:\"calc(100% - 2px)\" \r\n                            }\r\n    const styleLink = { background:\"#FFFFFF\", \r\n                        lineHeight:0, \r\n                        padding:\"0 0\", \r\n                        textAlign:\"center\", \r\n                        textDecoration:\"none\", \r\n                        width:\"100%\"\r\n                    }\r\n    useEffect(()=>{\r\n        if (window.instgrm) window.instgrm.Embeds.process()\r\n    },[])\r\n    return (\r\n        <> \r\n             <blockquote \r\n              class=\"instagram-media\" \r\n              data-instgrm-captioned \r\n              data-instgrm-version=\"12\"\r\n              style={styleBlokquote}\r\n              >\r\n                <a href={props.path} \r\n                    style={styleLink} \r\n                    target={\"_blank\"}\r\n                >\r\n                </a>\r\n            </blockquote>\r\n            {/* index.htmlで読み込む */}\r\n            {/* <script async defer src=\"http://platform.instagram.com/en_US/embeds.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enbed\r\n","D:\\develop-react\\blog-app\\src\\App.jsx",[],["425","426"],"D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js",[],["427","428"],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Header.jsx",["429","430"],"import React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { push } from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport hlogo from '../assets/img/h-logo.svg'\r\nimport hlogoName from '../assets/img/h-works1200x600white.svg'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nconst useStyles = makeStyles((hteme) => ({\r\n    toolbar:{\r\n        margin:0,\r\n        padding:0,\r\n    }\r\n}))\r\n\r\n\r\nconst Header = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const ToggleDrawer = (open) => (event) =>{\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n          }\r\n          setIsOpen(open);\r\n    }\r\n    return (\r\n        <header className=\"l-header\">\r\n            <AppBar\r\n                position=\"relative\"\r\n                color=\"transparent\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <div onClick={()=>dispatch(push('/'))} className=\"c-header-logo\">\r\n                        <img src={hlogo} alt=\"h-works logo\" className=\"logo\"/>\r\n                        <img src={hlogoName} alt=\"h-works logo\" className=\"logoName\"/>\r\n                    </div>\r\n                    <div className=\"c-header-tablet-menu\">\r\n                        <span onClick={()=>dispatch(push('/post/listGrid'))}>POST</span>\r\n                        <span>STAGE</span>\r\n                        <span>LOCATION</span>\r\n                        <span>ABOUT</span>\r\n                       \r\n                    </div>\r\n                    <div className=\"c-header-mobile-menu-icon\">\r\n                        <IconButton color=\"inherit\" onClick={ToggleDrawer(true)}>\r\n                            <MenuIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    {/* <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button> */}\r\n                    {/* <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}> */}\r\n                    <Drawer \r\n                        open={isOpen} \r\n                        onClose={ToggleDrawer(false)}\r\n                        anchor=\"right\"\r\n                        >\r\n                        <List component=\"nav\">\r\n                            <ListItem button onClick={()=>dispatch(push('/post/listGrid'))}>\r\n                                {/* <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon> */}\r\n                                <ListItemText primary=\"POST\" />\r\n                            </ListItem>\r\n                            <ListItem button>\r\n                                {/* <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon> */}\r\n                                <ListItemText primary=\"STAGE\" />\r\n                            </ListItem>\r\n                            <ListItem button>\r\n                                {/* <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon> */}\r\n                                <ListItemText primary=\"LOCATION\" />\r\n                            </ListItem>\r\n                            <ListItem button>\r\n                                {/* <ListItemIcon>\r\n                                    <SendIcon />\r\n                                </ListItemIcon> */}\r\n                                <ListItemText primary=\"ABOUT\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n\r\n\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n        </header>\r\n    )\r\n} \r\n\r\nexport default Header\r\n","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx",[],["431","432"],"D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx",[],["433","434"],"D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js",[],["435","436"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js",[],["437","438"],"D:\\develop-react\\blog-app\\src\\firebase\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx",["439"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst VideoUpload = (props) => {\r\n    const classes = useStyles()\r\n\r\n    // const [imageId, setImageId] = useState('')\r\n    // const [imagePath, setImagePath] = useState('')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"video/mp4\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // setImageDescription(\"GoogleEerth\")\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: \"\" };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [ props.setImages ])\r\n    // const inputDescription = useCallback((e) => {\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>動画を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept=\"video/mp4\"\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n            {/* <h1>{imageId}</h1>\r\n            <h1>{imagePath}</h1>\r\n            <h1>{imageDescription}</h1>\r\n            <TextInput\r\n                    fullWidth={true} label={\"動画の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx",["440"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst AddImagesUpload = props => {\r\n    const classes = useStyles()\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: '', instagram:'', twitter:'' };\r\n                if (props.Multiple) {\r\n                    props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                } else {\r\n                    props.setImages([newImage])\r\n                }\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span className=\"p\">{props.title}</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon fontSize=\"large\"/>\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx",[],["441","442"],"D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx",["443"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput,PrimaryButton} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n \r\nconst ImagesUpload = props => {\r\n    const classes = useStyles()\r\n    // const [imageId, setImageId] = useState('imageId')\r\n    // const [imagePath, setImagePath] = useState('imagePath')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // dispatch(hideLoadingAction())\r\n                \r\n                const newImage = { id: fileName, path: downloadURL, description: '' };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    // const inputDescription = useCallback((e) => {\r\n\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n        \r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    \r\n    return (\r\n        <div>\r\n            <span>画像を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n           \r\n            {/* <TextInput\r\n                    fullWidth={true} label={\"画像の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx",["444"],"import React from 'react'\r\nimport {useDispatch} from  'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrape:{\r\n        [theme.breakpoints.down('sm')]:{\r\n            margin:8,\r\n            width:'100%',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            margin:8,\r\n            width:'calc(50% - 16px )',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            margin:16,\r\n            width:'calc(25% - 32px)',\r\n            height:'auto'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent:'flex-start',\r\n        // alignItems:'flex-start',\r\n        height: '100%',\r\n    },\r\n    button:{\r\n        marginRight:0,\r\n        marginLeft:'auto',\r\n        padding:'0 16px'\r\n    },\r\n    chip:{\r\n        marginRight:4\r\n    },\r\n    cardActionArea:{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent:'flex-start',\r\n        alignItems:'flex-start',\r\n    },\r\n    cardAction:{\r\n        flexShrink: 0\r\n    }\r\n}))\r\n\r\nconst NewPostsArea = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const post = props.post\r\n    const handleClickTga =(ids,e) =>{\r\n        //投稿表示エリアのフィルターするキーを設定する\r\n        props.setFilter({\r\n            type:'tag',\r\n            key:ids.postId,\r\n            locationKey:'',\r\n            tagKey:ids.tagId,\r\n        })\r\n        props.setVolume(props.defaultVolume)\r\n    }\r\n    \r\n    return (\r\n        <Card className={classes.cardWrape}>\r\n            <CardActionArea className={classes.cardActionArea}>\r\n                {post.topImages.length > 0 && (\r\n                    post.topImages.map(image => (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={image.description}\r\n                            height=\"auto\"\r\n                            image={image.path}\r\n                            title={image.title}\r\n                            key={image.id}\r\n                        />\r\n                    ))\r\n                )} \r\n                <CardContent>\r\n                    <h4>{post.title}</h4>\r\n                    <p>{post.postDate.split('T')[0]}</p>\r\n                    <p>{post.location.name}</p>\r\n                    {post.tags.length > 0 && (\r\n                        post.tags.map(tag => (\r\n                            <span key={tag.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    label={tag.name}\r\n                                    onClick={(e) => handleClickTga({postId:post.id,tagId:tag.id},e)}\r\n                                    className={classes.chip}\r\n                                    clickable\r\n                                />\r\n                            </span>\r\n                        ))\r\n                    )} \r\n                </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    endIcon={<ChevronRightIcon/>}\r\n                    onClick={()=> dispatch(push('/post/detail/' + props.id ))}\r\n                    className={classes.button}\r\n                    >\r\n                    投稿を見る\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewPostsArea\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx",[],"D:\\develop-react\\blog-app\\src\\reportWebVitals.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx",["445","446"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      width: '100%',\r\n    //   border:'1px solid white',\r\n    //   backgroundColor:'white'\r\n    },\r\n  }));\r\n\r\nconst PostListGridImage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid \">\r\n           <div className=\"l-section \">\r\n            <div className={classes.root}>\r\n                    <GridList cellHeight={'auto'} className={classes.gridList} cols={3}>\r\n                        {  postsSort().length > 0 &&(\r\n                            postsSort().map(post=> (\r\n                                post.topImages.map(topImage=>(\r\n                                    <GridListTile key={topImage.id} cols={1}>\r\n                                        <img src={topImage.path} alt={topImage.description} className=\"c-image-fit-cover\"/>\r\n                                    </GridListTile>\r\n                                ))\r\n                            ))\r\n                        )}\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PostListGridImage \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js",[],"D:\\develop-react\\blog-app\\src\\Auth.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx",["447"],"import React,{ useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoImage from '../../assets/img/no_image.jpg'\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { deletePost } from '../../reducks/posts/operators'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 8,\r\n            width: 'calc(50% - 16px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: 16,\r\n            width: 'calc(33.3333% - 32px)'\r\n        },\r\n    },\r\n    // content: {\r\n    //     display: 'flex',\r\n    //     padding: '16px 8px',\r\n    //     textAlign: 'left',\r\n    //     '&:last-child': {\r\n    //         paddingBottom: 16\r\n    //     }\r\n    // },\r\n    media: {\r\n        height: 200,\r\n        width:'auto'\r\n    },\r\n    // icon: {\r\n    //     marginRight: 0,\r\n    //     marginLeft: 'auto'\r\n    // }\r\n\r\n})) \r\nconst PostListCard = props => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const topImages = props.topImages\r\n    // const topImages = (props.topImages.length > 0 ? props.images : [{ path: NoImage }])\r\n    // const postImages = (props.postImages.length > 0 ? props.images : [{ path: NoImage }])\r\n\r\n    return (\r\n        <div>\r\n            {/* <PostListCard key={post.id}\r\n                            id={post.id} title={post.title} article={post.article}\r\n                            postDate={post.postDate} type={post.type}\r\n                            topImages={postImages} postImages={post.postImages}\r\n                        /> */}\r\n            <Card className={classes.root}>\r\n                 {/* id={stage.id} sort={stage.sort}\r\n                            stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                            images={stage.images} */}\r\n                <CardMedia className={classes.media}\r\n                    image={topImages[0].path}\r\n                    // title={topImages[0].description}\r\n                    // onClick={() => dispatch(push('/post/' + props.id))}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {props.title}\r\n                    </Typography>\r\n                    {/* <Typography>\r\n                        {props.stageYear} STAGE-{props.stageNo}\r\n                    </Typography> */}\r\n                </CardContent>\r\n            </Card>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon></MoreVertIcon>\r\n            </IconButton>\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClick={handleClose}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                        dispatch(push('/post/edit/' + props.id))\r\n                        handleClose()\r\n                }}>\r\n                    編集する\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        dispatch(deletePost(props.id))\r\n                        handleClose()\r\n                }}>\r\n                    削除する\r\n                </MenuItem>\r\n            </Menu >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default PostListCard\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx",["448","449"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\nconst PostImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n    return (\r\n        <div>\r\n             <div className=\"classes.u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PostImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx",["450"],"import React,{useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MultipleSelect } from '../UiKit/index'\r\nimport { getTags } from '../../reducks/tags/seloctors'\r\nimport { fetchTags } from '../../reducks/tags/operators'\r\n\r\nconst TagsArea = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const tags = getTags(selector)\r\n    \r\n\r\n    const handleChange = (selectedTags) => {\r\n        const selectedValue = []\r\n        if(selectedTags.length > 0 ){\r\n            selectedTags.forEach(selectedTag => {\r\n                const found = tags.find(tag => tag.id === selectedTag)\r\n                if (found){\r\n                    selectedValue.push(found)\r\n                }\r\n            })\r\n        }\r\n        props.setTgas(selectedValue)\r\n    }\r\n    const valueTags = (pTags) => {\r\n        if(pTags === []){\r\n            return []\r\n        }\r\n        const valueTags = []\r\n        pTags.forEach(pTag=>{\r\n            console.log(pTag.id);\r\n            console.log(pTag.name);\r\n            valueTags.push(pTag.id)\r\n        })\r\n        return valueTags\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTags())\r\n    }, [])  \r\n    \r\n    return (\r\n        <div>\r\n            <h3>TagsArea</h3>\r\n            <p>タグを選択してください</p>\r\n            <MultipleSelect\r\n                label={\"タグ\"}\r\n                // value={props.tags || []}\r\n                value={valueTags(props.tags)}\r\n                handleChange={handleChange}\r\n                options={tags}\r\n                required={true}\r\n            />\r\n            {/* <h1>tag name</h1>\r\n            {selected.length > 0 && (\r\n                selected.map(value => {\r\n                    <h1>value.name</h1>\r\n                })\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagsArea\r\n","D:\\develop-react\\blog-app\\src\\index.js",[],"D:\\develop-react\\blog-app\\src\\Router.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx",["451"],"import React,{ useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getStages } from '../reducks/stage/selectors'\r\nimport { StageCard } from '../components/stage/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst StageList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state => state))\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStages()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                <h2>ステージリスト</h2>\r\n                    {\r\n                        stages.length > 0 && ( \r\n                            stages.map((stage) => (\r\n                                <StageCard key={stage.id}\r\n                                    id={stage.id} sort={stage.sort}\r\n                                    stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                                    images={stage.images} />\r\n                            ))\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <Button onClick={()=> dispatch(push('/admin'))}>\r\n                            <p>Back to Admin Menu</p>\r\n                        </Button> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default StageList \r\n","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx",[],"D:\\develop-react\\blog-app\\src\\firebase\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx",["452"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst ReplaceImgesUpload = props => {\r\n    const classes = useStyles()\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => { \r\n\r\n                const id = props.images[props.index].id\r\n                const newImages = props.images.filter(image => image.id !== id)\r\n                const newImage = { id: fileName, path: downloadURL, description: 'new image' };\r\n                newImages.push(newImage)\r\n                props.setImages(newImages) \r\n                \r\n                // props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                // newBookmarks = bookmarks.filter(item !== article.id)\r\n\r\n\r\n                // dispatch(hideLoadingAction())\r\n                // props.setImages([newImage]) \r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>投稿画像を変更する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplaceImgesUpload\r\n","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx",["453"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostListGrid = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid c-post-list-grid\">\r\n           <div className=\"l-row\">\r\n                {  postsSort().length > 0 &&(\r\n                     postsSort().map(post=> (\r\n                        post.topImages.map(topImage=>(\r\n                            <div key={topImage.id} \r\n                                className=\"l-col-4\" \r\n                                onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                            >\r\n                                <img src={topImage.path} \r\n                                   alt={post.title} \r\n                                   className=\"c-image-fit-cover\"/>\r\n                            </div>\r\n                        ))\r\n                    ))\r\n                )}\r\n           </div>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostListGrid \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx",["454","455"],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js",[],"D:\\develop-react\\blog-app\\src\\googleMap\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx",["456"],"import React, { useEffect } from 'react'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\nimport Button from '@material-ui/core/Button';\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n    }, [])\r\n  \r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                    <div>\r\n                    <h2>投稿一覧</h2>\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        posts.length > 0 && (\r\n                            posts.map((post) => (\r\n                                <PostListCard key={post.id}\r\n                                    id={post.id} title={post.title} article={post.article}\r\n                                    postDate={post.postDate} type={post.type}\r\n                                    topImages={post.topImages} postImages={post.postImages}\r\n                                />\r\n                            ))\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <Button onClick={()=> dispatch(push('/admin'))}>\r\n                        <p>Back to Admin Menu</p>\r\n                    </Button> \r\n                </div>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx",["457","458"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\n\r\nconst TopImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default TopImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\templates\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\Home.jsx",["459"],"import React, { useEffect,useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { getStages } from '../reducks/stage/selectors'\r\n\r\nimport { HomeStage, NewPosts, FilterPosts } from '../components/home/index'\r\n\r\nconst Home = () => {\r\n    const defaultVolume = 4\r\n    //redux\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stages = getStages(selector)\r\n    //state\r\n    const [filter,setFilter] = useState({\r\n        type:'post',\r\n        key:'',\r\n        locationKey:'',\r\n        tagKey:'',\r\n    })\r\n    const [stageName,setStageName] = useState('')\r\n    const [stageNo,setStageNo] = useState(0)\r\n    const [stageYear,setStageYear] = useState('')\r\n    const [volume,setVolume] = useState(defaultVolume)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n        dispatch(fetchStages()) \r\n    }, [])\r\n        \r\n    return ( \r\n        <div> \r\n            <HomeStage \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                setStageName={setStageName}\r\n                setStageNo={setStageNo}\r\n                setStageYear={setStageYear}\r\n                />\r\n            <FilterPosts  \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n            />\r\n            <NewPosts \r\n                posts={posts}\r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                stageName={stageName}\r\n                stageNo={stageNo}\r\n                stageYear={stageYear}\r\n                />\r\n        </div> \r\n    )\r\n} \r\n\r\nexport default Home\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx",["460","461","462","463","464","465"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx",["466"],"D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js",[],{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","severity":1,"message":"472","line":105,"column":7,"nodeType":"473","endLine":105,"endColumn":11,"suggestions":"474"},{"ruleId":"475","severity":1,"message":"476","line":13,"column":33,"nodeType":"477","messageId":"478","endLine":13,"endColumn":38},{"ruleId":"475","severity":1,"message":"476","line":14,"column":33,"nodeType":"477","messageId":"478","endLine":14,"endColumn":38},{"ruleId":"479","severity":1,"message":"480","line":36,"column":21,"nodeType":"481","endLine":36,"endColumn":38},{"ruleId":"467","replacedBy":"482"},{"ruleId":"469","replacedBy":"483"},{"ruleId":"467","replacedBy":"484"},{"ruleId":"469","replacedBy":"485"},{"ruleId":"486","severity":1,"message":"487","line":14,"column":8,"nodeType":"488","messageId":"489","endLine":14,"endColumn":20},{"ruleId":"486","severity":1,"message":"490","line":16,"column":8,"nodeType":"488","messageId":"489","endLine":16,"endColumn":16},{"ruleId":"467","replacedBy":"491"},{"ruleId":"469","replacedBy":"492"},{"ruleId":"467","replacedBy":"493"},{"ruleId":"469","replacedBy":"494"},{"ruleId":"467","replacedBy":"495"},{"ruleId":"469","replacedBy":"496"},{"ruleId":"467","replacedBy":"497"},{"ruleId":"469","replacedBy":"498"},{"ruleId":"471","severity":1,"message":"499","line":56,"column":8,"nodeType":"473","endLine":56,"endColumn":27,"suggestions":"500"},{"ruleId":"471","severity":1,"message":"499","line":48,"column":8,"nodeType":"473","endLine":48,"endColumn":25,"suggestions":"501"},{"ruleId":"467","replacedBy":"502"},{"ruleId":"469","replacedBy":"503"},{"ruleId":"471","severity":1,"message":"499","line":55,"column":8,"nodeType":"473","endLine":55,"endColumn":25,"suggestions":"504"},{"ruleId":"486","severity":1,"message":"505","line":4,"column":8,"nodeType":"488","messageId":"489","endLine":4,"endColumn":15},{"ruleId":"486","severity":1,"message":"506","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":13},{"ruleId":"471","severity":1,"message":"507","line":39,"column":7,"nodeType":"473","endLine":39,"endColumn":9,"suggestions":"508"},{"ruleId":"486","severity":1,"message":"509","line":7,"column":8,"nodeType":"488","messageId":"489","endLine":7,"endColumn":15},{"ruleId":"471","severity":1,"message":"510","line":13,"column":7,"nodeType":"473","endLine":13,"endColumn":23,"suggestions":"511"},{"ruleId":"471","severity":1,"message":"510","line":18,"column":7,"nodeType":"473","endLine":18,"endColumn":21,"suggestions":"512"},{"ruleId":"471","severity":1,"message":"507","line":40,"column":8,"nodeType":"473","endLine":40,"endColumn":10,"suggestions":"513"},{"ruleId":"471","severity":1,"message":"507","line":16,"column":7,"nodeType":"473","endLine":16,"endColumn":9,"suggestions":"514"},{"ruleId":"471","severity":1,"message":"499","line":55,"column":8,"nodeType":"473","endLine":55,"endColumn":25,"suggestions":"515"},{"ruleId":"471","severity":1,"message":"507","line":21,"column":7,"nodeType":"473","endLine":21,"endColumn":9,"suggestions":"516"},{"ruleId":"486","severity":1,"message":"517","line":33,"column":11,"nodeType":"488","messageId":"489","endLine":33,"endColumn":20},{"ruleId":"471","severity":1,"message":"507","line":57,"column":7,"nodeType":"473","endLine":57,"endColumn":9,"suggestions":"518"},{"ruleId":"471","severity":1,"message":"507","line":16,"column":8,"nodeType":"473","endLine":16,"endColumn":10,"suggestions":"519"},{"ruleId":"471","severity":1,"message":"510","line":14,"column":7,"nodeType":"473","endLine":14,"endColumn":23,"suggestions":"520"},{"ruleId":"471","severity":1,"message":"510","line":19,"column":7,"nodeType":"473","endLine":19,"endColumn":21,"suggestions":"521"},{"ruleId":"471","severity":1,"message":"507","line":32,"column":8,"nodeType":"473","endLine":32,"endColumn":10,"suggestions":"522"},{"ruleId":"486","severity":1,"message":"506","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":14},{"ruleId":"486","severity":1,"message":"523","line":8,"column":8,"nodeType":"488","messageId":"489","endLine":8,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":80,"column":17,"nodeType":"526","endLine":80,"endColumn":82},{"ruleId":"527","severity":1,"message":"528","line":150,"column":24,"nodeType":"529","messageId":"530","endLine":150,"endColumn":26},{"ruleId":"486","severity":1,"message":"531","line":156,"column":17,"nodeType":"488","messageId":"489","endLine":156,"endColumn":23},{"ruleId":"471","severity":1,"message":"507","line":174,"column":7,"nodeType":"473","endLine":174,"endColumn":9,"suggestions":"532"},{"ruleId":"471","severity":1,"message":"533","line":37,"column":7,"nodeType":"473","endLine":37,"endColumn":9,"suggestions":"534"},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["537"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["535"],["536"],["535"],["536"],"no-unused-vars","'ListItemIcon' is defined but never used.","Identifier","unusedVar","'SendIcon' is defined but never used.",["535"],["536"],["535"],["536"],["535"],["536"],["535"],["536"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["538"],["539"],["535"],["536"],["540"],"'Divider' is defined but never used.","'push' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["541"],"'NoImage' is defined but never used.","React Hook useCallback has missing dependencies: 'images', 'index', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["542"],["543"],["544"],["545"],["546"],["547"],"'postsSort' is assigned a value but never used.",["548"],["549"],["550"],["551"],["552"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'HHmmSS' is assigned a value but never used.",["553"],"React Hook useEffect has missing dependencies: 'posts' and 'props.id'. Either include them or remove the dependency array.",["554"],"no-global-assign","no-unsafe-negation",{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"557","fix":"559"},{"desc":"557","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"563","fix":"565"},{"desc":"561","fix":"566"},{"desc":"561","fix":"567"},{"desc":"557","fix":"568"},{"desc":"561","fix":"569"},{"desc":"561","fix":"570"},{"desc":"561","fix":"571"},{"desc":"563","fix":"572"},{"desc":"563","fix":"573"},{"desc":"561","fix":"574"},{"desc":"561","fix":"575"},{"desc":"576","fix":"577"},"Update the dependencies array to be: [dispatch, id, posts]",{"range":"578","text":"579"},"Update the dependencies array to be: [props]",{"range":"580","text":"581"},{"range":"582","text":"581"},{"range":"583","text":"581"},"Update the dependencies array to be: [dispatch]",{"range":"584","text":"585"},"Update the dependencies array to be: [images, index, props]",{"range":"586","text":"587"},{"range":"588","text":"587"},{"range":"589","text":"585"},{"range":"590","text":"585"},{"range":"591","text":"581"},{"range":"592","text":"585"},{"range":"593","text":"585"},{"range":"594","text":"585"},{"range":"595","text":"587"},{"range":"596","text":"587"},{"range":"597","text":"585"},{"range":"598","text":"585"},"Update the dependencies array to be: [posts, props.id]",{"range":"599","text":"600"},[4089,4093],"[dispatch, id, posts]",[2275,2294],"[props]",[1966,1983],[2267,2284],[1256,1258],"[dispatch]",[526,542],"[images, index, props]",[719,733],[1206,1208],[580,582],[2192,2209],[722,724],[1815,1817],[576,578],[527,543],[720,734],[1094,1096],[5128,5130],[991,993],"[posts, props.id]"]