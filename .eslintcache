[{"D:\\develop-react\\blog-app\\src\\App.jsx":"1","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js":"2","D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js":"3","D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js":"4","D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js":"5","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx":"6","D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx":"7","D:\\develop-react\\blog-app\\src\\templates\\PostPage.jsx":"8","D:\\develop-react\\blog-app\\src\\templates\\Landing.jsx":"9","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx":"10","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx":"11","D:\\develop-react\\blog-app\\src\\templates\\LandingRoot.jsx":"12","D:\\develop-react\\blog-app\\src\\templates\\LandingHorizontalScroll.jsx":"13","D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx":"14","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx":"15","D:\\develop-react\\blog-app\\src\\templates\\CanvasTest.jsx":"16","D:\\develop-react\\blog-app\\src\\templates\\HoverEffect.jsx":"17","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSlideshowGSAP.jsx":"18","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSelectiveRenderTargets.jsx":"19","D:\\develop-react\\blog-app\\src\\templates\\ComponentTransitionTest.jsx":"20","D:\\develop-react\\blog-app\\src\\templates\\LoadingDispalyFetchDataTest.jsx":"21","D:\\develop-react\\blog-app\\src\\templates\\GsapHorizontal.jsx":"22","D:\\develop-react\\blog-app\\src\\templates\\GsapScrollingTrigerTest.jsx":"23","D:\\develop-react\\blog-app\\src\\Auth.jsx":"24","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js":"25","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js":"26","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultiplePlane.jsx":"27","D:\\develop-react\\blog-app\\src\\components\\transition\\ChildrenTest.jsx":"28","D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js":"29","D:\\develop-react\\blog-app\\src\\firebase\\index.js":"30","D:\\develop-react\\blog-app\\src\\components\\home\\index.js":"31","D:\\develop-react\\blog-app\\src\\components\\stage\\index.js":"32","D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js":"33","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SinglePlane.jsx":"34","D:\\develop-react\\blog-app\\src\\components\\about\\TimelineSection.jsx":"35","D:\\develop-react\\blog-app\\src\\components\\about\\GlitchHeader.jsx":"36","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx":"37","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx":"38","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx":"39","D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx":"40","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js":"41","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx":"42","D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx":"43","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx":"44","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx":"45","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx":"46","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx":"47","D:\\develop-react\\blog-app\\src\\components\\vertical\\index.js":"48","D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js":"49","D:\\develop-react\\blog-app\\src\\components\\landing\\index.js":"50","D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js":"51","D:\\develop-react\\blog-app\\src\\components\\landing\\LandingComponent.jsx":"52","D:\\develop-react\\blog-app\\src\\components\\landing\\FadeinScrollArea.jsx":"53","D:\\develop-react\\blog-app\\src\\components\\landing\\SlideshowUsingGSAP.jsx":"54","D:\\develop-react\\blog-app\\src\\components\\landing\\Slideshow.jsx":"55","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx":"56","D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx":"57","D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx":"58","D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx":"59","D:\\develop-react\\blog-app\\src\\reportWebVitals.js":"60","D:\\develop-react\\blog-app\\src\\Router.jsx":"61","D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js":"62","D:\\develop-react\\blog-app\\src\\templates\\Header.jsx":"63","D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx":"64","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx":"65","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx":"66","D:\\develop-react\\blog-app\\src\\templates\\LandingPage.jsx":"67","D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx":"68","D:\\develop-react\\blog-app\\src\\templates\\About.jsx":"69","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsBasicPlane.jsx":"70","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultiplePlanes.jsx":"71","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainesSimplePlane.jsx":"72","D:\\develop-react\\blog-app\\src\\templates\\ImageLoadingTest.jsx":"73","D:\\develop-react\\blog-app\\src\\templates\\GsapDynamicBackgroundColorHorizontal.jsx":"74","D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerHorizontal.jsx":"75","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js":"76","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultipleplanesUsingGSAP.jsx":"77","D:\\develop-react\\blog-app\\src\\components\\post\\index.js":"78","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\Slideshow.jsx":"79","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx":"80","D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx":"81","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx":"82","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx":"83","D:\\develop-react\\blog-app\\src\\components\\landing\\HorizontalScrollArea.jsx":"84","D:\\develop-react\\blog-app\\src\\components\\landing\\ReactCurtainsSlideshowGSAP.jsx":"85","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx":"86","D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx":"87","D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx":"88","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx":"89","D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx":"90","D:\\develop-react\\blog-app\\src\\components\\location\\index.js":"91","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx":"92","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx":"93","D:\\develop-react\\blog-app\\src\\components\\horizontal\\index.js":"94","D:\\develop-react\\blog-app\\src\\components\\vertical\\VerticalCarousel.jsx":"95","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx":"96","D:\\develop-react\\blog-app\\src\\templates\\ReactTransitionTest.jsx":"97","D:\\develop-react\\blog-app\\src\\index.js":"98","D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js":"99","D:\\develop-react\\blog-app\\src\\templates\\HomeBlog.jsx":"100","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx":"101","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx":"102","D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx":"103","D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx":"104","D:\\develop-react\\blog-app\\src\\templates\\TopPage.jsx":"105","D:\\develop-react\\blog-app\\src\\templates\\ThreeTest.jsx":"106","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultipleplanesUsingGSAP.jsx":"107","D:\\develop-react\\blog-app\\src\\templates\\GsapTest.jsx":"108","D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js":"109","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SlideshowUsingGSAP.jsx":"110","D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js":"111","D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js":"112","D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js":"113","D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx":"114","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx":"115","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx":"116","D:\\develop-react\\blog-app\\src\\components\\locationMap\\LocationInPosts.jsx":"117","D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx":"118","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx":"119","D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx":"120","D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js":"121","D:\\develop-react\\blog-app\\src\\components\\tags\\index.js":"122","D:\\develop-react\\blog-app\\src\\components\\landing\\PostsArea.jsx":"123","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx":"124","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx":"125","D:\\develop-react\\blog-app\\src\\templates\\Top.jsx":"126","D:\\develop-react\\blog-app\\src\\templates\\CanvasCircle.jsx":"127","D:\\develop-react\\blog-app\\src\\templates\\LocomotiveScrollSimpleTest.jsx":"128","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SelectiveRenderTargets.jsx":"129","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js":"130","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js":"131","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx":"132","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx":"133","D:\\develop-react\\blog-app\\src\\firebase\\config.js":"134","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx":"135","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx":"136","D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js":"137","D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx":"138","D:\\develop-react\\blog-app\\src\\components\\landing\\StagesArea.jsx":"139","D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx":"140","D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js":"141","D:\\develop-react\\blog-app\\src\\templates\\index.js":"142","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js":"143","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx":"144","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx":"145","D:\\develop-react\\blog-app\\src\\templates\\LoadingDisplayTest.jsx":"146","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx":"147","D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js":"148","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx":"149","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx":"150","D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx":"151","D:\\develop-react\\blog-app\\src\\components\\about\\index.js":"152","D:\\develop-react\\blog-app\\src\\googleMap\\config.js":"153","D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx":"154","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx":"155","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx":"156","D:\\develop-react\\blog-app\\src\\components\\horizontal\\HorizontalCarousel.jsx":"157","D:\\develop-react\\blog-app\\src\\templates\\StagePage.jsx":"158"},{"size":511,"mtime":1616647869215,"results":"159","hashOfConfig":"160"},{"size":1044,"mtime":1610550536840,"results":"161","hashOfConfig":"160"},{"size":478,"mtime":1609854411718,"results":"162","hashOfConfig":"160"},{"size":538,"mtime":1610689428433,"results":"163","hashOfConfig":"160"},{"size":558,"mtime":1610810952720,"results":"164","hashOfConfig":"160"},{"size":674,"mtime":1612275440072,"results":"165","hashOfConfig":"160"},{"size":1588,"mtime":1612685173682,"results":"166","hashOfConfig":"160"},{"size":425,"mtime":1620804710922,"results":"167","hashOfConfig":"160"},{"size":4208,"mtime":1621319807514,"results":"168","hashOfConfig":"160"},{"size":1840,"mtime":1612883513207,"results":"169","hashOfConfig":"160"},{"size":3278,"mtime":1621319239823,"results":"170","hashOfConfig":"160"},{"size":11318,"mtime":1618727429643,"results":"171","hashOfConfig":"160"},{"size":3382,"mtime":1619150094317,"results":"172","hashOfConfig":"160"},{"size":2120,"mtime":1612855040977,"results":"173","hashOfConfig":"160"},{"size":2895,"mtime":1612856647485,"results":"174","hashOfConfig":"160"},{"size":5064,"mtime":1618376403221,"results":"175","hashOfConfig":"160"},{"size":1223,"mtime":1618377988401,"results":"176","hashOfConfig":"160"},{"size":535,"mtime":1618371516164,"results":"177","hashOfConfig":"160"},{"size":474,"mtime":1618371474906,"results":"178","hashOfConfig":"160"},{"size":710,"mtime":1618377260890,"results":"179","hashOfConfig":"160"},{"size":2974,"mtime":1617161716371,"results":"180","hashOfConfig":"160"},{"size":10595,"mtime":1618297653223,"results":"181","hashOfConfig":"160"},{"size":7343,"mtime":1618298232550,"results":"182","hashOfConfig":"160"},{"size":641,"mtime":1612268267860,"results":"183","hashOfConfig":"160"},{"size":338,"mtime":1610550482017,"results":"184","hashOfConfig":"160"},{"size":324,"mtime":1610685636013,"results":"185","hashOfConfig":"160"},{"size":3734,"mtime":1618368589743,"results":"186","hashOfConfig":"160"},{"size":1368,"mtime":1616555134388,"results":"187","hashOfConfig":"160"},{"size":2057,"mtime":1612275339413,"results":"188","hashOfConfig":"160"},{"size":562,"mtime":1609855395833,"results":"189","hashOfConfig":"160"},{"size":265,"mtime":1612103877974,"results":"190","hashOfConfig":"160"},{"size":278,"mtime":1614144540068,"results":"191","hashOfConfig":"160"},{"size":159,"mtime":1614413062784,"results":"192","hashOfConfig":"160"},{"size":4522,"mtime":1618368579089,"results":"193","hashOfConfig":"160"},{"size":5267,"mtime":1618814373765,"results":"194","hashOfConfig":"160"},{"size":3832,"mtime":1618892824174,"results":"195","hashOfConfig":"160"},{"size":1494,"mtime":1612941158007,"results":"196","hashOfConfig":"160"},{"size":3063,"mtime":1610944911106,"results":"197","hashOfConfig":"160"},{"size":1188,"mtime":1611040859308,"results":"198","hashOfConfig":"160"},{"size":1863,"mtime":1611282795015,"results":"199","hashOfConfig":"160"},{"size":2228,"mtime":1612248495951,"results":"200","hashOfConfig":"160"},{"size":7421,"mtime":1614574632292,"results":"201","hashOfConfig":"160"},{"size":857,"mtime":1610892386053,"results":"202","hashOfConfig":"160"},{"size":1375,"mtime":1611039237001,"results":"203","hashOfConfig":"160"},{"size":1265,"mtime":1611039774151,"results":"204","hashOfConfig":"160"},{"size":2172,"mtime":1612495041043,"results":"205","hashOfConfig":"160"},{"size":4143,"mtime":1612938265396,"results":"206","hashOfConfig":"160"},{"size":62,"mtime":1615300863902,"results":"207","hashOfConfig":"160"},{"size":209,"mtime":1610552535912,"results":"208","hashOfConfig":"160"},{"size":580,"mtime":1619148787686,"results":"209","hashOfConfig":"160"},{"size":1905,"mtime":1610812188627,"results":"210","hashOfConfig":"160"},{"size":11618,"mtime":1621321580466,"results":"211","hashOfConfig":"160"},{"size":2486,"mtime":1619070973154,"results":"212","hashOfConfig":"160"},{"size":441,"mtime":1616909884457,"results":"213","hashOfConfig":"160"},{"size":19733,"mtime":1621930261648,"results":"214","hashOfConfig":"160"},{"size":2012,"mtime":1620960364678,"results":"215","hashOfConfig":"160"},{"size":527,"mtime":1618733251975,"results":"216","hashOfConfig":"160"},{"size":1178,"mtime":1613112367408,"results":"217","hashOfConfig":"160"},{"size":1715,"mtime":1613114868305,"results":"218","hashOfConfig":"160"},{"size":362,"mtime":1606632244700,"results":"219","hashOfConfig":"160"},{"size":8469,"mtime":1621930226784,"results":"220","hashOfConfig":"160"},{"size":528,"mtime":1610685674059,"results":"221","hashOfConfig":"160"},{"size":9224,"mtime":1616557224669,"results":"222","hashOfConfig":"160"},{"size":1787,"mtime":1616653881813,"results":"223","hashOfConfig":"160"},{"size":2164,"mtime":1612704387130,"results":"224","hashOfConfig":"160"},{"size":3638,"mtime":1612883464370,"results":"225","hashOfConfig":"160"},{"size":5496,"mtime":1616047460231,"results":"226","hashOfConfig":"160"},{"size":3856,"mtime":1614413325882,"results":"227","hashOfConfig":"160"},{"size":369,"mtime":1618806508259,"results":"228","hashOfConfig":"160"},{"size":2595,"mtime":1618302783137,"results":"229","hashOfConfig":"160"},{"size":613,"mtime":1618367661340,"results":"230","hashOfConfig":"160"},{"size":412,"mtime":1618300152544,"results":"231","hashOfConfig":"160"},{"size":1029,"mtime":1618380230546,"results":"232","hashOfConfig":"160"},{"size":13379,"mtime":1618296477089,"results":"233","hashOfConfig":"160"},{"size":3097,"mtime":1618293450998,"results":"234","hashOfConfig":"160"},{"size":381,"mtime":1610810964974,"results":"235","hashOfConfig":"160"},{"size":631,"mtime":1618370306269,"results":"236","hashOfConfig":"160"},{"size":772,"mtime":1612932746035,"results":"237","hashOfConfig":"160"},{"size":7285,"mtime":1616139050625,"results":"238","hashOfConfig":"160"},{"size":1289,"mtime":1610863400313,"results":"239","hashOfConfig":"160"},{"size":3486,"mtime":1610816464759,"results":"240","hashOfConfig":"160"},{"size":2848,"mtime":1612936417154,"results":"241","hashOfConfig":"160"},{"size":1864,"mtime":1611039564908,"results":"242","hashOfConfig":"160"},{"size":8053,"mtime":1621320154129,"results":"243","hashOfConfig":"160"},{"size":481,"mtime":1616906168324,"results":"244","hashOfConfig":"160"},{"size":970,"mtime":1610810551110,"results":"245","hashOfConfig":"160"},{"size":1201,"mtime":1612495094572,"results":"246","hashOfConfig":"160"},{"size":1621,"mtime":1611213887222,"results":"247","hashOfConfig":"160"},{"size":1563,"mtime":1611038792529,"results":"248","hashOfConfig":"160"},{"size":533,"mtime":1610810725893,"results":"249","hashOfConfig":"160"},{"size":218,"mtime":1610810004627,"results":"250","hashOfConfig":"160"},{"size":340,"mtime":1610810041233,"results":"251","hashOfConfig":"160"},{"size":4827,"mtime":1610810011559,"results":"252","hashOfConfig":"160"},{"size":65,"mtime":1615174020594,"results":"253","hashOfConfig":"160"},{"size":2536,"mtime":1615439241590,"results":"254","hashOfConfig":"160"},{"size":8415,"mtime":1620620698658,"results":"255","hashOfConfig":"160"},{"size":5331,"mtime":1621493870903,"results":"256","hashOfConfig":"160"},{"size":796,"mtime":1616568511562,"results":"257","hashOfConfig":"160"},{"size":334,"mtime":1611896764916,"results":"258","hashOfConfig":"160"},{"size":9367,"mtime":1617525604463,"results":"259","hashOfConfig":"160"},{"size":8359,"mtime":1620804710922,"results":"260","hashOfConfig":"160"},{"size":1398,"mtime":1612883526326,"results":"261","hashOfConfig":"160"},{"size":2738,"mtime":1614153535248,"results":"262","hashOfConfig":"160"},{"size":606,"mtime":1614566728735,"results":"263","hashOfConfig":"160"},{"size":913,"mtime":1615532004332,"results":"264","hashOfConfig":"160"},{"size":1420,"mtime":1618378715471,"results":"265","hashOfConfig":"160"},{"size":575,"mtime":1618370444964,"results":"266","hashOfConfig":"160"},{"size":6889,"mtime":1618298785792,"results":"267","hashOfConfig":"160"},{"size":342,"mtime":1610809231975,"results":"268","hashOfConfig":"160"},{"size":427,"mtime":1616136296683,"results":"269","hashOfConfig":"160"},{"size":194,"mtime":1610287566559,"results":"270","hashOfConfig":"160"},{"size":470,"mtime":1611500285060,"results":"271","hashOfConfig":"160"},{"size":386,"mtime":1609859521995,"results":"272","hashOfConfig":"160"},{"size":3452,"mtime":1617172923387,"results":"273","hashOfConfig":"160"},{"size":969,"mtime":1612941158046,"results":"274","hashOfConfig":"160"},{"size":3948,"mtime":1611902322953,"results":"275","hashOfConfig":"160"},{"size":3272,"mtime":1614413852536,"results":"276","hashOfConfig":"160"},{"size":4429,"mtime":1610810995823,"results":"277","hashOfConfig":"160"},{"size":1332,"mtime":1618733190216,"results":"278","hashOfConfig":"160"},{"size":4418,"mtime":1616921036877,"results":"279","hashOfConfig":"160"},{"size":2622,"mtime":1610810804083,"results":"280","hashOfConfig":"160"},{"size":47,"mtime":1610810670546,"results":"281","hashOfConfig":"160"},{"size":3641,"mtime":1619161303026,"results":"282","hashOfConfig":"160"},{"size":10603,"mtime":1619508913279,"results":"283","hashOfConfig":"160"},{"size":2691,"mtime":1612855842572,"results":"284","hashOfConfig":"160"},{"size":2535,"mtime":1617679247726,"results":"285","hashOfConfig":"160"},{"size":2001,"mtime":1618374427237,"results":"286","hashOfConfig":"160"},{"size":3033,"mtime":1618373754783,"results":"287","hashOfConfig":"160"},{"size":11091,"mtime":1616043515885,"results":"288","hashOfConfig":"160"},{"size":2201,"mtime":1610812159008,"results":"289","hashOfConfig":"160"},{"size":317,"mtime":1612943404932,"results":"290","hashOfConfig":"160"},{"size":1702,"mtime":1612941072413,"results":"291","hashOfConfig":"160"},{"size":5948,"mtime":1610810558402,"results":"292","hashOfConfig":"160"},{"size":394,"mtime":1610031357760,"results":"293","hashOfConfig":"160"},{"size":672,"mtime":1612494399533,"results":"294","hashOfConfig":"160"},{"size":289,"mtime":1610810606887,"results":"295","hashOfConfig":"160"},{"size":41,"mtime":1613108363481,"results":"296","hashOfConfig":"160"},{"size":772,"mtime":1610810018688,"results":"297","hashOfConfig":"160"},{"size":2544,"mtime":1619500106734,"results":"298","hashOfConfig":"160"},{"size":2021,"mtime":1610810676726,"results":"299","hashOfConfig":"160"},{"size":534,"mtime":1611896770248,"results":"300","hashOfConfig":"160"},{"size":3555,"mtime":1621930233415,"results":"301","hashOfConfig":"160"},{"size":574,"mtime":1609854468131,"results":"302","hashOfConfig":"160"},{"size":1605,"mtime":1612883486004,"results":"303","hashOfConfig":"160"},{"size":5492,"mtime":1614413097689,"results":"304","hashOfConfig":"160"},{"size":1543,"mtime":1618380612507,"results":"305","hashOfConfig":"160"},{"size":685,"mtime":1610810699159,"results":"306","hashOfConfig":"160"},{"size":184,"mtime":1610379821286,"results":"307","hashOfConfig":"160"},{"size":2466,"mtime":1614234618123,"results":"308","hashOfConfig":"160"},{"size":2255,"mtime":1617078660564,"results":"309","hashOfConfig":"160"},{"size":6076,"mtime":1613709544083,"results":"310","hashOfConfig":"160"},{"size":118,"mtime":1614579714463,"results":"311","hashOfConfig":"160"},{"size":91,"mtime":1610517406770,"results":"312","hashOfConfig":"160"},{"size":6368,"mtime":1617255105743,"results":"313","hashOfConfig":"160"},{"size":4347,"mtime":1610810649449,"results":"314","hashOfConfig":"160"},{"size":1696,"mtime":1612941158046,"results":"315","hashOfConfig":"160"},{"size":4244,"mtime":1615436665881,"results":"316","hashOfConfig":"160"},{"size":187,"mtime":1621930241506,"results":"317","hashOfConfig":"160"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},"vg192i",{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"320"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"328"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"338"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"323"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"323"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"338"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"338"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"323"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"320"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"320"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"323"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"349"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"328"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"323"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"320"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"328"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"323"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"338"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"338"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"338"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"323"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"320"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"320"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"338"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"328"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"328"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"338"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"338"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"320"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"338"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"323"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"338"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"323"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"338"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"659","messages":"660","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"323"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\develop-react\\blog-app\\src\\App.jsx",[],["676","677"],"D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js",[],["678","679"],"D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js",[],["680","681"],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx",["682"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostListGrid = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid c-post-list-grid\">\r\n           <div className=\"l-row\">\r\n                {  postsSort().length > 0 &&(\r\n                     postsSort().map(post=> (\r\n                        post.topImages.map(topImage=>(\r\n                            <div key={topImage.id} \r\n                                className=\"l-col-4\" \r\n                                onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                            >\r\n                                <img src={topImage.path} \r\n                                   alt={post.title} \r\n                                   className=\"c-image-fit-cover\"/>\r\n                            </div>\r\n                        ))\r\n                    ))\r\n                )}\r\n           </div>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostListGrid \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\PostPage.jsx",[],["683","684"],"D:\\develop-react\\blog-app\\src\\templates\\Landing.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx",["685","686"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport {fetchStages} from '../reducks/stage/operators'\r\nimport {getStages} from '../reducks/stage/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport{PostsInStage} from '../components/stage/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap', \r\n      width: '100%',\r\n    },\r\n    heading:{\r\n        color:'rgba(0, 0, 0, 0.8)',\r\n    },\r\n    subHeading:{\r\n        color:'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    accordion:{\r\n        width:'100%',\r\n    },\r\n    summary:{\r\n        width:'100%',\r\n        height:'100px',\r\n        display:'flex',\r\n        flexFlow:'row wrape',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        padding:'0 .8rem' \r\n    },\r\n    stageImage:{\r\n        width:'auto',\r\n        height:'100%',\r\n        display:'block',\r\n        marginRight:'1.6rem'\r\n    }\r\n  }));\r\n\r\nconst StageListGridLine = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchStages())     \r\n    },[])   \r\n\r\n    return ( \r\n        <div className=\"l-container \">\r\n            <div className=\"l-section \">\r\n                    { stages.length > 0 &&(\r\n                        stages.map(stage => (\r\n                            <Accordion className={classes.accordion} key={stage.id}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                >\r\n                                    <div className={classes.summary}>\r\n                                        <div>\r\n                                            <div className={classes.subHeading}>\r\n                                                <span className=\".h4\">STAGE{stage.stageNo}-</span>\r\n                                                <span className=\"p\">{stage.stageYear}</span>\r\n                                            </div>\r\n                                            <h4 className={classes.heading}>{stage.stage}</h4>\r\n                                        </div>\r\n                                        <img src={stage.images[0].path} alt=\"\" className={classes.stageImage}/>\r\n                                    </div>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <PostsInStage stage={stage}/> \r\n                                </AccordionDetails>\r\n                            </Accordion> \r\n                        ))\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StageListGridLine \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\LandingRoot.jsx",["687","688"],"import React,{useEffect,useState,useRef} from 'react' \r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {fetchStages } from '../reducks/stage/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport { getStages } from '../reducks/stage/selectors'\r\nimport {ReactCurtainsSlideshowGSAP, PostsArea,StagesArea} from '../components/landing/index'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { gsap} from \"gsap\";\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    //loading screen \r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n        backgroundColor:'black',\r\n        '& p':{ \r\n            margin:'16px'\r\n        },\r\n        display:'flex',\r\n        justifyContent:'center', \r\n        alignItems:'center',\r\n        flexDirection:'column',\r\n        \r\n      },\r\n    \r\n    root:{\r\n        width:'100%',\r\n        height:'100%',\r\n        overflow:'hidden'\r\n    },\r\n    stage:{\r\n        margin:0,\r\n        padding:0,\r\n    },\r\n    title:{ \r\n        dispaly:'fixed',\r\n        width:'100%',\r\n        height:'100%',\r\n        overflow:'hidden',\r\n        textAling:'center',\r\n        color:'white',\r\n        padding:'2rem 1rem',\r\n    },\r\n    main: {\r\n        display:'flex',\r\n        flexWrap:'wrap',\r\n        flexDirection:'column',\r\n        height:'50vh',\r\n        willChange: 'transform',\r\n      },\r\n      \r\n    section: {\r\n        background: ' hsl(0, 0%, 96%)',  //$white-ter \r\n        height:'100%',\r\n        width: '60vw', \r\n        marginRight: '4vw',\r\n        'nth-child(2n)': {\r\n            background: '#eee',\r\n        },\r\n    },\r\n    top: {\r\n        minHeight: '50vh',\r\n        width: '100%',\r\n        overflowX: 'hidden',\r\n    },\r\n    //header--- \r\n    landingWraper:{\r\n        textAlign:'center', \r\n        width:'100%', \r\n    },\r\n    landingHeader: {\r\n        minHeight: 'calc(100vh - 6.4rem)',\r\n        margin: '0 auto 0 auto', \r\n        position:'relative',\r\n        overflow:'hidden',\r\n    },\r\n    // posts\r\n    posts: {\r\n        minHeight: '50vh',\r\n        width: '100vw',\r\n        overflowX: 'hidden', \r\n    },\r\n    landingPostsWraper:{\r\n        margin: '0 auto 100px auto',\r\n        overflow:'hidden',\r\n        backgroundColor:'hsl(0, 0%, 7%)'//$black-bis\r\n    },\r\n    postArea:{\r\n        width:'100%',\r\n        margin: '0 auto',\r\n        // md 960 \r\n        [theme.breakpoints.up('md')]: {  \r\n            width:'960px',\r\n            height:'640px',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width:'1200px',\r\n            height:'900px',\r\n        },\r\n    }\r\n}))  \r\n\r\nconst LandingRoot = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const postsAll = getPosts(selector)\r\n    const stagesAll = getStages(selector)\r\n\r\n    const [width,setWidth] = useState(window.innerWidth)\r\n    const [height,setHeight] = useState(window.innerHeight)\r\n\r\n    const [posts,setPosts] = useState([])\r\n    const [stages,setStages] = useState([])\r\n    const displayNumber = 4 //4投稿表示\r\n    const displayYear = 2 //今年と昨年表示\r\n\r\n    let stagesBox = useRef(null)\r\n    let postsBox = useRef(null)\r\n    let container = useRef(null)\r\n    const [bottomMarginTop,setbottomMarginTop] = useState(0)\r\n    let titleStage = useRef(null)\r\n    let titlePosts = useRef(null)\r\n    \r\n    \r\n    // Gsap fadein arrey\r\n    const revealRefs = useRef([])\r\n    revealRefs.current = []\r\n    // セクションへのすべての参照をrevealRefs.current配列に追加する\r\n    const addToRefs = el => {\r\n\r\n        console.log('addToRefs');\r\n        // console.log(el);\r\n        if(el && !revealRefs.current.includes(el)){\r\n            revealRefs.current.push(el)\r\n            // console.log(revealRefs.current);\r\n            console.log(revealRefs.current.el);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        // 我々は持っているすべてのセクションへのアクセスをを使用して新しいGSAPトゥイーンを作成し。次に、それらをループして、scrollTriggerます。\r\n        revealRefs.current.forEach((el,index)=> {\r\n            gsap.fromTo(el,\r\n                { autoAlpha:0},\r\n                { duration:1,\r\n                    autoAlpha:1,\r\n                    ease:'none',\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el,\r\n                        start:`top center+=100`,\r\n                        // end: \"center top\",\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers: true,\r\n                        pin: false, \r\n                    }\r\n                }\r\n            )\r\n        })\r\n    },[revealRefs])\r\n\r\n    //gsap scrolltrigger horizontal\r\n    useEffect(()=>{\r\n        console.log('useEffect')\r\n        console.log('container.current.scrollWidth',container.current.scrollWidth);\r\n        console.log('document.documentElement.clientWidth',document.documentElement.clientWidth);\r\n        console.log('container.current.offsetWidth',container.current.offsetWidth);\r\n        setbottomMarginTop(document.documentElement.clientWidth)\r\n\r\n        gsap.to(container.current, {\r\n            x: () => -(container.current.scrollWidth - \r\n                document.documentElement.clientWidth) + \"px\", \r\n            duration:.2,\r\n            scrollTrigger: {\r\n              start: \"center center\",\r\n              trigger: container.current,\r\n              invalidateOnRefresh: true,\r\n              pin: true, \r\n              scrub: 1,\r\n              anticipatePin: 1, // can help avoid flash \r\n              end: () => \"+=\" + container.current.offsetWidth,\r\n            }\r\n        })\r\n        gsap.fromTo(stagesBox.current,\r\n            { autoAlpha:0 },\r\n            { duration:.2,\r\n                autoAlpha:1,\r\n                ease:'power2.out',\r\n                scrollTrigger:{\r\n                    // scrub: 1,\r\n                    trigger:stagesBox.current,\r\n                    start:`top center+=100`,\r\n                    toggleActions:`play none none reverse`\r\n                    \r\n                }\r\n            }\r\n        )\r\n    },[{...container.current},{...stagesBox.current},width,height]) \r\n    // },[container,stagesBox,width,height]) \r\n    // },[container.current.scrollWidth,container.current.offsetWidth,stagesBox,width,height]) \r\n    \r\n\r\n    //fetch posts\r\n    useEffect(()=>{ \r\n        let postsSort = []\r\n        //投稿記事を選択------\r\n        postsSort = postsAll.filter(posts => posts.type === 'post')\r\n        // ソート降順\r\n        postsSort.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        setPosts(postsSort.slice(0, displayNumber))\r\n    },[postsAll])\r\n    // fetch stage filter 今年\r\n    useEffect(()=>{\r\n        const now = new Date();\r\n        const selectYear = now.getFullYear()\r\n        let stagesSort = []\r\n        stagesSort = stagesAll\r\n        stagesSort = \r\n            stagesAll.filter(stage => stage.stageYear > selectYear - displayYear)//strageYear:number\r\n        stagesSort.sort(function(a,b){\r\n            if(a.sort < b.sort) return -1;\r\n            if(a.sort > b.sort) return 1;\r\n            return 0;\r\n        });\r\n        setStages(stagesSort)\r\n    },[stagesAll])\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())  \r\n        dispatch(fetchStages())\r\n    },[dispatch])\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWidth(window.innerWidth);\r\n            setHeight(window.innerHeight); \r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => {\r\n          window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    });\r\n\r\n    return (\r\n        // <div className=\"l-container-fluid\">\r\n        //     <div className=\"l-section \">\r\n                <div className={classes.root} >\r\n                    {/* test display*/}\r\n                    {/* <div style={{color:'white'}}>\r\n                        <p>Window width {width}</p>\r\n                        <p>Window height {height}</p>\r\n                    </div> */}\r\n                    {/* content header slideshow with curtain.js */}\r\n                    <div className={classes.top} >\r\n                        <div className={classes.landingWraper}>\r\n                            <header className={classes.landingHeader} >\r\n                                <ReactCurtainsSlideshowGSAP posts={posts}/>\r\n                            </header>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* stage area with gsap scrollTggre horizontal  */}\r\n                    <aside id=\"containerWrapper\" \r\n                        className={classes.stage} \r\n                        ref={stagesBox}\r\n                    >\r\n                        <div className={classes.title} ref={titleStage}>\r\n                            <h3>STAGES</h3>\r\n                        </div>\r\n                        <main ref={container} className={classes.main}>\r\n                            {\r\n                                stages.map((stage) => (\r\n                                    <section \r\n                                        className={classes.section} \r\n                                        key={stage.id}>\r\n                                        <StagesArea stage={stage}/>\r\n                                    </section>\r\n                                ))\r\n                            }\r\n                        </main> \r\n                    </aside>\r\n                    \r\n                    {/* new post area   */}\r\n                    <div className={classes.posts} \r\n                        style={{marginTop:`${bottomMarginTop}px`}} \r\n                        ref={postsBox}>\r\n                        <div className={classes.title} ref={titlePosts}>\r\n                                <h3>POSTS</h3>\r\n                        </div>\r\n                        \r\n                        <div className={classes.landingPostsWraper}>\r\n                            {posts.map((post) => (\r\n                                <div key={post.id} ref={addToRefs}\r\n                                     className={classes.postArea}> \r\n                                    <PostsArea post={post} />  \r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div> \r\n\r\n                    {/* loading screen */}\r\n                    <Backdrop className={classes.backdrop} \r\n                                open={true} \r\n                                style={{display: postsAll.length > 0 ? \"none\" : \"flex\"}}\r\n                    >\r\n                        <CircularProgress color=\"inherit\" />\r\n                        <p>Now Loading....</p>\r\n                        \r\n                    </Backdrop> \r\n                </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default LandingRoot\r\n",["689","690"],"D:\\develop-react\\blog-app\\src\\templates\\LandingHorizontalScroll.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx",[],["691","692"],"D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\CanvasTest.jsx",["693","694","695","696"],"import React,{useState,useEffect} from 'react'\r\nimport image from '../assets/img/img4121_flat.jpg'\r\n// const canvasWidth = 600\r\n// const canvasHeight = 400\r\n\r\n\r\nconst CanvasTest = () => {\r\n    const [canvasWidth, setCanvasWidth] = useState(600)\r\n    const [canvasHeight, setCanvasHeight] = useState(400)\r\n\r\n    const handleResize = () => {\r\n        setCanvasWidth(window.innerWidth)\r\n        setCanvasHeight(window.innerHeight - 64 - 64 - 8) \r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n        window.addEventListener('resize',handleResize)    \r\n        return () => {\r\n            window.addEventListener('resize',handleResize)    \r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        /* START CONFIG VARS */\r\n        const displayText = 'DG Solutions';\r\n        const textColor = 'lightgrey';\r\n        const textStyle = '30px Arial';\r\n        const circleColor = 'red';\r\n        const positionRadius = 30;\r\n        const animSpeed = 1;\r\n        /* END CONFIG VARS */\r\n\r\n        let canvas = document.querySelector(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let img = new Image();\r\n        \r\n        \r\n            \r\n        \r\n        let frame = 0;\r\n        let textPosition = 40;\r\n\r\n\r\n        setInterval(function() {\r\n            frame++;\r\n            \r\n            let shiftText =  textPosition + (frame * animSpeed)\r\n            if( shiftText > 200 ){\r\n                frame = 0\r\n            }\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            ctx.beginPath();\r\n            ctx.fillStyle = textColor;\r\n            ctx.font = textStyle;\r\n            ctx.fillText(displayText, 60, shiftText);\r\n            ctx.globalCompositeOperation = 'xor';\r\n            ctx.fillStyle = circleColor;\r\n\r\n        \r\n            // let shiftX = Math.sin(frame / (360 / animSpeed) *  Math.PI) * positionRadius;\r\n            // let shiftY = Math.cos(frame / (360 / animSpeed) *  Math.PI) * positionRadius;\r\n        \r\n            // ctx.beginPath();\r\n            // ctx.arc(50 + shiftX, 130, 20, 0, 2*Math.PI);\r\n            // ctx.fill();\r\n            // ctx.beginPath();\r\n            // ctx.arc(250 - shiftX, 130, 20, 0, 2*Math.PI);\r\n            // ctx.fill();\r\n\r\n            ctx.fillStyle = 'red';\r\n            ctx.fillRect(0, 100, canvasWidth, 100);\r\n\r\n            // img.src = image;\r\n            // img.onload = function(){\r\n            //     ctx.drawImage(img, 60, 30, 300, 200);\r\n            // }\r\n            \r\n        }, 1000/40); \r\n\r\n       \r\n\r\n\r\n\r\n        //\r\n        // ctx.fillStyle = \"red\";\r\n        // ctx.fillRect(10, 10, 100, 50);\r\n\r\n        // Image オブジェクトを生成\r\n        // let img = new Image();\r\n        // img.src = image;//../assets/img/img4121_flat.jpg\r\n\r\n        // 画像読み込み終了してから描画\r\n        // 構文: 幅、高さを指定\r\n        //drawImage(image, x, y, width, height)\r\n        // img.onload = function(){\r\n        //     ctx.drawImage(img, 10, 10, 200, 150);\r\n        // }\r\n    },[])\r\n    // useEffect(() => {\r\n    //     window.addEventListener('mousemove', () => {});\r\n      \r\n    //     return () => {\r\n    //       window.removeEventListener('mousemove', () => {})\r\n    //     }\r\n    //   }, []) \r\n    return (\r\n        <div className=\"l-container\" >\r\n            <div className=\"l-section \" > \r\n                <div style={{display:'flex', justifyContent:'center', \r\n                    alignItems:'center',    \r\n                    width:'100%', \r\n                    height:'100%'}}>\r\n                    <canvas width={canvasWidth} height={canvasHeight} style={{border:'1px solid white'}}></canvas>\r\n                </div>\r\n                {/* <div >\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5 >Horizontal stage image 1</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 2</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 3</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 4</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 5</h5>\r\n                    </div>\r\n                </div> \r\n                <div >\r\n                    <h1>Horizontal stage title 1</h1>\r\n                    <h1>Horizontal stage title 2</h1>\r\n                    <h1>Horizontal stage title 3</h1>\r\n                    <h1>Horizontal stage title 4</h1>\r\n                    <h1>Horizontal stage title 5</h1>\r\n                </div>  */}\r\n                \r\n               \r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CanvasTest\r\n// 2021.4.14 removal animation-page\r\n\r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\HoverEffect.jsx",["697"],"import React,{useEffect,useRef} from 'react'\r\nimport hoverEffect from 'hover-effect';\r\nimport img21 from '../assets/hoverEffectImg/img/Img21.jpg'\r\nimport img22 from '../assets/hoverEffectImg/img/Img22.jpg'\r\nimport displacemeny1 from '../assets/hoverEffectImg/img/displacement/1.jpg'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        height:'100vh',\r\n        width:'100%',\r\n        color:'white'\r\n    },\r\n    myDiv:{\r\n        height:'30rem', \r\n        width:'30rem',\r\n        backgroundColor:'grey'\r\n    }\r\n}))\r\nconst HoverEffect = () => {\r\n    const classes = useStyles()\r\n    let myRef = useRef()\r\n    useEffect(()=>{\r\n        const  effect = new hoverEffect({\r\n            parent: myRef.current,\r\n            intensity: 0.3,\r\n            image1: img21,\r\n            image2: img22,\r\n            displacementImage: displacemeny1\r\n        })\r\n    })\r\n    return (\r\n        <div className={classes.myDiv}>\r\n            {/* <h1>Test</h1> */}\r\n            <div ref={myRef} className={classes.myDiv}></div>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default HoverEffect\r\n// https://github.com/robin-dela/hover-effect/issues/15\r\n// 2021.4.14 removal animation-page \r\n","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSlideshowGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSelectiveRenderTargets.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ComponentTransitionTest.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LoadingDispalyFetchDataTest.jsx",["698","699","700"],"import React,{useState, useEffect, useRef} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n        backgroundColor:'black',\r\n        '& p':{\r\n            margin:'16px'\r\n        },\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        flexDirection:'column',\r\n        \r\n      },\r\n}))\r\n\r\nconst LoadingDispalyFetchDataTest = () => {\r\n    const classes = useStyles()\r\n    // const [open, setOpen] = useState(true);\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    //   };\r\n    // const handleToggle = () => {\r\n    //     setOpen(!open);\r\n    //   };\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         handleClose()\r\n    //     }, 3000);\r\n    //   }, []);\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    console.log(posts);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts()) \r\n    }, [])  \r\n\r\n    return (\r\n        <>\r\n            <div className=\"l-container\" style={{display: posts.length > 0 ? \"block\" : \"none\"}}>\r\n                <div className=\"l-section \">\r\n                    <div className=\"c-admin-wrape\">\r\n                        <div>\r\n                            <h2>投稿一覧</h2>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                posts.length > 0 && (\r\n                                    posts.map((post) => (\r\n                                        <PostListCard key={post.id}\r\n                                            id={post.id} title={post.title} article={post.article}\r\n                                            postDate={post.postDate} type={post.type}\r\n                                            topImages={post.topImages} postImages={post.postImages}\r\n                                        />\r\n                                    ))\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Backdrop className={classes.backdrop} \r\n                        open={true} \r\n                        style={{display: posts.length > 0 ? \"none\" : \"flex\"}}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n                <p>Now Loading....</p>\r\n                \r\n            </Backdrop>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default LoadingDispalyFetchDataTest \r\n","D:\\develop-react\\blog-app\\src\\templates\\GsapHorizontal.jsx",["701","702","703"],"import React,{useRef,useEffect,useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\nconst useStyles = makeStyles((theme) => ({\r\n    body:{\r\n        '--text-color': '#111',\r\n        '--bg-color': '#b9b3a9',\r\n        fontFamily: 'termina, sans-serif',\r\n        color: 'var(--text-color)',\r\n        background: 'var(--bg-color)',\r\n        transition: '.5s ease-out',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        overscrollBehavior: 'none',//overscroll-behavior プロパティは、スクロール領域の境界に達したときにブラウザーが何をするかを設定します。\r\n    },\r\n    \r\n    section: {\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        position: 'relative',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n        gridGap: '2rem',\r\n        padding: '50px 10vw',\r\n        margin: 'auto',\r\n        placeItems: 'center',\r\n        border:'1px solid white'\r\n    },\r\n    horizontalScroll: {\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        left: 0,\r\n        // border:'3px solid red'\r\n      },\r\n    credit: {\r\n        fontFamily: 'Termina, sans-serif',\r\n        '& a': {\r\n            '--text-color': '#111',\r\n            color: 'var(--text-color)',\r\n        }\r\n    },\r\n    \r\n    pinWrap: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        padding: '50px 10vw',\r\n    \r\n        '& > *': {\r\n        minWidth: '60vw',\r\n        padding: '0 5vw',\r\n    }\r\n    },\r\n    \r\n    img:{\r\n        height: '80vh',\r\n        width: 'auto',\r\n        objectFit: 'cover',\r\n    },\r\n    h1:{\r\n        fontSize: '5rem',\r\n        lineHeight: 1,\r\n        fontWeight: 800,\r\n        marginBottom: '1rem',\r\n        position: 'absolute',\r\n        top: '10vw',\r\n        left: '10vw',\r\n        zIndex: 4,\r\n        overflowWrap: 'break-word',\r\n        hyphens: 'auto',//文字列を複数行にわたって折り返す際に、単語のハイフネーションを行う方法を指定します。\r\n        [theme.breakpoints.down('sm')]: {  \r\n            fontSize: '16vw',\r\n        },\r\n        // border:'1px solid grey',\r\n    },\r\n    h2:{\r\n        fontSize: '2rem',\r\n        maxWidth: '400px',\r\n        border:'1px solid grey'\r\n    },\r\n    p: {\r\n        position: 'absolute',\r\n        bottom: '10vw',\r\n        right: '10vw',\r\n        width: '200px',\r\n        lineHeight: 1.5,\r\n      },\r\n    span:{\r\n        display:'block'\r\n    }\r\n}))\r\n\r\nconst GsapHorizontal = () => {\r\n    const classes = useStyles()\r\n    const bodyRef = useRef(null)\r\n    const containerRef = useRef(null)\r\n\r\n    //test\r\n    const horizontalRef = useRef(null)\r\n\r\n    const sectionRefs = useRef([])\r\n    sectionRefs.current = []\r\n    const HorizontalSectionRefs = useRef([])\r\n    HorizontalSectionRefs.current = []\r\n    // セクションへのすべての参照をsectionRefs.current配列に追加する\r\n    const  addToRefs = el => {\r\n        // console.log('HorizontalSectionRefs');\r\n        // console.log('addToRefs el',el);\r\n        // if(el.querySelector(\".pinWrap\")){\r\n        //     console.log('pinWrap',el.querySelector(\".pinWrap\"));\r\n        // }\r\n        // section all chenge background color\r\n        if(el && !sectionRefs.current.includes(el) ){\r\n            sectionRefs.current.push(el)\r\n            // console.log('addToRefs el',el);\r\n            // console.log('addToRefs el',el.dataset.bgcolor);\r\n            // console.log('sectionRefs.current',sectionRefs.current);\r\n        }\r\n        //horizontal section slide\r\n        if(el && !HorizontalSectionRefs.current.includes(el) && el.querySelector(\".pinWrap\")){\r\n            HorizontalSectionRefs.current.push(el)\r\n            // console.log('HorizontalSectionRefs el ',el);\r\n            // console.log('HorizontalSectionRefs.current',HorizontalSectionRefs.current);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        // Pinning and horizontal scrolling\r\n        // HorizontalSectionRefs.current.forEach(horizontalSection =>{\r\n            \r\n        //     let pinWrap = horizontalSection.querySelector(\".pinWrap\")\r\n            \r\n        //     let pinWrapWidth = pinWrap.offsetWidth\r\n        //     let horizontalScrollLength = pinWrapWidth - window.innerWidth\r\n\r\n        //     console.log(horizontalSection);\r\n        //     console.log('pinWrap',pinWrap);\r\n        //     console.log('pinWrapWidth',pinWrapWidth);\r\n        //     console.log('window.innerWidth',window.innerWidth);\r\n        //     console.log('horizontalScrollLength',horizontalScrollLength);\r\n        //     gsap.to(pinWrap,{\r\n        //             x: -horizontalScrollLength,\r\n        //             ease: \"none\", \r\n        //             scrollTrigger:{\r\n        //                 scroller:containerRef.current,\r\n        //                 scrub:true,\r\n        //                 trigger:horizontalSection,\r\n        //                 pin:true,\r\n        //                 start:\"top top\",\r\n        //                 end:()=> `+=${pinWrapWidth}`,\r\n        //                 invalidateOnRefresh: true,\r\n        //                 anticipatePin: 1,\r\n        //             },\r\n        //     })\r\n        // })\r\n        // console.log('useEffect');\r\n        // console.log('horizontalRef.current.scrollWidth',horizontalRef.current.scrollWidth);\r\n        // console.log('document.documentElement.clientWidth',document.documentElement.clientWidth);\r\n        // console.log('horizontalRef.current.offsetWidth',horizontalRef.current.offsetWidth);\r\n       \r\n        gsap.to(horizontalRef.current, {\r\n            x: () => -(horizontalRef.current.scrollWidth - document.documentElement.clientWidth) + \"px\",\r\n            scrollTrigger: {\r\n                scroller:containerRef.current,\r\n              start: \"center center\",\r\n              trigger: horizontalRef.current,\r\n              invalidateOnRefresh: true,\r\n              pin: true,\r\n              scrub: 1,\r\n            //   anticipatePin: 1, // can help avoid flash\r\n              end: () => \"+=\" + horizontalRef.current.offsetWidth\r\n            }\r\n          })\r\n\r\n    },[bodyRef.current,containerRef.current,sectionRefs.current,HorizontalSectionRefs.current,addToRefs,    horizontalRef.current])\r\n    return (\r\n        <div className={classes.body} ref={bodyRef}>\r\n            \r\n            <div className={classes.container} ref={containerRef}>\r\n                <section className={classes.section} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#032f35\" ref={addToRefs}>\r\n                    <div>\r\n                        <h1>\r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-1\" className={classes.span}>Horizontal</span> \r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-2\" className={classes.span}>scroll</span> \r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-3\" className={classes.span}>+ colors</span></h1>\r\n                        <p data-scroll data-scroll-speed=\"2\" data-scroll-delay=\"0.2\">with GSAP ScrollTrigger & Locomotive Scroll. NOT WORKING :(</p>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className={classes.horizontalScroll} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#815946\" ref={addToRefs} >\r\n                    <div className={classes.pinWrap + \" pinWrap\"} ref={horizontalRef}>\r\n                        <h2>This whole horizontal section should be brown</h2>\r\n                        <img src=\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                    </div>\r\n                </section>\r\n\r\n                <section className={classes.section} data-textcolor=\"#032f35\" data-bgcolor=\"#bcb8ad\" ref={addToRefs}>\r\n                    <div>\r\n                        <h2 data-scroll data-scroll-speed=\"1\">\r\n                            <span>This should be a light cream background</span>\r\n                        </h2>\r\n                    </div>\r\n                </section>\r\n        \r\n                <section className={classes.section} data-bgcolor=\"#e3857a\" data-textcolor=\"#f1dba7\" ref={addToRefs}>\r\n                    <img src=\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"\" />\r\n                    <h2 data-scroll data-scroll-speed=\"1\">This should be a pink background</h2>\r\n                </section>\r\n                <section className={classes.horizontalScroll} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#815946\"  ref={addToRefs}>\r\n                    <div className={classes.pinWrap + \" pinWrap\"} >\r\n                        <h2>This whole horizontal section should be brown</h2>\r\n                        <img src=\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                    </div>\r\n                </section>\r\n                <section className={classes.section} data-textcolor=\"#032f35\" data-bgcolor=\"#bcb8ad\" ref={addToRefs}>\r\n                    <div>\r\n                        <h2 data-scroll data-scroll-speed=\"1\">\r\n                            <span>This should be a light cream background</span>\r\n                        </h2>\r\n                    </div>\r\n                </section>\r\n        \r\n                <section className={classes.section} data-bgcolor=\"#e3857a\" data-textcolor=\"#f1dba7\" ref={addToRefs}>\r\n                    <img src=\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"\" />\r\n                    <h2 data-scroll data-scroll-speed=\"1\">This should be a pink background</h2>\r\n                </section>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default GsapHorizontal\r\n// 2021.4.13 removal animation-page\r\n","D:\\develop-react\\blog-app\\src\\templates\\GsapScrollingTrigerTest.jsx",["704","705","706"],"import React,{useRef,useEffect,useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content:{\r\n        transition:'1s ease-out',\r\n        // overflowX:'hidden',\r\n        color:'white',\r\n        backgroundColor:'red',\r\n        // border:'1px solid green',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n    },\r\n    container:{\r\n        // border:'5px solid yellow',\r\n        // width:'100%',\r\n        // height:'100%',\r\n    },\r\n    section:{\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        left: 0,\r\n        border:'3px solid red',\r\n        margin:0,\r\n        // padding:'0 0 50px 0',\r\n        position:'relative',\r\n    },\r\n    pinWrap: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        padding: '50px 10vw',\r\n    \r\n        '& > *': {\r\n            minWidth: '60vw',\r\n            padding: '0 5vw',\r\n            border:'1px solid blue'\r\n        },\r\n        border:'5px solid red'\r\n    },\r\n    // img:{\r\n    //     height: '80vh',\r\n    //     width: 'auto',\r\n    //     objectFit: 'cover',\r\n    // },\r\n}))\r\n\r\nconst sectionElements = [\r\n    {   id:1,\r\n        img:\"https://images.pexels.com/photos/3062948/pexels-photo-3062948.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n        dataBgcolor:\"#bcb8ad\",\r\n        dataTextcolor:\"#032f35\"},\r\n    {   id:2,\r\n        img:\"https://images.pexels.com/photos/4467879/pexels-photo-4467879.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n        dataBgcolor:\"#eacbd1\",\r\n        dataTextcolor:\"#536fae\"},\r\n    {   id:3,\r\n        img:\"https://images.pexels.com/photos/5604966/pexels-photo-5604966.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n        dataBgcolor:\"#536fae\",\r\n        dataTextcolor:\"#eacbd1\"},\r\n    {   id:4,\r\n        img:\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n        dataBgcolor:\"#e3857a\",\r\n        dataTextcolor:\"#f1dba7\"},\r\n]\r\n\r\nconst GsapScrollingTrigerTest = () => {\r\n    const classes = useStyles()\r\n\r\n    // const [maxWidth, setMaxWidth] = useState(0)\r\n\r\n    const contentRef = useRef(null)\r\n    const containerRef = useRef(null)\r\n    //section\r\n    const sectionRefs = useRef([])\r\n    sectionRefs.current = []\r\n    //Horizontal Scroll\r\n    const HorizontalSectionRefs = useRef([])\r\n    HorizontalSectionRefs.current = []\r\n\r\n\r\n    const addToRefs = el => {\r\n        // console.log('addToRefs');\r\n        if(el && !sectionRefs.current.includes(el)){\r\n            sectionRefs.current.push(el)\r\n            // console.log('addToRefs el',el);\r\n            // console.log(el.dataset.bgcolor);\r\n            // console.log('sectionRefs.current',sectionRefs.current);\r\n        }\r\n        if(el && !HorizontalSectionRefs.current.includes(el) && el.querySelector(\".pinWrap\")){\r\n            HorizontalSectionRefs.current.push(el)\r\n            // console.log('el.querySelector(\".pinWrap\")',el.querySelector(\".pinWrap\"))\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        //Change Color\r\n        \r\n        sectionRefs.current.forEach((el,i)=>{\r\n            const prevBg = i === 0 ? \"\" : sectionRefs.current[i - 1].dataset.bgcolor;\r\n            const prevText = i === 0 ? \"\" :sectionRefs.current[i - 1].dataset.textcolor;\r\n            ScrollTrigger.create({\r\n                trigger:el,\r\n                start:\"top 50%\",\r\n                marker:true,\r\n                id:`bg-${i+1}`,\r\n                onEnter:()=>\r\n                    gsap.to(contentRef.current,{\r\n                        backgroundColor:el.dataset.bgcolor,\r\n                        color:el.dataset.textcolor,\r\n                        overwrite:\"auto\",\r\n                        marker:\"true\"\r\n                    }),\r\n                onLeaveBack:()=>\r\n                    gsap.to(contentRef.current,{\r\n                        backgroundColor:prevBg,\r\n                        color:prevText,\r\n                        overwrite:\"auto\",\r\n                        marker:\"true\"\r\n                    })\r\n            })\r\n        })\r\n\r\n        //Horizontal Scroll\r\n        HorizontalSectionRefs.current.forEach((horizontalSection, i )=>{\r\n            console.log(horizontalSection);\r\n            let pinWrap = horizontalSection.querySelector(\".pinWrap\")\r\n            console.log('pinWrap',pinWrap);\r\n            let pinWrapWidth = pinWrap.offsetWidth\r\n            let horizontalScrollLength = pinWrapWidth - window.innerWidth\r\n            console.log('pinWrapWidth',pinWrapWidth);\r\n            console.log('pinWrap.offsetWidth',pinWrap.offsetWidth);\r\n            console.log('pinWrap.clientWidth', \r\n            horizontalSection.querySelector(\".pinWrap\").clientWidth);\r\n            console.log('window.innerWidth',window.innerWidth);\r\n            console.log('horizontalScrollLength',horizontalScrollLength);\r\n            gsap.to(pinWrap,{\r\n                x: -horizontalScrollLength,\r\n                ease: \"none\", \r\n                scrollTrigger:{\r\n                    id:`section-${i+1}`,\r\n                    scrub:true,\r\n                    trigger:horizontalSection,\r\n                    pin:true,\r\n                    start:\"top top\",\r\n                    end:()=> `+=${pinWrapWidth}`,\r\n                    invalidateOnRefresh: true,\r\n                },\r\n            })\r\n        })\r\n        ScrollTrigger.refresh();\r\n        \r\n\r\n    },[{...sectionRefs},{...HorizontalSectionRefs}])\r\n   \r\n    return (\r\n        <div className={classes.content} ref={contentRef}>\r\n            <div className={classes.container} ref={containerRef}>\r\n                {sectionElements.map((element,i) =>(\r\n                    <section className={classes.section} \r\n                        data-bgcolor={element.dataBgcolor} \r\n                        data-textcolor={element.dataTextcolor} \r\n                        key={element.id}\r\n                        ref={addToRefs}\r\n                    >\r\n                        {/* <h1  className={classes.h1}>\r\n                            SECTION{i+1} \r\n                        </h1>\r\n                        <img src={element.img} \r\n                            alt=\"\" \r\n                            className={classes.img}/> */}\r\n\r\n                        \r\n                        <div className={classes.pinWrap + \" pinWrap\"} >\r\n                            <h2>aaa This whole horizontal section should be brown</h2>\r\n                            <img src=\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                            <img src=\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                            <img src=\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                            <h1>triger point</h1>\r\n                        </div>\r\n\r\n                       \r\n                    </section>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default GsapScrollingTrigerTest\r\n// 2021.4.13 removal animation-page\r\n//ok ok ok \r\n\r\n","D:\\develop-react\\blog-app\\src\\Auth.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultiplePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\transition\\ChildrenTest.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js",[],"D:\\develop-react\\blog-app\\src\\firebase\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SinglePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\about\\TimelineSection.jsx",["707","708"],"import React,{useRef,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport {gsap,Power2} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\nconst useStyles = makeStyles((theme) => ({\r\n    dateColor:{\r\n        color:'grey'\r\n    }\r\n  }));\r\nconst histories = [\r\n    {id:'200901',date:'2009',name:'TOURdeHDR First generation',variant:'default', color:'primary',link:'http://tourdehrd.blog62.fc2.com/'},\r\n    {id:'201301',date:'2013',name:'TOURdeHDR+ Second generation',variant:'default', color:'primary', link:'http://tourdehdr.sakuratan.com/site2/'},\r\n    {id:'201501',date:'2013-15',name:'TOURdeHDR+ Gallery 2013-15',variant:'default', color:'primary', link:'http://tourdehdr.sakura.ne.jp/web3/tourdehdr_web3/'},\r\n    {id:'201601',date:'2016',name:'TOURdeHDR+ Gallery',variant:'outlined', color:'grey', link:'http://tourdehdr.sakura.ne.jp/web3/cyber-shot-gallery/'},\r\n    {id:'201602',date:'2016',name:'TOURdeHDR+ AWARD 2016',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/cyber-shot-gallery/nomi.html'},\r\n    {id:'201701',date:'2017',name:'TOURdeHDR+ Gallery',variant:'outlined', color:'grey', link:'http://tourdehdr.sakura.ne.jp/web3/tourdehdr-gallery2017/index.html'},\r\n    {id:'201702',date:'2017',name:'TOURdeHDR+ AWARD 2017',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/digest2017/#/'},\r\n    {id:'201801',date:'2018',name:'TOURdeHDR+ AWARD Gallery',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/bgvideo-2018/#/'},\r\n    {id:'202001',date:'2020',name:'h-works Third generation',variant:'default', color:'primary', link:'https://tourdehdr3.netlify.app/'},\r\n    {id:'202101',date:'2021',name:'h-works 4th generation',variant:'default', color:'primary', link:'https://blog-app-4302d.web.app/'},\r\n]\r\n\r\nconst TimelineSection = props => {\r\n    const classes = useStyles()\r\n    const historyRef = useRef()\r\n    const itemsRefs = useRef([])\r\n    itemsRefs.current = []\r\n    const addToRefs = el => {\r\n        if(el && !itemsRefs.current.includes(el)){\r\n            itemsRefs.current.push(el)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        itemsRefs.current.forEach((el,index)=> {\r\n            gsap.fromTo(el,\r\n                { autoAlpha:0},\r\n                { duration:1,\r\n                    autoAlpha:1,\r\n                    ease:'none',\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el,\r\n                        start:`top center+=100`,\r\n                        // end: \"center top\",\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers: true,\r\n                        pin: false, \r\n                    }\r\n                }\r\n            )\r\n        })\r\n        gsap.fromTo(historyRef.current,\r\n            {autoAlpha: 0},\r\n            {duration: .5,autoAlpha: 1, ease: Power2.easeOut,\r\n             scrollTrigger: {\r\n                trigger: historyRef.current,\r\n                start: \"top 50%\", // when the top of the trigger hits the top of the viewport\r\n                scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n                // markers:true,\r\n                once:true,\r\n            }})\r\n    },[])\r\n    return (\r\n        <div className=\"c-timeline-wraper\">\r\n            <h5 ref={historyRef}>BLOG HISTORY</h5>\r\n            <Timeline align=\"alternate\">\r\n                {histories.map(history=>(\r\n                        <TimelineItem key={history.id} ref={addToRefs}>\r\n                            <TimelineOppositeContent>\r\n                                {/* <Typography > */}\r\n                                    <p>{history.date}</p>\r\n                                {/* </Typography> */}\r\n                            </TimelineOppositeContent>\r\n                            <TimelineSeparator>\r\n                                <TimelineDot variant={history.variant} color={history.color}/>\r\n                                <TimelineConnector />\r\n                            </TimelineSeparator>\r\n                            <TimelineContent >\r\n                                {/* <Typography> */}\r\n                                    <Link href={history.link}  target=\"_blank\" color=\"inherit\">\r\n                                        <p>{history.name}</p> \r\n                                    </Link>\r\n                                {/* </Typography> */}\r\n                            </TimelineContent>\r\n                        </TimelineItem> \r\n                ))}\r\n            </Timeline>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TimelineSection\r\n","D:\\develop-react\\blog-app\\src\\components\\about\\GlitchHeader.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx",["709"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst ReplaceImgesUpload = props => {\r\n    const classes = useStyles()\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => { \r\n\r\n                const id = props.images[props.index].id\r\n                const newImages = props.images.filter(image => image.id !== id)\r\n                const newImage = { id: fileName, path: downloadURL, description: 'new image' };\r\n                newImages.push(newImage)\r\n                props.setImages(newImages) \r\n                \r\n                // props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                // newBookmarks = bookmarks.filter(item !== article.id)\r\n\r\n\r\n                // dispatch(hideLoadingAction())\r\n                // props.setImages([newImage]) \r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>投稿画像を変更する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplaceImgesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx",["710"],"import React,{useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MultipleSelect } from '../UiKit/index'\r\nimport { getTags } from '../../reducks/tags/seloctors'\r\nimport { fetchTags } from '../../reducks/tags/operators'\r\n\r\nconst TagsArea = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const tags = getTags(selector)\r\n    \r\n\r\n    const handleChange = (selectedTags) => {\r\n        const selectedValue = []\r\n        if(selectedTags.length > 0 ){\r\n            selectedTags.forEach(selectedTag => {\r\n                const found = tags.find(tag => tag.id === selectedTag)\r\n                if (found){\r\n                    selectedValue.push(found)\r\n                }\r\n            })\r\n        }\r\n        props.setTgas(selectedValue)\r\n    }\r\n    const valueTags = (pTags) => {\r\n        if(pTags === []){\r\n            return []\r\n        }\r\n        const valueTags = []\r\n        pTags.forEach(pTag=>{\r\n            console.log(pTag.id);\r\n            console.log(pTag.name);\r\n            valueTags.push(pTag.id)\r\n        })\r\n        return valueTags\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTags())\r\n    }, [])  \r\n    \r\n    return (\r\n        <div>\r\n            <h3>TagsArea</h3>\r\n            <p>タグを選択してください</p>\r\n            <MultipleSelect\r\n                label={\"タグ\"}\r\n                // value={props.tags || []}\r\n                value={valueTags(props.tags)}\r\n                handleChange={handleChange}\r\n                options={tags}\r\n                required={true}\r\n            />\r\n            {/* <h1>tag name</h1>\r\n            {selected.length > 0 && (\r\n                selected.map(value => {\r\n                    <h1>value.name</h1>\r\n                })\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagsArea\r\n","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx",["711"],"import React from 'react'\r\nimport {useDispatch} from  'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrape:{\r\n        [theme.breakpoints.down('sm')]:{\r\n            margin:8,\r\n            width:'100%',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            margin:8,\r\n            width:'calc(50% - 16px )',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            margin:16,\r\n            width:'calc(25% - 32px)',\r\n            height:'auto'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent:'flex-start',\r\n        // alignItems:'flex-start',\r\n        height: '100%',\r\n    },\r\n    button:{\r\n        marginRight:0,\r\n        marginLeft:'auto',\r\n        padding:'0 16px'\r\n    },\r\n    chip:{\r\n        marginRight:4\r\n    },\r\n    cardActionArea:{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent:'flex-start',\r\n        alignItems:'flex-start',\r\n    },\r\n    cardAction:{\r\n        flexShrink: 0\r\n    }\r\n}))\r\n\r\nconst NewPostsArea = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const post = props.post\r\n    const handleClickTga =(ids,e) =>{\r\n        //投稿表示エリアのフィルターするキーを設定する\r\n        props.setFilter({\r\n            type:'tag',\r\n            key:ids.postId,\r\n            locationKey:'',\r\n            tagKey:ids.tagId,\r\n        })\r\n        props.setVolume(props.defaultVolume)\r\n    }\r\n    \r\n    return (\r\n        <Card className={classes.cardWrape}>\r\n            <CardActionArea className={classes.cardActionArea}>\r\n                {post.topImages.length > 0 && (\r\n                    post.topImages.map(image => (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={image.description}\r\n                            height=\"auto\"\r\n                            image={image.path}\r\n                            title={image.title}\r\n                            key={image.id}\r\n                        />\r\n                    ))\r\n                )} \r\n                <CardContent>\r\n                    <h4>{post.title}</h4>\r\n                    <p>{post.postDate.split('T')[0]}</p>\r\n                    <p>{post.location.name}</p>\r\n                    {post.tags.length > 0 && (\r\n                        post.tags.map(tag => (\r\n                            <span key={tag.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    label={tag.name}\r\n                                    onClick={(e) => handleClickTga({postId:post.id,tagId:tag.id},e)}\r\n                                    className={classes.chip}\r\n                                    clickable\r\n                                />\r\n                            </span>\r\n                        ))\r\n                    )} \r\n                </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    endIcon={<ChevronRightIcon/>}\r\n                    onClick={()=> dispatch(push('/post/detail/' + props.id ))}\r\n                    className={classes.button}\r\n                    >\r\n                    投稿を見る\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewPostsArea\r\n","D:\\develop-react\\blog-app\\src\\components\\vertical\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\LandingComponent.jsx",["712","713"],"import React,{useRef,useEffect} from 'react'\r\nimport {gsap,Power2} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {SlideshowArea} from './index'\r\n// import {SlideshowArea,HorizontalScrollArea} from './index'\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router' \r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    //loading screen \r\n    root: {\r\n        margin:0,\r\n        padding:0,\r\n      },\r\n    slideShowArea:{\r\n        width:'100%',\r\n        minHeight:'100vh',\r\n    },\r\n    HorizontalScrollArea:{\r\n        width:'100%',\r\n        minHeight:'100vh',\r\n    },\r\n    FadeinScrollArea:{\r\n        width:'100%',\r\n        minHeight:'100vh',\r\n        color:'white',\r\n    },\r\n    stageArea:{\r\n        display:'flex',\r\n        flexWrap:'wrap',\r\n        flexDirection:'column',\r\n        height:'50vh',\r\n        willChange: 'transform',\r\n    },\r\n    horezontalArea:{\r\n        background: ' hsl(0, 0%, 96%)',  //$white-ter \r\n        height:'100%',\r\n        width: '60vw', \r\n        marginRight: '4vw',\r\n        'nth-child(2n)': {\r\n            background: '#eee',\r\n        },\r\n    },\r\n    postArea:{\r\n        color:'white',\r\n        minHeight:'80vw',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'cneter',\r\n        alignItems:'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            minHeight:'40vw',\r\n            flexDirection:'row',\r\n            justifyContent:'space-between',\r\n            alignItems:'center',\r\n        },\r\n    },\r\n    postImageArea:{\r\n        width:'100%',\r\n        \r\n        // height:'60%',\r\n        [theme.breakpoints.up('md')]: {\r\n            height:'40vw',\r\n           width:'50vw',\r\n        },\r\n        // border:'1px solid white',\r\n    },\r\n    postSbscrive:{\r\n        width:'100%',\r\n        // height:'40%',\r\n        padding:'1rem 1rem',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            height:'40vw',\r\n            width:'50vw',\r\n            padding:'1rem 3rem',\r\n        },\r\n        \r\n    },\r\n    postImg:{\r\n        width:'100%',\r\n        height:'100%',\r\n        objectFit: 'contain',\r\n        // border:'1px solid yellow',\r\n    }, \r\n    postTitle:{\r\n        '& h3':{\r\n            margin:'0 1.6rem 1rem 1.6rem ',\r\n            fontWeight: '300',\r\n            fontSize:'1.8rem',\r\n            [theme.breakpoints.up('md')]: {\r\n                fontSize:'3rem',\r\n                margin:'0 3.2rem 3.2rem 3.2rem ',\r\n            },\r\n            [theme.breakpoints.up('lg')]: { \r\n                fontSize:'4rem',\r\n            },\r\n            cursor:'pointer',\r\n            '&:hover': {\r\n                opacity: .7\r\n            },\r\n        }\r\n    },\r\n    postText:{\r\n        color:'hsl(0, 0%, 98%)', \r\n        maxWidth: '50%',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: '80%',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: '50%',\r\n        },\r\n    },\r\n    linkbutton:{\r\n        fontSize:'1.5rem',\r\n        fontWeight:600,\r\n        margin:'.4rem 0 0 -1.2rem',\r\n        '& span':{\r\n            marginRight:'.4rem',\r\n        }\r\n    },\r\n    postHeader:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        margin:'0  0 .8rem 0',\r\n        [theme.breakpoints.up('md')]: {\r\n            margin:'4rem 0 0 0',\r\n        },\r\n        // border:'1px solid white',\r\n    },\r\n})) \r\nconst LandingComponent = (props) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    \r\n    // const posts = props.posts\r\n    // const stages = props.stages\r\n    const postsCover = props.postsCover\r\n    const covers = props.covers\r\n    // console.log('landingComponent');\r\n    // console.log(covers);\r\n    const slideShowAreaRef = useRef()\r\n    // const horizontalScrollAreaRef = useRef()\r\n    const fadeinScrollAreaRef = useRef()\r\n    const postHeaderRef = useRef()\r\n\r\n    const revealRefs = useRef([])\r\n    revealRefs.current = []\r\n    // セクションへのすべての参照をrevealRefs.current配列に追加する\r\n    const addToRefs = el => {\r\n        if(el && !revealRefs.current.includes(el)){\r\n            revealRefs.current.push(el)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{ \r\n        // gsap.registerPlugin(ScrollTrigger)\r\n        // gsap.fromTo(horizontalScrollAreaRef.current,\r\n        //         {\r\n        //             autoAlpha:0\r\n        //         },{ \r\n        //             autoAlpha:1,\r\n        //             ease:Power2.in,\r\n        //             scrollTrigger:{\r\n        //                 // scrub: 1,\r\n        //                 trigger:horizontalScrollAreaRef.current,\r\n        //                 start:`top center+=100`,\r\n        //                 toggleActions:`play none none reverse`,\r\n        //                 // markers:true, \r\n        //             }\r\n        //         }\r\n        // )\r\n\r\n        //posts area\r\n        gsap.fromTo(fadeinScrollAreaRef.current,\r\n                {\r\n                    autoAlpha:0\r\n                },{\r\n                    autoAlpha:1,\r\n                    ease:Power2.in,\r\n                    scrollTrigger:{\r\n                        // scrub: 1,\r\n                        trigger:fadeinScrollAreaRef.current,\r\n                        start:`top center+=100`,\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers:true, \r\n                    }\r\n                }\r\n        )\r\n        revealRefs.current.forEach((el,index)=> {\r\n            gsap.fromTo(el,\r\n                { autoAlpha:0},\r\n                { duration:.4,\r\n                    autoAlpha:1,\r\n                    ease:Power2.in,\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el,\r\n                        start:`top center+=100`,\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers: true,\r\n                    }\r\n                }\r\n            )\r\n            gsap.fromTo(el.querySelector('img'),1,\r\n                { opacity: 0, x: '100px', duration: 0},\r\n                { duration:.4,\r\n                    opacity: 1, \r\n                    x: 0,\r\n                    ease:Power2.in,\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el.querySelector('img'),\r\n                        start:`top center+=100`,\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers: true,\r\n                    }\r\n                }\r\n            )\r\n            gsap.fromTo(el.querySelector('section'),1,\r\n                { opacity: 0, x: '100px', duration: 0,},\r\n                { duration:.4,\r\n                    opacity: 1,\r\n                    delay:.5, \r\n                    x: 0,\r\n                    ease:Power2.in,\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el.querySelector('section'),\r\n                        start:`top center+=100`,\r\n                        toggleActions:`play none none reverse`,\r\n                        // markers: true,\r\n                    }\r\n                }\r\n            )\r\n        //   tl.fromTo(el.querySelector('.stageNo'),1,{opacity: 0, x: '100px', duration: 0},{opacity: 1, x: 0,})\r\n\r\n        }) \r\n\r\n    // },[horizontalScrollAreaRef.current,fadeinScrollAreaRef.current,revealRefs.current])\r\n    },[fadeinScrollAreaRef.current,revealRefs.current])\r\n    useEffect(()=>{\r\n        \r\n        gsap.fromTo(postHeaderRef.current,\r\n            {\r\n                autoAlpha:0,\r\n                x:'100px'\r\n            },{\r\n                autoAlpha:1,\r\n                x:0,\r\n                ease:Power2.in,\r\n                scrollTrigger:{\r\n                    // scrub: 1,\r\n                    trigger:postHeaderRef.current,\r\n                    start:`top center+=100`,\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers:true, \r\n                }\r\n            }\r\n    )\r\n    },[postHeaderRef.current])\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.slideShowArea}\r\n                 ref={slideShowAreaRef}\r\n            >\r\n                {/* <SlideshowArea posts={posts}/> */}\r\n                <SlideshowArea posts={covers}/>\r\n            </div>\r\n            {/* <div className={classes.HorizontalScrollArea}\r\n                 ref={horizontalScrollAreaRef}\r\n            >\r\n                <HorizontalScrollArea stages={stages} posts={posts} />\r\n            </div> */}\r\n            \r\n            \r\n            <div className={classes.FadeinScrollArea}\r\n                 ref={fadeinScrollAreaRef}\r\n            >\r\n                <div ref={postHeaderRef} className={classes.postHeader}>\r\n                        <h3>POSTS</h3>\r\n                        <p>最新の投稿</p>\r\n                </div>\r\n                <div>\r\n                    {postsCover.map((post) => (\r\n                        <div className={classes.postArea}\r\n                             key={post.id} \r\n                             ref={addToRefs}\r\n                        > \r\n                           \r\n                            <div className={classes.postImageArea + \" img\" }> \r\n                                <img src={post.topImages[0].path} \r\n                                    alt={post.title} \r\n                                    key={post.topImages[0].id}\r\n                                    className={classes.postImg}\r\n                                />\r\n                            </div>\r\n\r\n                            <section className={classes.postSbscrive + \" subscrive\"}>\r\n                                <div className={classes.postTitle}>\r\n                                    <h3 className=\"c-glitch c-about-glich\" \r\n                                        data-text={post.title} \r\n                                        onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                                    >\r\n                                        {post.title}\r\n                                    </h3>\r\n                                </div>\r\n                                \r\n                                <p className={classes.postText}>{post.postDate.split('T')[0] }</p>\r\n                                <p className={classes.postText}>{post.article}</p>\r\n                                \r\n                                <Button \r\n                                    onClick={() => dispatch(push('/post/detail/' + post.id))} \r\n                                    size=\"large\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.linkbutton}\r\n                                >\r\n                                    <span>この投稿を見る</span>\r\n                                    <ArrowForwardIosIcon />\r\n                                </Button>\r\n                            </section>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n            </div>\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingComponent\r\n","D:\\develop-react\\blog-app\\src\\components\\landing\\FadeinScrollArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\SlideshowUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\Slideshow.jsx",["714","715","716"],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx",["717","718","719"],"import React,{useEffect} from 'react'\r\n\r\nconst Enbed = props => {\r\n    const styleBlokquote = { background:\"#FFF\", \r\n                                border:0, \r\n                                borderRadius:\"3px\", \r\n                                boxShadow:\"0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15)\", \r\n                                margin: \"1px\", \r\n                                maxWidth:\"540px\", \r\n                                minWidth:\"326px\", \r\n                                padding:0, \r\n                                width:\"99.375%\", \r\n                                width:\"-webkit-calc(100% - 2px)\", \r\n                                width:\"calc(100% - 2px)\" \r\n                            }\r\n    const styleLink = { background:\"#FFFFFF\", \r\n                        lineHeight:0, \r\n                        padding:\"0 0\", \r\n                        textAlign:\"center\", \r\n                        textDecoration:\"none\", \r\n                        width:\"100%\"\r\n                    }\r\n    useEffect(()=>{\r\n        if (window.instgrm) window.instgrm.Embeds.process()\r\n    },[])\r\n    return (\r\n        <> \r\n             <blockquote \r\n              class=\"instagram-media\" \r\n              data-instgrm-captioned \r\n              data-instgrm-version=\"12\"\r\n              style={styleBlokquote}\r\n              >\r\n                <a href={props.path} \r\n                    style={styleLink} \r\n                    target={\"_blank\"}\r\n                >\r\n                </a>\r\n            </blockquote>\r\n            {/* index.htmlで読み込む */}\r\n            {/* <script async defer src=\"http://platform.instagram.com/en_US/embeds.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enbed\r\n","D:\\develop-react\\blog-app\\src\\reportWebVitals.js",[],"D:\\develop-react\\blog-app\\src\\Router.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Header.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx",["720"],"import React, { useEffect } from 'react'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\nimport Button from '@material-ui/core/Button';\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts()) \r\n    }, [])\r\n  \r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                    <div>\r\n                    <h2>投稿一覧</h2>\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        posts.length > 0 && (\r\n                            posts.map((post) => (\r\n                                <PostListCard key={post.id}\r\n                                    id={post.id} title={post.title} article={post.article}\r\n                                    postDate={post.postDate} type={post.type}\r\n                                    topImages={post.topImages} postImages={post.postImages}\r\n                                />\r\n                            ))\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <Button onClick={()=> dispatch(push('/admin'))}>\r\n                        <p>Back to Admin Menu</p>\r\n                    </Button> \r\n                </div>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx",["721","722"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      width: '100%',\r\n    //   border:'1px solid white',\r\n    //   backgroundColor:'white'\r\n    },\r\n  }));\r\n\r\nconst PostListGridImage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid \">\r\n           <div className=\"l-section \">\r\n            <div className={classes.root}>\r\n                    <GridList cellHeight={'auto'} className={classes.gridList} cols={3}>\r\n                        {  postsSort().length > 0 &&(\r\n                            postsSort().map(post=> (\r\n                                post.topImages.map(topImage=>(\r\n                                    <GridListTile key={topImage.id} cols={1}>\r\n                                        <img src={topImage.path} alt={topImage.description} className=\"c-image-fit-cover\"/>\r\n                                    </GridListTile>\r\n                                ))\r\n                            ))\r\n                        )}\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PostListGridImage \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LandingPage.jsx",["723"],"D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx",["724","725","726","727"],"import React,{useEffect,useState,useCallback} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getLocations} from  '../reducks/locations/selectors'\r\nimport {getStages} from '../reducks/stage/selectors'\r\nimport {fetchLocatins} from '../reducks/locations/operators'\r\nimport {LocationInPosts} from '../components/locationMap/index'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nconst useStyles = makeStyles((theme) => ({\r\n    accordion:{\r\n        width:'100%',\r\n    },\r\n    summary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        flexFlow:'row wrape',\r\n        alignItems:'center',\r\n        padding:'0 .8rem',\r\n        [theme.breakpoints.down('sm')]:{\r\n            justifyContent:'flex-start',\r\n            flexDirection:'column'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            justifyContent:'space-between',\r\n            flexDirection:'row'\r\n        }\r\n    },\r\n    stageImage:{\r\n        width:'auto',\r\n        height:'100%',\r\n        display:'block',\r\n        marginRight:'1.6rem'\r\n    },\r\n    heading:{\r\n        color:'rgba(0, 0, 0, 0.8)',\r\n    },\r\n    subHeading:{\r\n        color:'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    video:{\r\n        width:'300px',\r\n        height:'200px',\r\n        overflow:'hidden'\r\n    }\r\n}))\r\n\r\nconst LocationDetail = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const locations = getLocations(selector)\r\n    \r\n    let id = window.location.pathname.split('/location/detail')[1]\r\n    if(id !== ''){\r\n        id = id.split('/')[1]\r\n    }\r\n    const selectLocationsById = useCallback((id)=>{\r\n        if(id !==''){\r\n            return locations.filter(location=> location.id === id)\r\n        } else{\r\n            return locations\r\n        }\r\n    },[id])\r\n    \r\n    useEffect(()=>{\r\n        dispatch(fetchLocatins()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section\">\r\n                {selectLocationsById(id).map(selectLocation=>(\r\n                    <Accordion className={classes.accordion} key={selectLocation.id}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            {/* <div>\r\n                                <h1>{selectLocation.name}</h1>\r\n                                <p>{selectLocation.address}</p>\r\n                            </div> */}\r\n                            <div className={classes.summary}>\r\n                                <div>\r\n                                    <h4 className={classes.heading}>{selectLocation.name}</h4>\r\n                                    <div className={classes.subHeading}>\r\n                                        <span classNmae=\".h4\">住所：{selectLocation.address}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <video  muted controls className={classes.video}>\r\n                                        <source src={selectLocation.images[0].path} type=\"video/mp4\" />\r\n                                    </video>\r\n                                </div>\r\n                            </div>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                           <LocationInPosts id={selectLocation.id} />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationDetail\r\n","D:\\develop-react\\blog-app\\src\\templates\\About.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsBasicPlane.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultiplePlanes.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainesSimplePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ImageLoadingTest.jsx",["728","729"],"import React,{useState, useEffect, useRef} from 'react'\r\n\r\nconst ImageLoadingTest = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const counter = useRef(0);\r\n    const imageLoaded = () => {\r\n        counter.current += 1;\r\n        if (counter.current >= urls.length) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    const urls = [\r\n        \"https://placeimg.com/100/100/any&rnd=\" + Math.random(),\r\n        \"https://placeimg.com/100/100/any&rnd=\" + Math.random(),\r\n        \"https://placeimg.com/100/100/any&rnd=\" + Math.random()\r\n      ];\r\n    return ( \r\n        <div style={{color:'white'}}>\r\n            <div style={{display: loading ? \"block\" : \"none\"}}>\r\n                Loading images,\r\n            </div>\r\n            <div style={{display: loading ? \"none\" : \"block\"}}>\r\n                {urls.map(url => \r\n                    <img key={url} src={url} onLoad={imageLoaded} /> )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLoadingTest\r\n// 2021.4.14 removal animation-page\r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\GsapDynamicBackgroundColorHorizontal.jsx",["730","731"],"import React,{useRef,useEffect,useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\nimport LocomotiveScroll from 'locomotive-scroll'\r\n\r\n// import purple from '@material-ui/core/colors/purple'\r\n// import blueGrey from '@material-ui/core/colors/blueGrey'\r\n// import lightGreen from '@material-ui/core/colors/lightGreen'\r\n// import red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    body:{\r\n        '--text-color': '#111',\r\n        '--bg-color': '#b9b3a9',\r\n        fontFamily: 'termina, sans-serif',\r\n        color: 'var(--text-color)',\r\n        background: 'var(--bg-color)',\r\n        transition: '.5s ease-out',\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        overscrollBehavior: 'none',//overscroll-behavior プロパティは、スクロール領域の境界に達したときにブラウザーが何をするかを設定します。\r\n        margin:0,\r\n        padding:0,\r\n    },\r\n    \r\n    section: {\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        position: 'relative',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n        gridGap: '2rem',\r\n        padding: '50px 10vw',\r\n        margin: 'auto',\r\n        placeItems: 'center',\r\n        border:'1px solid white',\r\n    },\r\n    horizontalScroll: {\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        left: 0,\r\n        border:'3px solid red',\r\n        margin:0,\r\n        padding:0,\r\n      },\r\n    credit: {\r\n        fontFamily: 'Termina, sans-serif',\r\n        '& a': {\r\n            '--text-color': '#111',\r\n            color: 'var(--text-color)',\r\n        }\r\n    },\r\n    \r\n    pinWrap: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        padding: '50px 10vw',\r\n    \r\n        '& > *': {\r\n        minWidth: '60vw',\r\n        padding: '0 5vw',\r\n        border:'1px solid blue'\r\n    }\r\n    },\r\n    \r\n    img:{\r\n        height: '80vh',\r\n        width: 'auto',\r\n        objectFit: 'cover',\r\n    },\r\n    h1:{\r\n        fontSize: '5rem',\r\n        lineHeight: 1,\r\n        fontWeight: 800,\r\n        marginBottom: '1rem',\r\n        position: 'absolute',\r\n        top: '10vw',\r\n        left: '10vw',\r\n        zIndex: 4,\r\n        overflowWrap: 'break-word',\r\n        hyphens: 'auto',//文字列を複数行にわたって折り返す際に、単語のハイフネーションを行う方法を指定します。\r\n        [theme.breakpoints.down('sm')]: {  \r\n            fontSize: '16vw',\r\n        },\r\n        // border:'1px solid grey',\r\n    },\r\n    h2:{\r\n        fontSize: '2rem',\r\n        maxWidth: '400px',\r\n        border:'1px solid grey'\r\n    },\r\n    p: {\r\n        position: 'absolute',\r\n        bottom: '10vw',\r\n        right: '10vw',\r\n        width: '200px',\r\n        lineHeight: 1.5,\r\n      },\r\n    span:{\r\n        display:'block'\r\n    },\r\n    imgBox:{\r\n        width:'900px',\r\n        height:'600px',\r\n        backgroundColor:'red',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    }\r\n}))\r\n// const horizontalElements = [\r\n//     {   id:1,\r\n//         img:\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\",\r\n//     },\r\n//     {   id:2,\r\n//         img:\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\",\r\n//     },\r\n//     {   id:3,\r\n//         img:\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\",\r\n//     },\r\n// ]\r\n\r\n\r\nconst GsapDynamicBackgroundColorHorizontal = () => {\r\n    \r\n    const classes = useStyles()\r\n    const bodyRef = useRef(null)\r\n    const containerRef = useRef(null)\r\n\r\n    const sectionRefs = useRef([])\r\n    sectionRefs.current = []\r\n    const HorizontalSectionRefs = useRef([])\r\n    HorizontalSectionRefs.current = []\r\n    // セクションへのすべての参照をsectionRefs.current配列に追加する\r\n    const  addToRefs = el => {\r\n        //section all\r\n        if(el && !sectionRefs.current.includes(el) ){\r\n            sectionRefs.current.push(el)\r\n        }\r\n        //horizontal section slide\r\n        if(el && !HorizontalSectionRefs.current.includes(el) && el.querySelector(\".pinWrap\")){\r\n            HorizontalSectionRefs.current.push(el)\r\n            // console.log('HorizontalSectionRefs el ',el);\r\n            // console.log('HorizontalSectionRefs.current',HorizontalSectionRefs.current);\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        console.log('useEffect----------------------------------------');\r\n        // LocomotiveScroll\r\n        // containerRef.current.setAttribute(\"data-scroll-container\", \"\");\r\n        const scroller = new LocomotiveScroll({\r\n            el: containerRef.current,\r\n            smooth: true,\r\n            getDirection: true \r\n        });\r\n        // scroller.on(\"scroll\", function (t) {\r\n        //         document.documentElement.setAttribute(\"data-direction\", t.direction);\r\n        // });\r\n        // scroller.on(\"scroll\", ScrollTrigger.update);\r\n\r\n        scroller.on(\"scroll\", function (t) {\r\n            scroller.on(\"scroll\", ScrollTrigger.update);\r\n        });\r\n            \r\n        \r\n        console.log(scroller);\r\n\r\n        ScrollTrigger.scrollerProxy(containerRef.current, {\r\n            scrollTop(value) {\r\n              return arguments.length ?\r\n              scroller.scrollTo(value, 0, 0) :\r\n              scroller.scroll.instance.scroll.y;\r\n            },\r\n            getBoundingClientRect() {\r\n              return {\r\n                left: 0,\r\n                top: 0,\r\n                width: window.innerWidth,\r\n                height: window.innerHeight };\r\n        \r\n            },\r\n            pinType: containerRef.current.style.transform ? \"transform\" : \"fixed\" \r\n        })\r\n\r\n\r\n        console.log('Pinning and horizontal scrolling');\r\n        // Pinning and horizontal scrolling\r\n        HorizontalSectionRefs.current.forEach((horizontalSection, i )=>{\r\n            console.log(horizontalSection);\r\n            let pinWrap = horizontalSection.querySelector(\".pinWrap\")\r\n            console.log('pinWrap',pinWrap);\r\n            let pinWrapWidth = pinWrap.offsetWidth\r\n            let horizontalScrollLength = pinWrapWidth - window.innerWidth\r\n            // console.log('pinWrapWidth',pinWrapWidth);\r\n            // console.log('window.innerWidth',window.innerWidth);\r\n            // console.log('horizontalScrollLength',horizontalScrollLength);\r\n            gsap.to(pinWrap,{\r\n                    x: -horizontalScrollLength,\r\n                    ease: \"none\", \r\n                    scrollTrigger:{\r\n                        id:`section-${i+1}`,\r\n                        scrub:true,\r\n                        trigger:horizontalSection,\r\n                        pin:true,\r\n                        start:\"top top\",\r\n                        end:()=> `+=${pinWrapWidth}`,\r\n                        invalidateOnRefresh: true,\r\n                        markers: true,\r\n                    },\r\n            })\r\n        })\r\n\r\n        /* COLOR CHANGER */\r\n        sectionRefs.current.forEach((colorSection, i) => {\r\n            // console.log('color change');\r\n            // console.log('sectionRefs element',colorSection);\r\n            const prevBg = i === 0 ? \"\" : sectionRefs.current[i - 1].dataset.bgcolor;\r\n            const prevText = i === 0 ? \"\" : sectionRefs.current[i - 1].dataset.textcolor;\r\n        \r\n            ScrollTrigger.create({\r\n                  trigger: colorSection,\r\n                  scroller: containerRef.current,\r\n                  start: \"top 50%\",\r\n                  onEnter: () =>\r\n                  gsap.to(bodyRef.current, {\r\n                    backgroundColor: colorSection.dataset.bgcolor,\r\n                    color: colorSection.dataset.textcolor,\r\n                    overwrite: \"auto\" }),\r\n            \r\n                  onLeaveBack: () =>\r\n                  gsap.to(bodyRef.current, {\r\n                    backgroundColor: prevBg,\r\n                    color: prevText,\r\n                    overwrite: \"auto\" }) ,\r\n            });\r\n        });\r\n        ScrollTrigger.addEventListener(\"refresh\", () => scroller.update());\r\n        ScrollTrigger.refresh();\r\n    },[\r\n        bodyRef,\r\n        containerRef,\r\n        sectionRefs,\r\n        HorizontalSectionRefs,\r\n        window.innerWidth,\r\n        window.innerHeight,\r\n        addToRefs,\r\n    ])\r\n    // },[{...containerRef.current},{...HorizontalSectionRefs.current}, {...sectionRefs.current}, {...bodyRef.current}])\r\n\r\n    return (\r\n        <div className={classes.body} ref={bodyRef}>\r\n            \r\n            <div className={classes.container} ref={containerRef}>\r\n                <section className={classes.section} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#032f35\" ref={addToRefs}>\r\n                    <div>\r\n                        <h1>\r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-1\" className={classes.span}>Horizontal</span> \r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-2\" className={classes.span}>scroll</span> \r\n                            <span data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"-3\" className={classes.span}>+ colors</span></h1>\r\n                        <p data-scroll data-scroll-speed=\"2\" data-scroll-delay=\"0.2\">with GSAP ScrollTrigger & Locomotive Scroll. NOT WORKING :(</p>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className={classes.horizontalScroll} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#815946\" ref={addToRefs} >\r\n                    <div className={classes.pinWrap + \" pinWrap\"} >\r\n                        <h2>This whole horizontal section should be brown</h2>\r\n                        {/* <img src=\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" /> */}\r\n                        <div className={classes.imgBox}>image1</div>\r\n                        <div className={classes.imgBox}>image2</div>\r\n                        <div className={classes.imgBox}>image3</div>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className={classes.section} data-textcolor=\"#032f35\" data-bgcolor=\"#bcb8ad\" ref={addToRefs}>\r\n                    <div>\r\n                        <h2 data-scroll data-scroll-speed=\"1\">\r\n                            <span>This should be a light cream background</span>\r\n                        </h2>\r\n                    </div>\r\n                </section>\r\n        \r\n                <section className={classes.section} data-bgcolor=\"#e3857a\" data-textcolor=\"#f1dba7\" ref={addToRefs}>\r\n                    <img src=\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"\" />\r\n                    <h2 data-scroll data-scroll-speed=\"1\">This should be a pink background</h2>\r\n                </section>\r\n                <section className={classes.horizontalScroll} data-textcolor=\"#bcb8ad\" data-bgcolor=\"#815946\"  ref={addToRefs}>\r\n                    <div className={classes.pinWrap + \" pinWrap\"} >\r\n                        <h2>This whole horizontal section should be brown</h2>\r\n                        <img src=\"https://images.pexels.com/photos/5207262/pexels-photo-5207262.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3371358/pexels-photo-3371358.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                        <img src=\"https://images.pexels.com/photos/3618545/pexels-photo-3618545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=900\" alt=\"\" />\r\n                    </div>\r\n                </section>\r\n                <section className={classes.section} data-textcolor=\"#032f35\" data-bgcolor=\"#bcb8ad\" ref={addToRefs}>\r\n                    <div>\r\n                        <h2 data-scroll data-scroll-speed=\"1\">\r\n                            <span>This should be a light cream background</span>\r\n                        </h2>\r\n                    </div>\r\n                </section>\r\n        \r\n                <section className={classes.section} data-bgcolor=\"#e3857a\" data-textcolor=\"#f1dba7\" ref={addToRefs}>\r\n                    <img src=\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"\" />\r\n                    <h2 data-scroll data-scroll-speed=\"1\">This should be a pink background</h2>\r\n                </section>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default GsapDynamicBackgroundColorHorizontal\r\n\r\n// https://codepen.io/cameronknight/pen/oNzxXzr\r\n// CodePen Home\r\n// Dynamic background color & horizontal scroll section ( GSAP ScrollTrigger & Locomotive Scroll)\r\n// 2021.4.13 removal animation-page","D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerHorizontal.jsx",["732","733","734","735"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content:{\r\n        width:'100vw',\r\n        height:'100vh',\r\n        overflow:'hidden',\r\n        border:'1px solid blue'\r\n    },\r\n    container: {\r\n        width: '600%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: '#ADD8E6',\r\n        // backgroundColor: 'lightblue',\r\n        border:'1px solid green'\r\n\r\n      },\r\n      panel: {\r\n        position: 'relative',\r\n        color: 'black',\r\n        width:'100vw',\r\n        border:'1px solid red'\r\n      },\r\n      extra: {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        backgroundColor: 'white',\r\n        height: '20vh',\r\n      },\r\n      \r\n      \r\n}))\r\n\r\nconst ScrollTriggerHorizontal = () => {\r\n    const classes = useStyles()\r\n    const container = useRef(null)\r\n    const sections = useRef([])\r\n    const addToRefs = el => {\r\n\r\n        console.log('addToRefs');\r\n        console.log(el);\r\n        if(el && !sections.current.includes(el)){\r\n            sections.current.push(el)\r\n            console.log(sections.current);\r\n            console.log(sections.current.el);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        const tl = gsap.timeline({\r\n            scrollTrigger: {\r\n            trigger: container.current,\r\n            pin: true,\r\n            scrub: true,\r\n            end: () => container.current.offsetWidth\r\n          }\r\n        })\r\n        tl\r\n        .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.extra}>\r\n            <p>scroll down</p>\r\n            </div>\r\n\r\n            <div className={classes.container} ref={container}>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    ONE\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    TWO\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    THREE\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    FOUR\r\n                </section>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ScrollTriggerHorizontal\r\n\r\n// https://codepen.io/akapowl/pen/ff7dabf8f0946c406bdc61487b4f3f04\r\n// 2021.4.13 removal animation-page","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultipleplanesUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\Slideshow.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx",["736"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst AddImagesUpload = props => {\r\n    const classes = useStyles()\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: '', instagram:'', twitter:'' };\r\n                if (props.Multiple) {\r\n                    props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                } else {\r\n                    props.setImages([newImage])\r\n                }\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span className=\"p\">{props.title}</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon fontSize=\"large\"/>\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\HorizontalScrollArea.jsx",["737","738"],"import React,{useEffect,useRef} from 'react'\r\nimport { StagesArea} from './index'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { gsap,Power2} from \"gsap\";\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport PostsArea from './PostsArea';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stage:{\r\n        margin:0,\r\n        padding:0,\r\n    }, \r\n    postArea:{\r\n        width:'100%',\r\n        // height:'50vh',\r\n        backgroundColor:indigo[700],\r\n        overflow:'hidden',\r\n        color:'white',\r\n        padding:0,\r\n        [theme.breakpoints.up('md')]:{\r\n            flexDirection:'row',\r\n            padding:'2rem 1rem',\r\n\r\n        }\r\n    },\r\n    postListWraper:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        padding:'1.6rem .8rem',\r\n        [theme.breakpoints.up('md')]:{\r\n            flexDirection:'row',\r\n        }\r\n    },\r\n    postListNav:{\r\n        display:'none',\r\n        width:'100%',\r\n        [theme.breakpoints.up('md')]:{\r\n            display:'block',\r\n            width:'30%',\r\n        },\r\n        border:'1px solid white'\r\n    },\r\n    postListItems:{\r\n        width:'100%',\r\n        padding:'0 .8rem',\r\n        [theme.breakpoints.up('md')]:{\r\n            width:'70%',\r\n            // flexGrow:1,\r\n        },\r\n        border:'1px solid white',\r\n        '& ul':{\r\n            margin:0,\r\n            padding:0,\r\n        },\r\n        '& ul div':{\r\n            boxShadow:'none',\r\n        }\r\n\r\n    },\r\n    accordionSummary:{\r\n        backgroundColor:indigo[700],\r\n        color:'white',\r\n        border:'none',\r\n        '& ul':{\r\n            boxShadow:'none',\r\n            border:'none',\r\n        }\r\n    },\r\n    accordionDetails:{\r\n        backgroundColor:indigo[700],\r\n        color:'white',\r\n        border:'none',\r\n    },\r\n\r\n    title:{ \r\n        // dispaly:'fixed', \r\n        width:'100%',\r\n        height:'100%',\r\n        overflow:'hidden',\r\n        textAling:'center',\r\n        color:'white',\r\n        padding:'2rem 1rem',\r\n    },\r\n    main: {\r\n        display:'flex',\r\n        flexWrap:'wrap',\r\n        flexDirection:'column',\r\n        height:'50vh',\r\n        willChange: 'transform',\r\n      },\r\n      \r\n    section: {\r\n        background: ' hsl(0, 0%, 96%)',  //$white-ter \r\n        height:'100%',\r\n        width: '60vw', \r\n        marginRight: '4vw',\r\n        'nth-child(2n)': {\r\n            background: '#eee',\r\n        },\r\n    },\r\n\r\n}))\r\n\r\nconst HorizontalScrollArea = props => { \r\n    const classes = useStyles()\r\n    const stages = props.stages\r\n    const posts = props.posts\r\n\r\n    const stagesBox = useRef(null)\r\n    const container = useRef(null)\r\n    const titleStageRef = useRef(null)\r\n    const titlePostRef = useRef(null)\r\n\r\n    //gsap scrolltrigger horizontal\r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger)\r\n        gsap.to(container.current, {\r\n            x: () => -(container.current.scrollWidth - \r\n                document.documentElement.clientWidth) + \"px\", \r\n            duration:.2,\r\n            scrollTrigger: {\r\n              start: \"center center\",\r\n              trigger: container.current,\r\n              invalidateOnRefresh: true,\r\n            //   pin: true, \r\n              scrub: 1,\r\n              anticipatePin: 1, // can help avoid flash \r\n              end: () => \"+=\" + container.current.offsetWidth,\r\n            }\r\n        })\r\n        gsap.fromTo(stagesBox.current,\r\n            { autoAlpha:0 },\r\n            { duration:.2,\r\n                autoAlpha:1,\r\n                // ease:'power2.out',\r\n                scrollTrigger:{\r\n                    // scrub: 1,\r\n                    trigger:stagesBox.current,\r\n                    start:`top center+=100`,\r\n                    toggleActions:`play none none reverse`, \r\n                    invalidateOnRefresh: true,\r\n                }\r\n            }\r\n        )\r\n        gsap.fromTo(titleStageRef.current,\r\n            {\r\n                autoAlpha:0,\r\n                x:'100px'\r\n            },{\r\n                autoAlpha:1,\r\n                x:0,\r\n                ease:Power2.in,\r\n                scrollTrigger:{\r\n                    // scrub: 1,\r\n                    trigger:titleStageRef.current,\r\n                    start:`top center+=100`,\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers:true, \r\n                }\r\n            })\r\n        gsap.fromTo(titlePostRef.current,\r\n            {\r\n                autoAlpha:0,\r\n                x:'100px'\r\n            },{\r\n                autoAlpha:1,\r\n                x:0,\r\n                ease:Power2.in,\r\n                scrollTrigger:{\r\n                    // scrub: 1,\r\n                    trigger:titlePostRef.current,\r\n                    start:`top center+=100`,\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers:true, \r\n                }\r\n            })\r\n    },[container.current,stagesBox.current,titleStageRef.current]) \r\n\r\n    return (\r\n        <div className={classes.stage} \r\n                ref={stagesBox} \r\n                >\r\n            <div className={classes.postArea} >\r\n                <div ref={titlePostRef}>\r\n                    <h3>POST</h3>\r\n                    <p>最新の投稿</p>\r\n                </div>\r\n                <div className={classes.postListWraper}>\r\n                    <div className={classes.postListNav}>\r\n                        <ul>\r\n                        {posts.map(post => (\r\n                                    <li key={post.id}>\r\n                                        <h3>{post.title}</h3>\r\n                                    </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className={classes.postListItems}>\r\n                        <ul>\r\n                            {posts.map(post => (\r\n                                    // <li key={post.id}>\r\n                                    //     <h3>{post.title}</h3>\r\n                                    // </li>\r\n                                    <Accordion key={post.id}>\r\n                                        <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1a-content\"\r\n                                        id=\"panel1a-header\"\r\n                                        className={classes.accordionSummary}\r\n                                        >\r\n                                        <h3 >{post.title}</h3>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails className={classes.accordionDetails}>\r\n                                        <p>\r\n                                        {post.article}\r\n                                        </p>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.title} ref={titleStageRef}>\r\n                <h3>STAGES</h3>\r\n                <p>最新のステージ</p>\r\n            </div>\r\n           \r\n            <div className={classes.main}  ref={container}>\r\n                \r\n            {\r\n                stages.map((stage) => (\r\n                    <section \r\n                        className={classes.section} \r\n                        key={stage.id}>\r\n                        <StagesArea stage={stage}/>\r\n                    </section>\r\n                ))\r\n            }\r\n            </div>\r\n            <div></div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HorizontalScrollArea\r\n","D:\\develop-react\\blog-app\\src\\components\\landing\\ReactCurtainsSlideshowGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\horizontal\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\vertical\\VerticalCarousel.jsx",["739"],"import React,{useState,useEffect,useRef} from 'react'\r\n\r\nconst VerticalCarousel = props => {\r\n    const stages = props.stages\r\n    const positionRef = useRef()\r\n    const sliderBoxHeightRef = useRef()\r\n    const [position, setPosition] = useState(0)\r\n    const [sliderBoxHeight, setSliderBoxHeight] = useState(0)\r\n    positionRef.current = position\r\n    sliderBoxHeightRef.current = sliderBoxHeight\r\n    const mousewheel = event =>{\r\n        console.log('mousewheel');\r\n        // console.log(positionRef.current);\r\n        if (event.deltaY < 0 && positionRef.current < 0) {\r\n            console.log('scrolling up');\r\n            console.log(positionRef.current);\r\n            setPosition(prevPosition => prevPosition + 12)\r\n        }\r\n        if ((event.deltaY > 0) && ((sliderBoxHeightRef.current + positionRef.current) > 0)  ) {\r\n            console.log('scrolling down');\r\n            console.log(positionRef.current);\r\n            console.log(sliderBoxHeightRef.current);\r\n            console.log(sliderBoxHeightRef.current + positionRef.current);\r\n            setPosition(prevPosition => prevPosition - 12) \r\n        } \r\n        // if (event.deltaY < 0  ) {\r\n        //     console.log('scrolling up');\r\n        //     setPosition(prevPosition => prevPosition + 50)\r\n        // }\r\n        // if ((event.deltaY > 0)  ) {\r\n        //     console.log('scrolling down');\r\n        //     setPosition(prevPosition => prevPosition - 50) \r\n        // } \r\n       \r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('mousewheel',mousewheel)\r\n\r\n        return () => {\r\n            window.addEventListener('mousewheel',mousewheel)\r\n        }\r\n    },[])\r\n    useEffect(()=>{\r\n        // console.log('useEffect clientHeight');\r\n        const clientHeight = document.getElementById('sliderBoxv').clientHeight\r\n        setSliderBoxHeight(clientHeight)\r\n        // console.log(clientHeight);\r\n    })\r\n    return (\r\n        <div className='c-verticalCarousel-box'\r\n        id=\"sliderBoxv\"\r\n            style={{transform:`translate( -50%, calc(${position}px - 5rem)  )`}}\r\n        >\r\n            {stages.length > 0 && (\r\n                stages.map(stage=>(\r\n                    <div key={stage.id} className=\"c-verticalCarousel-element\">\r\n                        <h1 className=\"c-glitch c-verticalCarousel-glich\" \r\n                            data-text={stage.stage} >{stage.stage}\r\n                        </h1>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerticalCarousel\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactTransitionTest.jsx",[],"D:\\develop-react\\blog-app\\src\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js",[],"D:\\develop-react\\blog-app\\src\\templates\\HomeBlog.jsx",["740","741","742"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // topWraper:{\r\n    //     color:'white'\r\n    // },\r\n    header:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:red[500],\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        border:'1px solid white'\r\n    },\r\n    stages:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:blueGrey[500],\r\n        border:'1px solid white'\r\n    },\r\n    posts:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:lightGreen[500],\r\n        border:'1px solid white'\r\n    },\r\n    other:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:purple[500],\r\n        border:'1px solid white'\r\n    }\r\n    // ourMission:{\r\n    //     width:'100%',\r\n    //     height:'2000px',\r\n    //     backgroundColor:blueGrey[500],\r\n    //     border:'1px solid red'\r\n    // },\r\n    // gridContainer:{\r\n    //     height: '100%',\r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    // },\r\n    // titleContainer:{\r\n    //     display: 'flex',\r\n    //     border:'1px solid yellow'\r\n\r\n    // },\r\n}))\r\n\r\n\r\nconst HomeBlog = () => {\r\n    const classes = useStyles()\r\n    const content = useRef(null)\r\n    const header = useRef(null)\r\n    const stages = useRef(null)\r\n    const posts = useRef(null)\r\n    const other = useRef(null)\r\n    // const ourMission = useRef(null)\r\n    // const titleContainer = useRef(null)\r\n    useEffect(()=>{\r\n\r\n       \r\n        const colorChangeHeader = gsap.fromTo(content.current, \r\n            { backgroundColor: red[100] },\r\n            { backgroundColor: red[500] })\r\n\r\n        ScrollTrigger.create({\r\n            trigger: header.current,\r\n            start: \"top-=500px top+=200px\",\r\n            end: \"bottom+=300 bottom-=300px\",\r\n            // start: \"buttom buttom\",\r\n            // end: \"botto+=100 center\",\r\n            scrub: true,\r\n            animation: colorChangeHeader,\r\n            markers:true,\r\n        });\r\n        // const colorChangePosts = gsap.fromTo(content.current, \r\n        //     { backgroundColor: red[500] },\r\n        //     { backgroundColor: blueGrey[500] })\r\n\r\n        // ScrollTrigger.create({\r\n        //     scroller: content.current,\r\n        //     trigger: stages.current,\r\n        //     start: \"top-=500px top+=200px\",\r\n        //     end: \"bottom+=300 bottom-=300px\",\r\n        //     // start: \"buttom buttom\",\r\n        //     // end: \"center center\",\r\n        //     scrub: true,\r\n        //     animation: colorChangePosts,\r\n        //     markers:true,\r\n        // });\r\n        \r\n        // .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        // .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        // .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n        // gsap.fromTo(content.current, \r\n        //     {   backgroundColor:red[200]}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:red[800], \r\n        //         ease:\"linear\", \r\n        //         // markers:true,\r\n        //         // start:\"bottom 50%\",\r\n        //         scrollTrigger: {\r\n        //             trigger: content.current,\r\n        //             start:\"center 50%\", //when top of herman passes 75% viewport height\r\n        //             end:\"bottom 0%\", //when bottom of herman passes 25% viewport height\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(header.current, \r\n        //     {   backgroundColor:red[500]}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:red[500], \r\n        //         ease:\"linear\", \r\n        //         // markers:true,\r\n        //         // start:\"top 50%\",\r\n        //         scrollTrigger: {\r\n        //             trigger: header.current,\r\n        //             // start:\"top top\", //when top of herman passes 75% viewport height\r\n        //             // end:\"bottom 0%\", //when bottom of herman passes 25% viewport height\r\n        //             toggleActions:`play none none reverse`,\r\n        //             // markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(stages.current, \r\n        //     {   backgroundColor:red[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:blueGrey[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: stages.current,\r\n        //             start:\"top 50%\", \r\n        //             // end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(posts.current, \r\n        //     {   backgroundColor:blueGrey[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:lightGreen[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: posts.current,\r\n        //             start:\"top 50%\", \r\n        //             // end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(other.current, \r\n        //     {   backgroundColor:lightGreen[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:purple[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: other.current,\r\n        //             start:\"top 50%\", \r\n        //             end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             // markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // const colorChange = gsap.fromTo(ourMission.current, \r\n        //     { backgroundColor: \"white\" },\r\n        //     { backgroundColor: \"#232E3E\" })\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: titleContainer.current,\r\n        //     start: \"top-=500px top+=200px\",\r\n        //     end: \"bottom+=300 bottom-=300px\",\r\n        //     scrub: true,\r\n        //     animation: colorChange,\r\n        //     markers:true,\r\n        // });\r\n\r\n        // const colorToWhite= gsap.fromTo(ourMission.current, \r\n        //     { backgroundColor: \"#232E3E\" },\r\n        //     { backgroundColor: \"#ffffff\" })\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: titleContainer.current,\r\n        //     start: \"bottom top+=200px\",\r\n        //     end: \"+=500px\",\r\n        //     scrub: true,\r\n        //     animation: colorToWhite,\r\n        //     markers:true,\r\n        // });\r\n        // const tl = gsap.timeline({\r\n        //     scrollTrigger: {\r\n        //     trigger: container.current,\r\n        //     pin: true,\r\n        //     scrub: true,\r\n        //     end: () => container.current.offsetWidth\r\n        //   }\r\n        // })\r\n        // tl\r\n        // .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        // .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        // .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n    },[])\r\n    return (\r\n        <div className={classes.topWraper} ref={content}>\r\n            <div ref={header} className={classes.header}>\r\n                header 1\r\n            </div>\r\n            <div ref={stages} className={classes.stages}>\r\n                stages 2\r\n            </div>\r\n            <div ref={posts} className={classes.posts}>\r\n                posts 3\r\n            </div>\r\n            <div ref={other} className={classes.other}>\r\n                other 4\r\n            </div>\r\n        </div>\r\n        // <div className={classes.ourMission} ref={ourMission}>\r\n        //     <div className={classes.gridContainer}>\r\n        //         {/* <div className=\"grid-x grid-margin-x align-center overflow-hidden title-container\"> */}\r\n        //         <div className={classes.titleContainer} ref={titleContainer}>\r\n        //             <div className=\"cell medium-4 title-container\">\r\n        //                 <h2 className=\"heading h2 light\">Our<br />mission</h2>\r\n        //             </div>\r\n        //             <div className=\"cell medium-6\">\r\n        //                 <p className=\"heading h4 light\">On the ground in about 170 countries and territories, UNDP works to eradicate poverty while protecting the planet. We help countries develop strong policies, skills, partnerships and institutions so they can sustain their progress.</p>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default HomeBlog \r\n","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx",["743","744","745"],"D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx",["746"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getLocations} from '../reducks/locations/selectors'\r\nimport {fetchLocatins} from '../reducks/locations/operators'\r\nimport {MapMarker} from '../components/locationMap/index'\r\n\r\nconst LocationMap = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const locations = getLocations(selector)\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchLocatins())\r\n    },[])\r\n    return (\r\n        <MapMarker locations={locations}/>\r\n    )\r\n}\r\n\r\nexport default LocationMap\r\n","D:\\develop-react\\blog-app\\src\\templates\\TopPage.jsx",["747"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {HorizontalCrousel} from '../components/horizontal/index'\r\nimport {VerticalCarousel} from '../components/vertical/index'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport {getStages} from '../reducks/stage/selectors' \r\n\r\nconst TopPage = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const stages = getStages(selector)\r\n    console.log(stages);\r\n    useEffect(()=>{\r\n        dispatch(fetchStages())\r\n    },[])\r\n    return (\r\n        <div className=\"l-container\" >\r\n            <div className=\"l-section\" > \r\n                <div>\r\n                    <HorizontalCrousel stages={stages}/>\r\n                    <VerticalCarousel stages={stages}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopPage  \r\n","D:\\develop-react\\blog-app\\src\\templates\\ThreeTest.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultipleplanesUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\GsapTest.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SlideshowUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx",["748","749","750"],"import React,{useEffect, useCallback, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport {fetchPosts} from '../../reducks/posts/operators'\r\nimport {getPosts} from '../../reducks/posts/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list:{\r\n        width:'100%'\r\n    }\r\n  }));\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const dateToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2)\r\n};\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const datetimeToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2) + ' '\r\n        + ('00' + dt.getHours()).slice(-2) + ':'\r\n        + ('00' + dt.getMinutes()).slice(-2) + ':'\r\n        + ('00' + dt.getSeconds()).slice(-2)\r\n};\r\nconst PostsInStage = props => {\r\n    const classes=useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stageId = props.stage.id\r\n\r\n    // const orderedDatetime = datetimeToString(created_at.toDate())\r\n    // const shippingDate = dateToString(created_at.toDate())\r\n\r\n    const postsInStage = useCallback((id) => {\r\n        const filterPosts = posts.filter(post => post.stage.id === id)\r\n        let sorted = filterPosts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return 1\r\n            if(a.created_at < b.created_at) return -1\r\n            return 0\r\n        }) \r\n        return sorted\r\n    },[props.stage.id])\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    return (\r\n        <List className={classes.list}>\r\n            {postsInStage(stageId).map((post, index ) => (\r\n                <div key={post.id} >\r\n                    <ListItem \r\n                        alignItems=\"flex-start\" \r\n                        \r\n                        onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"投稿メイン画像\" src={post.topImages[0].path} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                        primary={post.title}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                    {dateToString(post.created_at.toDate())}\r\n                            </React.Fragment>\r\n                        }                \r\n                        />\r\n                    </ListItem>\r\n                    <Divider  />\r\n                </div>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default PostsInStage\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx",["751"],"import React,{ useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoImage from '../../assets/img/no_image.jpg'\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { deletePost } from '../../reducks/posts/operators'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 8,\r\n            width: 'calc(50% - 16px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: 16,\r\n            width: 'calc(33.3333% - 32px)'\r\n        },\r\n    },\r\n    // content: {\r\n    //     display: 'flex',\r\n    //     padding: '16px 8px',\r\n    //     textAlign: 'left',\r\n    //     '&:last-child': {\r\n    //         paddingBottom: 16\r\n    //     }\r\n    // },\r\n    media: {\r\n        height: 200,\r\n        width:'auto'\r\n    },\r\n    // icon: {\r\n    //     marginRight: 0,\r\n    //     marginLeft: 'auto'\r\n    // }\r\n\r\n})) \r\nconst PostListCard = props => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const topImages = props.topImages\r\n    // const topImages = (props.topImages.length > 0 ? props.images : [{ path: NoImage }])\r\n    // const postImages = (props.postImages.length > 0 ? props.images : [{ path: NoImage }])\r\n\r\n    return (\r\n        <div>\r\n            {/* <PostListCard key={post.id}\r\n                            id={post.id} title={post.title} article={post.article}\r\n                            postDate={post.postDate} type={post.type}\r\n                            topImages={postImages} postImages={post.postImages}\r\n                        /> */}\r\n            <Card className={classes.root}>\r\n                 {/* id={stage.id} sort={stage.sort}\r\n                            stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                            images={stage.images} */}\r\n                <CardMedia className={classes.media}\r\n                    image={topImages[0].path}\r\n                    // title={topImages[0].description}\r\n                    // onClick={() => dispatch(push('/post/' + props.id))}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {props.title}\r\n                    </Typography>\r\n                    {/* <Typography>\r\n                        {props.stageYear} STAGE-{props.stageNo}\r\n                    </Typography> */}\r\n                </CardContent>\r\n            </Card>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon></MoreVertIcon>\r\n            </IconButton>\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClick={handleClose}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                        dispatch(push('/post/edit/' + props.id))\r\n                        handleClose()\r\n                }}>\r\n                    編集する\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        dispatch(deletePost(props.id))\r\n                        handleClose()\r\n                }}>\r\n                    削除する\r\n                </MenuItem>\r\n            </Menu >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default PostListCard\r\n","D:\\develop-react\\blog-app\\src\\components\\locationMap\\LocationInPosts.jsx",["752","753","754"],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx",["755"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx",["756"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst RoundPaginations = props => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const cnt = props.posts.length\r\n    const posts = props.posts\r\n    const [page, setPage] = useState(1);\r\n    const handleChange = (event, value) => {\r\n      setPage(value)\r\n\r\n\r\n        const index = parseInt(value, 10)\r\n        const currenyPost = posts[index - 1] \r\n        dispatch(push('/post/detail/' + currenyPost.id))\r\n\r\n    }; \r\n    \r\n    useEffect(()=>{\r\n      const index = posts.findIndex((post) => post.id === props.id);\r\n      if(index !== -1){\r\n        setPage( index + 1)\r\n      }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root} style={{color:'white'}}>\r\n                <h1 style={{color:'white'}}>Pageination</h1>\r\n                <Pagination count={cnt} page={page}  onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default RoundPaginations\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\PostsArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx",["757"],"import React,{useEffect, useState, useRef} from 'react'\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow} from \"@react-google-maps/api\";\r\nimport {googleMapConfig} from \"../../googleMap/config\";\r\nimport { gsap} from \"gsap\";\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger'\r\n\r\n// google map\r\nconst containerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  };\r\n  const divStyle = {\r\n    color: \"black\",\r\n    fontFamily: \"sans-serif\",\r\n    fontSize: \"15px\",\r\n    fontWeight: \"500\",\r\n  };\r\n  const options = {\r\n    styles:[\r\n        {\r\n            \"featureType\": \"all\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"weight\": \"2.00\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"all\",\r\n            \"elementType\": \"geometry.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#9c9c9c\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"all\",\r\n            \"elementType\": \"labels.text\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"on\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"landscape\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#f2f2f2\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"landscape\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"landscape.man_made\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"saturation\": -100\r\n                },\r\n                {\r\n                    \"lightness\": 45\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#eeeeee\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#7b7b7b\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road\",\r\n            \"elementType\": \"labels.text.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.highway\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"simplified\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.arterial\",\r\n            \"elementType\": \"labels.icon\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"transit\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"all\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#46bcec\"\r\n                },\r\n                {\r\n                    \"visibility\": \"on\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#c8d7d4\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#070707\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"labels.text.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    disableDefaultUI: false,\r\n    // デフォルトUI（衛星写真オプションなど）をキャンセルします。\r\n    zoomControl: true,\r\n  };   \r\n  \r\nconst LocationArea = props => {\r\n    const key = googleMapConfig.key\r\n    const [lat,setLat] = useState(0)\r\n    const [lng,setLng] = useState(0)\r\n    const [name,setName] = useState(\"\")\r\n    const [address,setAddress] = useState(\"\")\r\n    const [size, setSize] = useState(undefined);\r\n    const headerRef = useRef()\r\n    const mapRef = useRef()\r\n    const earthRef = useRef()\r\n    const infoWindowOptions = {\r\n        pixelOffset: size,\r\n    };\r\n    const createOffsetSize = () => {\r\n        return setSize(new window.google.maps.Size(0, -45));\r\n    };\r\n    const center = {\r\n        lat: lat,\r\n        lng: lng,\r\n      };\r\n   \r\n      useEffect(()=>{\r\n        gsap.fromTo(headerRef.current,\r\n            {   autoAlpha:0},\r\n            {   autoAlpha:1 ,\r\n                scrollTrigger: {\r\n                    trigger:headerRef.current,\r\n                    start:`top center+=100`,\r\n                    // end: \"center top\",\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers: true,\r\n                  }\r\n            }\r\n        ) \r\n        gsap.fromTo(mapRef.current,\r\n            {   autoAlpha:0},\r\n            {   autoAlpha:1 ,\r\n                scrollTrigger: {\r\n                    trigger:mapRef.current,\r\n                    start:`top center+=100`,\r\n                    // end: \"center top\",\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers: true,\r\n                  }\r\n            }\r\n        ) \r\n        gsap.fromTo(earthRef.current,\r\n            {   autoAlpha:0},\r\n            {   autoAlpha:1 ,\r\n                scrollTrigger: {\r\n                    trigger:earthRef.current,\r\n                    start:`top center+=100`,\r\n                    // end: \"center top\",\r\n                    toggleActions:`play none none reverse`,\r\n                    // markers: true,\r\n                  }\r\n            }\r\n        ) \r\n        \r\n    },[])\r\n    useEffect(()=>{\r\n        setLat(Number(props.locationLat)) \r\n        setLng(Number(props.locationLng))\r\n        setName(props.locationName)\r\n        setAddress(props.locationAddress)\r\n    },[props.locationLat,props.locationLng,props.locationName,props.locationAddress])\r\n\r\n    return (\r\n        <div className=\"l-container-fluid c-locationarea\">\r\n            <div className=\"l-section-fluid\" >\r\n                <div className=\"c-locationarea-header\" ref={headerRef}>\r\n                    <h1 className=\"c-locationarea-header__title\">LOCATION</h1>\r\n                    <h5>{name}</h5>\r\n                    <p >{address}</p>\r\n                </div>\r\n\r\n                <div className=\"c-locationarea-body\" >\r\n                    <div className=\"c-locationarea-section-element \">\r\n                        <div className=\"c-locationarea-googlemap\" ref={mapRef}>\r\n                            <h5 className=\"c-locationarea__title\">Google MAP</h5>\r\n                            <LoadScript googleMapsApiKey={key} onLoad={() => createOffsetSize()}>\r\n                                <GoogleMap\r\n                                    mapContainerStyle={containerStyle}\r\n                                    options={options}\r\n                                    center={center}\r\n                                    zoom={15}\r\n                                >\r\n                                    <Marker \r\n                                        position={{\r\n                                            lat: Number(lat),\r\n                                            lng: Number(lng),\r\n                                        }}\r\n                                        // label={{\r\n                                        //     color: \"blue\",\r\n                                        //     fontFamily: \"sans-serif\",\r\n                                        //     fontSize: \"15px\",\r\n                                        //     fontWeight: \"500\",\r\n                                        //     text:name,\r\n                                        // }}\r\n                                    />\r\n                                    <InfoWindow \r\n                                        position={{\r\n                                            lat: Number(lat),\r\n                                            lng: Number(lng),\r\n                                            }}\r\n                                    options={infoWindowOptions}\r\n                                    \r\n                                    >\r\n                                        <div style={divStyle} >\r\n                                                <p>{address}</p>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                </GoogleMap>\r\n                            </LoadScript>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"c-locationarea-section-element \">\r\n                        <div ref={earthRef}>\r\n                            <h5 className=\"c-locationarea__title\">Google Earth</h5>\r\n                            {props.locationImages.length > 0 && (\r\n                                props.locationImages.map(image => (\r\n                                    <div key={image.id} className=\"c-locationarea-section-video \">\r\n                                        <video  muted controls>\r\n                                            <source src={image.path} type=\"video/mp4\" />\r\n                                        </video>\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationArea\r\n","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\Top.jsx",["758","759"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap,power2} from 'gsap'\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    topWraper:{\r\n        color:'white' \r\n    },\r\n    header:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:red[500],\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    stages:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:blueGrey[500],\r\n    },\r\n    posts:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:lightGreen[500],\r\n    },\r\n    other:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:purple[500],\r\n    }\r\n}))\r\n\r\nconst Top = () => {\r\n    const classes = useStyles()\r\n    const header = useRef(null)\r\n    const stages = useRef(null)\r\n    const posts = useRef(null)\r\n    const other = useRef(null)\r\n    useEffect(()=>{\r\n        // let tl = gsap.timeline()\r\n        gsap.fromTo(stages.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:stages.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n        gsap.fromTo(posts.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:posts.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n        gsap.fromTo(other.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:other.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n    },[])\r\n    return (\r\n        <div className={classes.topWraper}>\r\n            <div ref={header} className={classes.header}>header</div>\r\n            <div ref={stages} className={classes.stages}>stages</div>\r\n            <div ref={posts} className={classes.posts}>posts</div>\r\n            <div ref={other} className={classes.other}>other</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top\r\n","D:\\develop-react\\blog-app\\src\\templates\\CanvasCircle.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocomotiveScrollSimpleTest.jsx",["760"],"import React,{useEffect,useRef} from 'react'\r\nimport locomotiveScroll from \"locomotive-scroll\";\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    body: {\r\n        margin: 0,\r\n        textAlign: 'center',\r\n        font: '900 120% system-ui, sans-serif',\r\n        backgroundColor:'white'\r\n      },\r\n      \r\n      section: {\r\n        height: '100vh',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        border:'1px solid black',\r\n        color:'black'\r\n      }\r\n      \r\n    // App: {\r\n    //     textAlign: 'center',\r\n    //     color:'white'\r\n    //   },\r\n      \r\n    //   h1: {\r\n    //     margin: '500px 0 50px',\r\n    //   },\r\n      \r\n    //   scroll: {\r\n    //     padding: '0 0 200vh'\r\n    //   }\r\n}))\r\n\r\n\r\nconst LocomotiveScrollSimpleTest = () => {\r\n    const classes = useStyles()\r\n    const scrollRef = useRef()\r\n    useEffect(()=>{\r\n        const scroll = new locomotiveScroll({\r\n            el: scrollRef.current,\r\n            smooth: true\r\n          });\r\n        //   console.log(scroll);\r\n    },[])\r\n    return (\r\n        <div data-scroll-container ref={scrollRef} className={classes.body}>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h1 data-scroll>Hey</h1>\r\n                    <p data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"12\" style={{marginLeft: '20vw'}}>👋</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h2 data-scroll data-scroll-speed=\"1\">Looks like rain</h2>\r\n                    <p data-scroll data-scroll-speed=\"9\">🌧</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h2 data-scroll data-scroll-speed=\"1\">Have an apple</h2>\r\n                    <p data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"8\">🍎</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        // <div className={classes.App}>\r\n        //     <div className={classes.scroll} \r\n        //          ref={scrollRef} \r\n        //          >\r\n        //             <h1 className={classes.h1}\r\n        //                 data-scroll \r\n        //                 data-scroll-speed=\"3\" \r\n        //                 data-scroll-position=\"top\"\r\n        //             >\r\n        //                 Locomotive Scroll in React\r\n        //             </h1>\r\n        //             <h2\r\n        //             data-scroll\r\n        //             data-scroll-speed=\"1\"\r\n        //             data-scroll-position=\"top\"\r\n        //             data-scroll-direction=\"horizontal\"\r\n        //             >\r\n        //                 Go Sideways!!\r\n        //             </h2>  \r\n        //          </div>\r\n                \r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default LocomotiveScrollSimpleTest\r\n// 2021.4.14 removal animation-page \r\n\r\n","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SelectiveRenderTargets.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx",["761","762"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\nconst PostImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n    return (\r\n        <div>\r\n             <div className=\"classes.u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PostImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\firebase\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\StagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js",[],"D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx",["763"],"import React,{ useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getStages } from '../reducks/stage/selectors'\r\nimport { StageCard } from '../components/stage/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst StageList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state => state))\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStages()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                <h2>ステージリスト</h2>\r\n                    {\r\n                        stages.length > 0 && ( \r\n                            stages.map((stage) => (\r\n                                <StageCard key={stage.id}\r\n                                    id={stage.id} sort={stage.sort}\r\n                                    stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                                    images={stage.images} />\r\n                            ))\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <Button onClick={()=> dispatch(push('/admin'))}>\r\n                            <p>Back to Admin Menu</p>\r\n                        </Button> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default StageList \r\n","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LoadingDisplayTest.jsx",["764","765"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx",["766","767"],"import React,{useCallback} from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport {googleMapConfig} from \"../../googleMap/config\";\r\n\r\nconst MapArea = props => {\r\n    const key = googleMapConfig.key\r\n    const locations = props.locations\r\n    console.log('MapArea');\r\n    console.log(locations);\r\n\r\n    const defaultLatLng = {\r\n        lat: 34.661773,\r\n        lng: 133.934675,\r\n      };\r\n    const items = [\r\n        {\r\n          lat: 35.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 34.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 36.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n      ];\r\n    //マーカーが1個\r\n    //   const handleApiLoaded = ({ map, maps }) => {\r\n    //     new maps.Marker({\r\n    //       map,\r\n    //       position: defaultLatLng,\r\n    //     });\r\n    //   };\r\n    \r\n    //マーカー複数で範囲内に表示\r\n    const handleApiLoaded = ({ map, maps }) => {\r\n        const bounds = new maps.LatLngBounds();\r\n        items().forEach((item) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:item.lat,\r\n                lng:item.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        map.fitBounds(bounds);\r\n      };\r\n\r\n    const handleApiLoadedSet = useCallback(({ map, maps })=>{\r\n        const bounds = new maps.LatLngBounds();\r\n        console.log(locations);\r\n        console.log('handleApiLoadedSet ');\r\n\r\n        locations.forEach((location) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:location.position.lat,\r\n                lng:location.position.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        return map.fitBounds(bounds);\r\n    })\r\n   \r\n   \r\n    return (\r\n        <div className=\"c-locationarea-map-googlemap\" >\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: key }}\r\n                defaultCenter={defaultLatLng}\r\n                defaultZoom={5}\r\n                onGoogleApiLoaded={({ map, maps } )=>handleApiLoadedSet({ map, maps })}\r\n                yesIWantToUseGoogleMapApiInternals\r\n            >\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MapArea\r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx",["768"],"D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx",["769","770","771","772","773"],"import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {DataGrid } from '@material-ui/data-grid';\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport { push } from 'connected-react-router'\r\nimport moment from 'moment'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles= makeStyles((theme) => ({\r\n    grid:{\r\n        backgroundColor:'#fff'\r\n    },\r\n    postsWrape:{\r\n        position:'relative',\r\n        height:'100%',\r\n        width:'100%',\r\n        maxHeight:'120px',\r\n        display:'flex',\r\n        flexFlow:'row nowrape'\r\n    },\r\n    postBody:{\r\n        padding:'.8rem',\r\n    },\r\n    images:{\r\n        display:'block',\r\n        width:'auto',\r\n        height:'100%',\r\n        maxHeight:'120px'\r\n        \r\n    },\r\n    locationWrape:{\r\n    },\r\n    typeWrape:{\r\n    },\r\n    stageWrape:{\r\n    }\r\n    \r\n}))\r\n\r\nconst BlogData = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state) \r\n    const posts = getPosts(selector)\r\n    let postRows = []\r\n\r\n    const theme = useTheme();\r\n    // const isDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    // const isUpSM = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const isDownSM = !useMediaQuery('(min-width:600px)');\r\n    const isDownMD = !useMediaQuery('(min-width:960px)');\r\n\r\n    // console.log('BlogData');\r\n    // console.log(posts);\r\n\r\n    // id:post.id,\r\n    // postDate: mFormatted, \r\n    // title:post.title, \r\n    // stageYear:post.stage.stageYear, \r\n    // stageNo:post.stage.stageNo, \r\n    // stageName:post.stage.stage, \r\n    // location:post.location.name, \r\n    // type:post.type, \r\n    // image:post.topImages[0].path\r\n\r\n\r\n    \r\n\r\n    const columns = [\r\n        {field:'id',\r\n        headerName:'ID',\r\n        hide: true,\r\n        flex: '1',\r\n        },\r\n\r\n        {field: 'postDate',\r\n        headerName: '投稿',\r\n        flex: 1,\r\n        renderCell:(params)=>(\r\n            <div className={classes.postsWrape} >\r\n                <img src={params.getValue('image') } className={classes.images}/>\r\n                <div className={classes.postBody}>\r\n                    <div onClick={()=> dispatch(push('/post/detail/' + params.getValue('id')))}>\r\n                        <h4>{params.getValue('title')}</h4>\r\n                        <p>{params.getValue('postDate')}</p>\r\n                    </div>\r\n                    <div onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                        <p>STAGE{params.getValue('stageNo')}</p>\r\n                        <p>{params.getValue('stageName')}</p>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n            </div> \r\n            \r\n        )},\r\n       \r\n        {field:'location',\r\n        headerName:'ロケーション',\r\n        flex: 0.3,\r\n        hide: isDownSM,\r\n        renderCell:(params)=>(\r\n            // <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/edit/' + params.getValue('locationId')))}>\r\n            <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/List'))}>\r\n                <h6>{params.getValue('location')}</h6>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'type',\r\n        headerName:'投稿タイプ', \r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.typeWrape}>\r\n                <p>{params.getValue('type')}</p>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'stageNo',\r\n        headerName:'ステージ',\r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.stageWrape} onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                <p>STAGE{params.getValue('stageNo')}</p>\r\n            </div>\r\n        )\r\n        },\r\n    ]\r\n    const rowData = () => {\r\n        posts.map(post => {\r\n            let timestampDate = post.created_at.toDate()\r\n            let m = moment(timestampDate );\r\n            let mFormatted = m.format();\r\n            let mYYMMDD = mFormatted.split('T')\r\n            let YYMMDD = mYYMMDD[0]\r\n            // let HHmmSS = mYYMMDD[1].split('+')\r\n            postRows.push({\r\n                id:post.id,\r\n                image:post.topImages[0].path,\r\n                title:post.title,\r\n                postDate: YYMMDD,\r\n                location:post.location.name,  \r\n                locationId:post.location.id,  \r\n                stageYear:post.stage.stageYear, \r\n                stageNo:post.stage.stageNo, \r\n                stageName:post.stage.stage, \r\n                stageId:post.stage.id, \r\n                type:post.type, \r\n            })\r\n        })\r\n\r\n        return postRows\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    \r\n    return (\r\n        // <div className=\"l-container-fluid \">\r\n        // <div style={{ height: 400, width: '100%',backgroundColor:'#fff'  }}>\r\n        //     <div style={{ display: 'flex', height: '100%' }}>\r\n        //         <div style={{ flexGrow: 1 }}>\r\n        //            <DataGrid\r\n        //                 columns={columns}\r\n        //                 rows={rowData()}\r\n        //                 autoHeight \r\n        //                 checkboxSelection\r\n        //                 className={classes.grid}\r\n        //                 rowHeight={52}\r\n        //             />\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <div>\r\n            <div style={{backgroundColor:'#fff', height: '100vh', width: '100%' }}>\r\n                <DataGrid\r\n                columns={columns}\r\n                rows={rowData()} \r\n                rowHeight={120}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BlogData\r\n","D:\\develop-react\\blog-app\\src\\components\\about\\index.js",[],"D:\\develop-react\\blog-app\\src\\googleMap\\config.js",[],"D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx",["774"],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx",["775","776"],"D:\\develop-react\\blog-app\\src\\components\\horizontal\\HorizontalCarousel.jsx",["777"],"D:\\develop-react\\blog-app\\src\\templates\\StagePage.jsx",[],{"ruleId":"778","replacedBy":"779"},{"ruleId":"780","replacedBy":"781"},{"ruleId":"778","replacedBy":"782"},{"ruleId":"780","replacedBy":"783"},{"ruleId":"778","replacedBy":"784"},{"ruleId":"780","replacedBy":"785"},{"ruleId":"786","severity":1,"message":"787","line":21,"column":7,"nodeType":"788","endLine":21,"endColumn":9,"suggestions":"789"},{"ruleId":"778","replacedBy":"790"},{"ruleId":"780","replacedBy":"791"},{"ruleId":"792","severity":1,"message":"793","line":3,"column":9,"nodeType":"794","messageId":"795","endLine":3,"endColumn":13},{"ruleId":"786","severity":1,"message":"787","line":59,"column":7,"nodeType":"788","endLine":59,"endColumn":9,"suggestions":"796"},{"ruleId":"786","severity":1,"message":"797","line":203,"column":8,"nodeType":"798","endLine":203,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":203,"column":31,"nodeType":"798","endLine":203,"endColumn":53},{"ruleId":"778","replacedBy":"799"},{"ruleId":"780","replacedBy":"800"},{"ruleId":"778","replacedBy":"801"},{"ruleId":"780","replacedBy":"802"},{"ruleId":"792","severity":1,"message":"803","line":2,"column":8,"nodeType":"794","messageId":"795","endLine":2,"endColumn":13},{"ruleId":"792","severity":1,"message":"804","line":30,"column":15,"nodeType":"794","messageId":"795","endLine":30,"endColumn":29},{"ruleId":"792","severity":1,"message":"805","line":37,"column":13,"nodeType":"794","messageId":"795","endLine":37,"endColumn":16},{"ruleId":"786","severity":1,"message":"806","line":102,"column":7,"nodeType":"788","endLine":102,"endColumn":9,"suggestions":"807"},{"ruleId":"792","severity":1,"message":"808","line":23,"column":16,"nodeType":"794","messageId":"795","endLine":23,"endColumn":22},{"ruleId":"792","severity":1,"message":"809","line":1,"column":15,"nodeType":"794","messageId":"795","endLine":1,"endColumn":23},{"ruleId":"792","severity":1,"message":"810","line":1,"column":36,"nodeType":"794","messageId":"795","endLine":1,"endColumn":42},{"ruleId":"786","severity":1,"message":"787","line":48,"column":8,"nodeType":"788","endLine":48,"endColumn":10,"suggestions":"811"},{"ruleId":"792","severity":1,"message":"809","line":1,"column":32,"nodeType":"794","messageId":"795","endLine":1,"endColumn":40},{"ruleId":"792","severity":1,"message":"812","line":4,"column":9,"nodeType":"794","messageId":"795","endLine":4,"endColumn":22},{"ruleId":"786","severity":1,"message":"813","line":177,"column":7,"nodeType":"788","endLine":177,"endColumn":131,"suggestions":"814"},{"ruleId":"792","severity":1,"message":"809","line":1,"column":32,"nodeType":"794","messageId":"795","endLine":1,"endColumn":40},{"ruleId":"786","severity":1,"message":"797","line":160,"column":8,"nodeType":"798","endLine":160,"endColumn":24},{"ruleId":"786","severity":1,"message":"797","line":160,"column":25,"nodeType":"798","endLine":160,"endColumn":51},{"ruleId":"792","severity":1,"message":"815","line":10,"column":8,"nodeType":"794","messageId":"795","endLine":10,"endColumn":18},{"ruleId":"792","severity":1,"message":"816","line":33,"column":11,"nodeType":"794","messageId":"795","endLine":33,"endColumn":18},{"ruleId":"786","severity":1,"message":"817","line":55,"column":8,"nodeType":"788","endLine":55,"endColumn":25,"suggestions":"818"},{"ruleId":"786","severity":1,"message":"787","line":40,"column":8,"nodeType":"788","endLine":40,"endColumn":10,"suggestions":"819"},{"ruleId":"792","severity":1,"message":"820","line":4,"column":8,"nodeType":"794","messageId":"795","endLine":4,"endColumn":15},{"ruleId":"786","severity":1,"message":"821","line":255,"column":7,"nodeType":"788","endLine":255,"endColumn":55,"suggestions":"822"},{"ruleId":"786","severity":1,"message":"823","line":275,"column":7,"nodeType":"788","endLine":275,"endColumn":30,"suggestions":"824"},{"ruleId":"792","severity":1,"message":"825","line":19,"column":10,"nodeType":"794","messageId":"795","endLine":19,"endColumn":20},{"ruleId":"786","severity":1,"message":"826","line":272,"column":7,"nodeType":"788","endLine":272,"endColumn":32,"suggestions":"827"},{"ruleId":"786","severity":1,"message":"828","line":369,"column":8,"nodeType":"788","endLine":369,"endColumn":32,"suggestions":"829"},{"ruleId":"830","severity":1,"message":"831","line":13,"column":33,"nodeType":"798","messageId":"832","endLine":13,"endColumn":38},{"ruleId":"830","severity":1,"message":"831","line":14,"column":33,"nodeType":"798","messageId":"832","endLine":14,"endColumn":38},{"ruleId":"833","severity":1,"message":"834","line":36,"column":21,"nodeType":"835","endLine":36,"endColumn":38},{"ruleId":"786","severity":1,"message":"787","line":16,"column":8,"nodeType":"788","endLine":16,"endColumn":10,"suggestions":"836"},{"ruleId":"792","severity":1,"message":"793","line":5,"column":9,"nodeType":"794","messageId":"795","endLine":5,"endColumn":13},{"ruleId":"786","severity":1,"message":"787","line":39,"column":7,"nodeType":"788","endLine":39,"endColumn":9,"suggestions":"837"},{"ruleId":"786","severity":1,"message":"838","line":82,"column":9,"nodeType":"788","endLine":82,"endColumn":11,"suggestions":"839"},{"ruleId":"792","severity":1,"message":"809","line":1,"column":25,"nodeType":"794","messageId":"795","endLine":1,"endColumn":33},{"ruleId":"792","severity":1,"message":"840","line":4,"column":9,"nodeType":"794","messageId":"795","endLine":4,"endColumn":18},{"ruleId":"786","severity":1,"message":"841","line":67,"column":7,"nodeType":"788","endLine":67,"endColumn":11,"suggestions":"842"},{"ruleId":"786","severity":1,"message":"787","line":71,"column":7,"nodeType":"788","endLine":71,"endColumn":9,"suggestions":"843"},{"ruleId":"792","severity":1,"message":"844","line":1,"column":25,"nodeType":"794","messageId":"795","endLine":1,"endColumn":34},{"ruleId":"845","severity":1,"message":"846","line":24,"column":21,"nodeType":"847","endLine":24,"endColumn":69},{"ruleId":"792","severity":1,"message":"809","line":1,"column":32,"nodeType":"794","messageId":"795","endLine":1,"endColumn":40},{"ruleId":"786","severity":1,"message":"848","line":245,"column":7,"nodeType":"788","endLine":253,"endColumn":6,"suggestions":"849"},{"ruleId":"792","severity":1,"message":"850","line":6,"column":8,"nodeType":"794","messageId":"795","endLine":6,"endColumn":14},{"ruleId":"792","severity":1,"message":"851","line":7,"column":8,"nodeType":"794","messageId":"795","endLine":7,"endColumn":16},{"ruleId":"792","severity":1,"message":"852","line":8,"column":8,"nodeType":"794","messageId":"795","endLine":8,"endColumn":18},{"ruleId":"792","severity":1,"message":"853","line":9,"column":8,"nodeType":"794","messageId":"795","endLine":9,"endColumn":11},{"ruleId":"786","severity":1,"message":"817","line":48,"column":8,"nodeType":"788","endLine":48,"endColumn":25,"suggestions":"854"},{"ruleId":"792","severity":1,"message":"855","line":7,"column":8,"nodeType":"794","messageId":"795","endLine":7,"endColumn":17},{"ruleId":"786","severity":1,"message":"856","line":182,"column":7,"nodeType":"788","endLine":182,"endColumn":66,"suggestions":"857"},{"ruleId":"786","severity":1,"message":"858","line":43,"column":5,"nodeType":"794","endLine":43,"endColumn":14,"suggestions":"859"},{"ruleId":"792","severity":1,"message":"850","line":6,"column":8,"nodeType":"794","messageId":"795","endLine":6,"endColumn":14},{"ruleId":"792","severity":1,"message":"851","line":7,"column":8,"nodeType":"794","messageId":"795","endLine":7,"endColumn":16},{"ruleId":"792","severity":1,"message":"852","line":8,"column":8,"nodeType":"794","messageId":"795","endLine":8,"endColumn":18},{"ruleId":"792","severity":1,"message":"860","line":4,"column":44,"nodeType":"794","messageId":"795","endLine":4,"endColumn":54},{"ruleId":"786","severity":1,"message":"861","line":136,"column":7,"nodeType":"788","endLine":136,"endColumn":44,"suggestions":"862"},{"ruleId":"786","severity":1,"message":"863","line":171,"column":7,"nodeType":"788","endLine":171,"endColumn":11,"suggestions":"864"},{"ruleId":"786","severity":1,"message":"787","line":14,"column":7,"nodeType":"788","endLine":14,"endColumn":9,"suggestions":"865"},{"ruleId":"786","severity":1,"message":"787","line":15,"column":7,"nodeType":"788","endLine":15,"endColumn":9,"suggestions":"866"},{"ruleId":"792","severity":1,"message":"809","line":1,"column":39,"nodeType":"794","messageId":"795","endLine":1,"endColumn":47},{"ruleId":"786","severity":1,"message":"867","line":62,"column":7,"nodeType":"788","endLine":62,"endColumn":23,"suggestions":"868"},{"ruleId":"786","severity":1,"message":"787","line":66,"column":7,"nodeType":"788","endLine":66,"endColumn":9,"suggestions":"869"},{"ruleId":"792","severity":1,"message":"870","line":7,"column":8,"nodeType":"794","messageId":"795","endLine":7,"endColumn":15},{"ruleId":"792","severity":1,"message":"809","line":1,"column":39,"nodeType":"794","messageId":"795","endLine":1,"endColumn":47},{"ruleId":"786","severity":1,"message":"867","line":55,"column":7,"nodeType":"788","endLine":55,"endColumn":17,"suggestions":"871"},{"ruleId":"786","severity":1,"message":"787","line":59,"column":7,"nodeType":"788","endLine":59,"endColumn":9,"suggestions":"872"},{"ruleId":"786","severity":1,"message":"817","line":56,"column":8,"nodeType":"788","endLine":56,"endColumn":27,"suggestions":"873"},{"ruleId":"786","severity":1,"message":"874","line":37,"column":7,"nodeType":"788","endLine":37,"endColumn":9,"suggestions":"875"},{"ruleId":"792","severity":1,"message":"812","line":5,"column":9,"nodeType":"794","messageId":"795","endLine":5,"endColumn":22},{"ruleId":"792","severity":1,"message":"876","line":3,"column":14,"nodeType":"794","messageId":"795","endLine":3,"endColumn":20},{"ruleId":"792","severity":1,"message":"877","line":7,"column":8,"nodeType":"794","messageId":"795","endLine":7,"endColumn":12},{"ruleId":"792","severity":1,"message":"878","line":39,"column":15,"nodeType":"794","messageId":"795","endLine":39,"endColumn":21},{"ruleId":"786","severity":1,"message":"879","line":13,"column":7,"nodeType":"788","endLine":13,"endColumn":23,"suggestions":"880"},{"ruleId":"786","severity":1,"message":"879","line":18,"column":7,"nodeType":"788","endLine":18,"endColumn":21,"suggestions":"881"},{"ruleId":"786","severity":1,"message":"787","line":16,"column":7,"nodeType":"788","endLine":16,"endColumn":9,"suggestions":"882"},{"ruleId":"792","severity":1,"message":"883","line":5,"column":8,"nodeType":"794","messageId":"795","endLine":5,"endColumn":22},{"ruleId":"786","severity":1,"message":"884","line":30,"column":10,"nodeType":"788","endLine":30,"endColumn":12,"suggestions":"885"},{"ruleId":"792","severity":1,"message":"886","line":38,"column":11,"nodeType":"794","messageId":"795","endLine":38,"endColumn":26},{"ruleId":"786","severity":1,"message":"887","line":54,"column":32,"nodeType":"794","endLine":54,"endColumn":43},{"ruleId":"786","severity":1,"message":"787","line":32,"column":8,"nodeType":"788","endLine":32,"endColumn":10,"suggestions":"888"},{"ruleId":"792","severity":1,"message":"889","line":8,"column":8,"nodeType":"794","messageId":"795","endLine":8,"endColumn":14},{"ruleId":"792","severity":1,"message":"890","line":51,"column":11,"nodeType":"794","messageId":"795","endLine":51,"endColumn":16},{"ruleId":"845","severity":1,"message":"846","line":85,"column":17,"nodeType":"847","endLine":85,"endColumn":82},{"ruleId":"891","severity":1,"message":"892","line":135,"column":24,"nodeType":"893","messageId":"894","endLine":135,"endColumn":26},{"ruleId":"786","severity":1,"message":"787","line":161,"column":7,"nodeType":"788","endLine":161,"endColumn":9,"suggestions":"895"},{"ruleId":"786","severity":1,"message":"817","line":55,"column":8,"nodeType":"788","endLine":55,"endColumn":25,"suggestions":"896"},{"ruleId":"786","severity":1,"message":"879","line":14,"column":7,"nodeType":"788","endLine":14,"endColumn":23,"suggestions":"897"},{"ruleId":"786","severity":1,"message":"879","line":19,"column":7,"nodeType":"788","endLine":19,"endColumn":21,"suggestions":"898"},{"ruleId":"792","severity":1,"message":"899","line":37,"column":12,"nodeType":"794","messageId":"795","endLine":37,"endColumn":18},"no-native-reassign",["900"],"no-negated-in-lhs",["901"],["900"],["901"],["900"],["901"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["902"],["900"],["901"],"no-unused-vars","'push' is defined but never used.","Identifier","unusedVar",["903"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ObjectExpression",["900"],["901"],["900"],["901"],"'image' is defined but never used.","'positionRadius' is assigned a value but never used.","'img' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canvasHeight' and 'canvasWidth'. Either include them or remove the dependency array.",["904"],"'effect' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.",["905"],"'ScrollTrigger' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'HorizontalSectionRefs.current', 'bodyRef.current', 'containerRef.current', 'horizontalRef.current', and 'sectionRefs.current'. Either exclude them or remove the dependency array. Mutable values like 'bodyRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["906"],"'Typography' is defined but never used.","'classes' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["907"],["908"],"'Divider' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'fadeinScrollAreaRef.current' and 'revealRefs.current'. Either exclude them or remove the dependency array. Mutable values like 'fadeinScrollAreaRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["909"],"React Hook useEffect has an unnecessary dependency: 'postHeaderRef.current'. Either exclude it or remove the dependency array. Mutable values like 'postHeaderRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["910"],"'Transition' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'sliderBottomRef.current'. Either exclude it or remove the dependency array. Mutable values like 'sliderBottomRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["911"],"React Hook useEffect has an unnecessary dependency: 'slideshowInner.current'. Either exclude it or remove the dependency array. Mutable values like 'slideshowInner.current' aren't valid dependencies because mutating them doesn't re-render the component.",["912"],"no-dupe-keys","Duplicate key 'width'.","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["913"],["914"],"React Hook useEffect has a missing dependency: 'mousewheel'. Either include it or remove the dependency array.",["915"],"'getStages' is defined but never used.","React Hook useCallback has a missing dependency: 'locations'. Either include it or remove the dependency array.",["916"],["917"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["918"],"'purple' is defined but never used.","'blueGrey' is defined but never used.","'lightGreen' is defined but never used.","'red' is defined but never used.",["919"],"'PostsArea' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'container.current', 'stagesBox.current', and 'titleStageRef.current'. Either exclude them or remove the dependency array. Mutable values like 'container.current' aren't valid dependencies because mutating them doesn't re-render the component.",["920"],"React Hook useEffect contains a call to 'setSliderBoxHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["921"],"'Pagination' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'locationRef.current' and 'postRef.current'. Either exclude them or remove the dependency array. Mutable values like 'postRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["922"],"React Hook useEffect has missing dependencies: 'dispatch' and 'posts'. Either include them or remove the dependency array.",["923"],["924"],["925"],"React Hook useCallback has a missing dependency: 'posts'. Either include it or remove the dependency array.",["926"],["927"],"'NoImage' is defined but never used.",["928"],["929"],["930"],"React Hook useEffect has missing dependencies: 'posts' and 'props.id'. Either include them or remove the dependency array.",["931"],"'power2' is defined but never used.","'pink' is defined but never used.","'scroll' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'images', 'index', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["932"],["933"],["934"],"'LinearProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'handleToggle'. Either include it or remove the dependency array.",["935"],"'handleApiLoaded' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["936"],"'Button' is defined but never used.","'theme' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["937"],["938"],["939"],["940"],"'loaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"941","fix":"942"},{"desc":"941","fix":"943"},{"desc":"944","fix":"945"},{"desc":"941","fix":"946"},{"desc":"947","fix":"948"},{"desc":"949","fix":"950"},{"desc":"941","fix":"951"},{"desc":"952","fix":"953"},{"desc":"952","fix":"954"},{"desc":"952","fix":"955"},{"desc":"952","fix":"956"},{"desc":"941","fix":"957"},{"desc":"941","fix":"958"},{"desc":"959","fix":"960"},{"desc":"961","fix":"962"},{"desc":"941","fix":"963"},{"desc":"964","fix":"965"},{"desc":"949","fix":"966"},{"desc":"952","fix":"967"},{"desc":"968","fix":"969"},{"desc":"952","fix":"970"},{"desc":"971","fix":"972"},{"desc":"941","fix":"973"},{"desc":"941","fix":"974"},{"desc":"975","fix":"976"},{"desc":"941","fix":"977"},{"desc":"975","fix":"978"},{"desc":"941","fix":"979"},{"desc":"949","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"983","fix":"985"},{"desc":"941","fix":"986"},{"desc":"987","fix":"988"},{"desc":"941","fix":"989"},{"desc":"941","fix":"990"},{"desc":"949","fix":"991"},{"desc":"983","fix":"992"},{"desc":"983","fix":"993"},"Update the dependencies array to be: [dispatch]",{"range":"994","text":"995"},{"range":"996","text":"995"},"Update the dependencies array to be: [canvasHeight, canvasWidth]",{"range":"997","text":"998"},{"range":"999","text":"995"},"Update the dependencies array to be: [addToRefs]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [props]",{"range":"1002","text":"1003"},{"range":"1004","text":"995"},"Update the dependencies array to be: []",{"range":"1005","text":"1006"},{"range":"1007","text":"1006"},{"range":"1008","text":"1006"},{"range":"1009","text":"1006"},{"range":"1010","text":"995"},{"range":"1011","text":"995"},"Update the dependencies array to be: [mousewheel]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [locations]",{"range":"1014","text":"1015"},{"range":"1016","text":"995"},"Update the dependencies array to be: [bodyRef, containerRef, sectionRefs, HorizontalSectionRefs, addToRefs]",{"range":"1017","text":"1018"},{"range":"1019","text":"1003"},{"range":"1020","text":"1006"},"Add dependencies array: []",{"range":"1021","text":"1022"},{"range":"1023","text":"1006"},"Update the dependencies array to be: [dispatch, id, posts]",{"range":"1024","text":"1025"},{"range":"1026","text":"995"},{"range":"1027","text":"995"},"Update the dependencies array to be: [posts]",{"range":"1028","text":"1029"},{"range":"1030","text":"995"},{"range":"1031","text":"1029"},{"range":"1032","text":"995"},{"range":"1033","text":"1003"},"Update the dependencies array to be: [posts, props.id]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [images, index, props]",{"range":"1036","text":"1037"},{"range":"1038","text":"1037"},{"range":"1039","text":"995"},"Update the dependencies array to be: [handleToggle]",{"range":"1040","text":"1041"},{"range":"1042","text":"995"},{"range":"1043","text":"995"},{"range":"1044","text":"1003"},{"range":"1045","text":"1037"},{"range":"1046","text":"1037"},[722,724],"[dispatch]",[1689,1691],[2956,2958],"[canvasHeight, canvasWidth]",[1445,1447],[6014,6138],"[addToRefs]",[2192,2209],"[props]",[1206,1208],[7862,7910],"[]",[8474,8497],[9106,9131],[12249,12273],[577,579],[1256,1258],[3128,3130],"[mousewheel]",[2094,2098],"[locations]",[2170,2172],[8232,8412],"[bodyRef, containerRef, sectionRefs, HorizontalSectionRefs, addToRefs]",[1966,1983],[5177,5236],[1897,1897],", []",[4522,4559],[5831,5835],"[dispatch, id, posts]",[503,505],[575,577],[2288,2304],"[posts]",[2368,2370],[2037,2047],[2111,2113],[2275,2294],[991,993],"[posts, props.id]",[526,542],"[images, index, props]",[719,733],[580,582],[977,979],"[handleToggle]",[1097,1099],[5034,5036],[2267,2284],[527,543],[720,734]]