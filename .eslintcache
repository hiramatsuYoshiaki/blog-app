[{"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx":"1","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx":"2","D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx":"3","D:\\develop-react\\blog-app\\src\\App.jsx":"4","D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js":"5","D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js":"6","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js":"7","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js":"8","D:\\develop-react\\blog-app\\src\\templates\\Header.jsx":"9","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx":"10","D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx":"11","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx":"12","D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx":"13","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx":"14","D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js":"15","D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js":"16","D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js":"17","D:\\develop-react\\blog-app\\src\\firebase\\index.js":"18","D:\\develop-react\\blog-app\\src\\components\\tags\\index.js":"19","D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx":"20","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx":"21","D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx":"22","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx":"23","D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx":"24","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx":"25","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx":"26","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx":"27","D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx":"28","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx":"29","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx":"30","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx":"31","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx":"32","D:\\develop-react\\blog-app\\src\\reportWebVitals.js":"33","D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js":"34","D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js":"35","D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx":"36","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx":"37","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx":"38","D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx":"39","D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js":"40","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js":"41","D:\\develop-react\\blog-app\\src\\Auth.jsx":"42","D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js":"43","D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js":"44","D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js":"45","D:\\develop-react\\blog-app\\src\\components\\stage\\index.js":"46","D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js":"47","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js":"48","D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx":"49","D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx":"50","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx":"51","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx":"52","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx":"53","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx":"54","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx":"55","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx":"56","D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx":"57","D:\\develop-react\\blog-app\\src\\index.js":"58","D:\\develop-react\\blog-app\\src\\Router.jsx":"59","D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js":"60","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx":"61","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx":"62","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx":"63","D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js":"64","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js":"65","D:\\develop-react\\blog-app\\src\\components\\home\\index.js":"66","D:\\develop-react\\blog-app\\src\\components\\location\\index.js":"67","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx":"68","D:\\develop-react\\blog-app\\src\\firebase\\config.js":"69","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx":"70","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx":"71","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js":"72","D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx":"73","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx":"74","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js":"75","D:\\develop-react\\blog-app\\src\\googleMap\\config.js":"76","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx":"77","D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx":"78","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx":"79","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx":"80","D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx":"81","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js":"82","D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js":"83","D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx":"84","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx":"85","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx":"86","D:\\develop-react\\blog-app\\src\\templates\\index.js":"87","D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js":"88","D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx":"89","D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx":"90","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx":"91","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx":"92","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx":"93","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx":"94","D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx":"95","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx":"96","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx":"97","D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js":"98","D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx":"99","D:\\develop-react\\blog-app\\src\\components\\post\\index.js":"100","D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx":"101","D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx":"102","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx":"103","D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js":"104","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx":"105","D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx":"106"},{"size":1178,"mtime":1613112367408,"results":"107","hashOfConfig":"108"},{"size":7708,"mtime":1614153535247,"results":"109","hashOfConfig":"108"},{"size":1715,"mtime":1613114868305,"results":"110","hashOfConfig":"108"},{"size":272,"mtime":1612502317658,"results":"111","hashOfConfig":"108"},{"size":478,"mtime":1609854411718,"results":"112","hashOfConfig":"108"},{"size":538,"mtime":1610689428433,"results":"113","hashOfConfig":"108"},{"size":574,"mtime":1609854468131,"results":"114","hashOfConfig":"108"},{"size":324,"mtime":1610685636013,"results":"115","hashOfConfig":"108"},{"size":10092,"mtime":1614325784697,"results":"116","hashOfConfig":"108"},{"size":674,"mtime":1612275440072,"results":"117","hashOfConfig":"108"},{"size":6367,"mtime":1612941158046,"results":"118","hashOfConfig":"108"},{"size":1840,"mtime":1612883513207,"results":"119","hashOfConfig":"108"},{"size":2738,"mtime":1614153535248,"results":"120","hashOfConfig":"108"},{"size":2895,"mtime":1612856647485,"results":"121","hashOfConfig":"108"},{"size":2057,"mtime":1612275339413,"results":"122","hashOfConfig":"108"},{"size":1905,"mtime":1610812188627,"results":"123","hashOfConfig":"108"},{"size":470,"mtime":1611500285060,"results":"124","hashOfConfig":"108"},{"size":562,"mtime":1609855395833,"results":"125","hashOfConfig":"108"},{"size":47,"mtime":1610810670546,"results":"126","hashOfConfig":"108"},{"size":772,"mtime":1610810018688,"results":"127","hashOfConfig":"108"},{"size":685,"mtime":1610810699159,"results":"128","hashOfConfig":"108"},{"size":4429,"mtime":1610810995823,"results":"129","hashOfConfig":"108"},{"size":1563,"mtime":1611038792529,"results":"130","hashOfConfig":"108"},{"size":2021,"mtime":1610810676726,"results":"131","hashOfConfig":"108"},{"size":1494,"mtime":1612941158007,"results":"132","hashOfConfig":"108"},{"size":2848,"mtime":1612936417154,"results":"133","hashOfConfig":"108"},{"size":3458,"mtime":1614153535247,"results":"134","hashOfConfig":"108"},{"size":461,"mtime":1611644466420,"results":"135","hashOfConfig":"108"},{"size":1188,"mtime":1611040859308,"results":"136","hashOfConfig":"108"},{"size":4347,"mtime":1610810649449,"results":"137","hashOfConfig":"108"},{"size":4143,"mtime":1612938265396,"results":"138","hashOfConfig":"108"},{"size":2172,"mtime":1612495041043,"results":"139","hashOfConfig":"108"},{"size":362,"mtime":1606632244700,"results":"140","hashOfConfig":"108"},{"size":534,"mtime":1611896770248,"results":"141","hashOfConfig":"108"},{"size":558,"mtime":1610810952720,"results":"142","hashOfConfig":"108"},{"size":2508,"mtime":1612275483349,"results":"143","hashOfConfig":"108"},{"size":2164,"mtime":1612704387130,"results":"144","hashOfConfig":"108"},{"size":1398,"mtime":1612883526326,"results":"145","hashOfConfig":"108"},{"size":2120,"mtime":1612855040977,"results":"146","hashOfConfig":"108"},{"size":334,"mtime":1611896764916,"results":"147","hashOfConfig":"108"},{"size":381,"mtime":1610810964974,"results":"148","hashOfConfig":"108"},{"size":641,"mtime":1612268267860,"results":"149","hashOfConfig":"108"},{"size":189,"mtime":1609995316979,"results":"150","hashOfConfig":"108"},{"size":194,"mtime":1610287566559,"results":"151","hashOfConfig":"108"},{"size":386,"mtime":1609859521995,"results":"152","hashOfConfig":"108"},{"size":220,"mtime":1614144453197,"results":"153","hashOfConfig":"108"},{"size":184,"mtime":1610379821286,"results":"154","hashOfConfig":"108"},{"size":317,"mtime":1612943404932,"results":"155","hashOfConfig":"108"},{"size":4416,"mtime":1612503620317,"results":"156","hashOfConfig":"108"},{"size":857,"mtime":1610892386053,"results":"157","hashOfConfig":"108"},{"size":3948,"mtime":1611902322953,"results":"158","hashOfConfig":"108"},{"size":5948,"mtime":1610810558402,"results":"159","hashOfConfig":"108"},{"size":289,"mtime":1610810606887,"results":"160","hashOfConfig":"108"},{"size":1702,"mtime":1612941072413,"results":"161","hashOfConfig":"108"},{"size":340,"mtime":1610810041233,"results":"162","hashOfConfig":"108"},{"size":1200,"mtime":1611727042798,"results":"163","hashOfConfig":"108"},{"size":1863,"mtime":1611282795015,"results":"164","hashOfConfig":"108"},{"size":792,"mtime":1609854623605,"results":"165","hashOfConfig":"108"},{"size":2114,"mtime":1614325634767,"results":"166","hashOfConfig":"108"},{"size":528,"mtime":1610685674059,"results":"167","hashOfConfig":"108"},{"size":2691,"mtime":1612855842572,"results":"168","hashOfConfig":"108"},{"size":1605,"mtime":1612883486004,"results":"169","hashOfConfig":"108"},{"size":5491,"mtime":1612883386640,"results":"170","hashOfConfig":"108"},{"size":342,"mtime":1610809231975,"results":"171","hashOfConfig":"108"},{"size":2228,"mtime":1612248495951,"results":"172","hashOfConfig":"108"},{"size":265,"mtime":1612103877974,"results":"173","hashOfConfig":"108"},{"size":218,"mtime":1610810004627,"results":"174","hashOfConfig":"108"},{"size":1265,"mtime":1611039774151,"results":"175","hashOfConfig":"108"},{"size":394,"mtime":1610031357760,"results":"176","hashOfConfig":"108"},{"size":970,"mtime":1610810551110,"results":"177","hashOfConfig":"108"},{"size":3063,"mtime":1610944911106,"results":"178","hashOfConfig":"108"},{"size":1044,"mtime":1610550536840,"results":"179","hashOfConfig":"108"},{"size":1588,"mtime":1612685173682,"results":"180","hashOfConfig":"108"},{"size":3258,"mtime":1614153535247,"results":"181","hashOfConfig":"108"},{"size":2201,"mtime":1610812159008,"results":"182","hashOfConfig":"108"},{"size":91,"mtime":1610517406770,"results":"183","hashOfConfig":"108"},{"size":4827,"mtime":1610810011559,"results":"184","hashOfConfig":"108"},{"size":1201,"mtime":1612495094572,"results":"185","hashOfConfig":"108"},{"size":969,"mtime":1612941158046,"results":"186","hashOfConfig":"108"},{"size":3840,"mtime":1612940585319,"results":"187","hashOfConfig":"108"},{"size":1786,"mtime":1612882469024,"results":"188","hashOfConfig":"108"},{"size":338,"mtime":1610550482017,"results":"189","hashOfConfig":"108"},{"size":209,"mtime":1610552535912,"results":"190","hashOfConfig":"108"},{"size":1287,"mtime":1610810578677,"results":"191","hashOfConfig":"108"},{"size":1375,"mtime":1611039237001,"results":"192","hashOfConfig":"108"},{"size":1696,"mtime":1612941158046,"results":"193","hashOfConfig":"108"},{"size":1062,"mtime":1614322322479,"results":"194","hashOfConfig":"108"},{"size":2622,"mtime":1610810804083,"results":"195","hashOfConfig":"108"},{"size":533,"mtime":1610810725893,"results":"196","hashOfConfig":"108"},{"size":1621,"mtime":1611213887222,"results":"197","hashOfConfig":"108"},{"size":1289,"mtime":1610863400313,"results":"198","hashOfConfig":"108"},{"size":2250,"mtime":1613713301329,"results":"199","hashOfConfig":"108"},{"size":672,"mtime":1612494399533,"results":"200","hashOfConfig":"108"},{"size":1864,"mtime":1611039564908,"results":"201","hashOfConfig":"108"},{"size":6076,"mtime":1613709544083,"results":"202","hashOfConfig":"108"},{"size":1246,"mtime":1611644460787,"results":"203","hashOfConfig":"108"},{"size":3638,"mtime":1612883464370,"results":"204","hashOfConfig":"108"},{"size":41,"mtime":1613108363481,"results":"205","hashOfConfig":"108"},{"size":3486,"mtime":1610816464759,"results":"206","hashOfConfig":"108"},{"size":772,"mtime":1612932746035,"results":"207","hashOfConfig":"108"},{"size":3520,"mtime":1614322712197,"results":"208","hashOfConfig":"108"},{"size":762,"mtime":1614324399493,"results":"209","hashOfConfig":"108"},{"size":2466,"mtime":1614234618123,"results":"210","hashOfConfig":"108"},{"size":96,"mtime":1614235480093,"results":"211","hashOfConfig":"108"},{"size":7450,"mtime":1614325754726,"results":"212","hashOfConfig":"108"},{"size":1309,"mtime":1614327876592,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"vg192i",{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"250"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"220"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"220"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"271"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"250"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"220"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"239"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"250"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"250"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"220"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"239"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"239"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"410"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"271"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"220"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"250"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"220"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx",[],["455","456"],"D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx",["457"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../firebase/index'\r\nimport moment from 'moment'\r\nimport {TopImageArea,PostArea,LocationArea,Pagination,SNSArea} from '../components/postDetail/index'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\n\r\nconst Postdetail = () => { \r\n\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    let id = window.location.pathname.split('/post/detail')[1]\r\n    if (id !== '') {\r\n        id = id.split('/')[1]\r\n    }\r\n    const [title, setTitle] = useState(\"\")\r\n    const [article, setArticle] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n\r\n    const dateNow = moment().format()//2014-08-18T21:11:54+09:47\r\n    const dateSplit = dateNow.split('+')//2014-08-18T21:11:54 この形式でpicerに渡す\r\n    const [postDate, setPostDate] = useState(dateSplit[0]);\r\n\r\n    const [topImages, setTopImages] = useState([])\r\n    const [postImages, setPostImages] = useState([])\r\n    //stage\r\n    const [stage, setStage] = useState(\"\")\r\n    const [stageNo,setStageNo]= useState(\"\")\r\n    const [stageYear,setStageYear]= useState(0)\r\n    const [stageImages,setStageImages] = useState([])\r\n    //tag\r\n    const [tags, setTags] = useState([])\r\n    //location\r\n    const [locationName, setLocationName] = useState([])\r\n    const [locationAddress, setLocationAddress] = useState([])\r\n    const [locationLat, setLocationLat] = useState([])\r\n    const [locationLng, setLocationLng] = useState([])\r\n    const [locationImages, setLocationImages] = useState([])\r\n   \r\n    // useEffect(() => {\r\n    //     if(!posts){\r\n    //         dispatch(fetchPosts())\r\n    //     }\r\n\r\n    //     // }else{\r\n    //         const post = posts.find(post => post.id === id)\r\n    //         if(post){\r\n    //             setTitle(post.title)\r\n    //             setArticle(post.article)\r\n    //             setType(post.type)\r\n    //             setPostDate(post.postDate)\r\n    //             setTopImages(post.topImages)\r\n    //             setPostImages(post.postImages)\r\n    //             //stage\r\n    //             setStage(post.stage.stage)\r\n    //             setStageNo(post.stage.stageNo)\r\n    //             setStageYear(post.stage.stageYear)\r\n    //             setStageImages(post.stage.images)\r\n    //             //tag\r\n    //             setTags(post.tags)\r\n    //             //location\r\n    //             setLocationName(post.location.name)\r\n    //             setLocationAddress(post.location.address)\r\n    //             setLocationLat(post.location.position.lat)\r\n    //             setLocationLng(post.location.position.lng)\r\n    //             setLocationImages(post.location.images)\r\n    //         // }\r\n    //     }\r\n    // }, [])\r\n    useEffect(() => {\r\n        if(!posts || posts.length === 0){\r\n            dispatch(fetchPosts())\r\n        }\r\n        if (id !== '') {\r\n            db.collection('posts').doc(id).get().then(snapshot => {\r\n                const post = snapshot.data()\r\n                setTitle(post.title)\r\n                setArticle(post.article)\r\n                setType(post.type)\r\n                setPostDate(post.postDate)\r\n                setTopImages(post.topImages)\r\n                setPostImages(post.postImages)\r\n                //stage\r\n                setStage(post.stage.stage)\r\n                setStageNo(post.stage.stageNo)\r\n                setStageYear(post.stage.stageYear)\r\n                setStageImages(post.stage.images)\r\n                //tag\r\n                setTags(post.tags)\r\n                //location\r\n                setLocationName(post.location.name)\r\n                setLocationAddress(post.location.address)\r\n                setLocationLat(post.location.position.lat)\r\n                setLocationLng(post.location.position.lng)\r\n                setLocationImages(post.location.images)\r\n\r\n            }).catch(error => {\r\n                throw new Error(error) \r\n            })\r\n        }\r\n    },[id])  \r\n\r\n    \r\n    return (\r\n        <main>\r\n            {/* TopImageArea--------------------------------------------------------- */}\r\n            <TopImageArea title={title} stage={stage} stageNo={stageNo} stageYear={stageYear} images={topImages}/> \r\n            {/* PostArea--------------------------------------------------------- */}\r\n            <PostArea stage={stage} stageNo={stageNo} stageYear={stageYear} stageImages={stageImages}\r\n                        article={article} type={type} postDate={postDate} postImages={postImages}\r\n                        tags={tags} \r\n                        locationName={locationName} locationAddress={locationAddress}\r\n                    />\r\n            {/* Pagination--------------------------------------------------------- */}\r\n            <Pagination posts={posts} id={id}/>\r\n            {/* LocationArea--------------------------------------------------------- */}\r\n            <LocationArea locationName={locationName} locationAddress={locationAddress}\r\n                locationLat={locationLat}\r\n                locationLng={locationLng}\r\n                locationImages={locationImages} \r\n                    />\r\n             \r\n            {/* PostListArea--------------------------------------------------------- */}\r\n            {/* <PostListArea  */}\r\n            {/* SNSrea--------------------------------------------------------- */}\r\n            <SNSArea images={topImages} postImages={postImages}/> \r\n            {/* <h1>{id}</h1>\r\n            <h1>{title}</h1>\r\n            <h1>{article}</h1>\r\n            <h1>{type}</h1>\r\n            <h1>{postDate}</h1>\r\n            <h1>TopImage</h1>\r\n            {topImages.length > 0 && (\r\n                topImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={ image.description} className=\"p-imagePreview__img\"/>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>PostImage</h1>\r\n            {postImages.length > 0 && (\r\n                postImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )} */}\r\n\r\n\r\n\r\n{/*             \r\n            <h1>Stage</h1>\r\n            <p>{stage}</p>\r\n            <p>{stageNo}</p>\r\n            <p>{stageYear}</p>\r\n            {stageImages.length > 0 && (\r\n                stageImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )}\r\n\r\n            <h1>Locations</h1>\r\n            \r\n            <p>{locationName}</p>\r\n            <p>{locationAddress}</p>\r\n            <p>{locationLat}</p>\r\n            <p>{locationLng}</p>\r\n            {locationImages.length > 0 && (\r\n                locationImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <video  muted className=\"p-imagePreview__img\">\r\n                            <source src={image.path} type=\"video/mp4\" />\r\n                        </video>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>Tags</h1>\r\n            \r\n            {tags.length > 0 && (\r\n               tags.map(tag => (\r\n                    <div key={tag.id}>\r\n                        <p>{tag.name}</p>\r\n                    </div>\r\n                ))\r\n            )} */}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Postdetail\r\n",["458","459"],"D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx",["460","461","462"],"import React,{useEffect} from 'react'\r\n\r\nconst Enbed = props => {\r\n    const styleBlokquote = { background:\"#FFF\", \r\n                                border:0, \r\n                                borderRadius:\"3px\", \r\n                                boxShadow:\"0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15)\", \r\n                                margin: \"1px\", \r\n                                maxWidth:\"540px\", \r\n                                minWidth:\"326px\", \r\n                                padding:0, \r\n                                width:\"99.375%\", \r\n                                width:\"-webkit-calc(100% - 2px)\", \r\n                                width:\"calc(100% - 2px)\" \r\n                            }\r\n    const styleLink = { background:\"#FFFFFF\", \r\n                        lineHeight:0, \r\n                        padding:\"0 0\", \r\n                        textAlign:\"center\", \r\n                        textDecoration:\"none\", \r\n                        width:\"100%\"\r\n                    }\r\n    useEffect(()=>{\r\n        if (window.instgrm) window.instgrm.Embeds.process()\r\n    },[])\r\n    return (\r\n        <> \r\n             <blockquote \r\n              class=\"instagram-media\" \r\n              data-instgrm-captioned \r\n              data-instgrm-version=\"12\"\r\n              style={styleBlokquote}\r\n              >\r\n                <a href={props.path} \r\n                    style={styleLink} \r\n                    target={\"_blank\"}\r\n                >\r\n                </a>\r\n            </blockquote>\r\n            {/* index.htmlで読み込む */}\r\n            {/* <script async defer src=\"http://platform.instagram.com/en_US/embeds.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enbed\r\n","D:\\develop-react\\blog-app\\src\\App.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js",[],["463","464"],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Header.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx",[],["465","466"],"D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js",[],["467","468"],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js",[],["469","470"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js",[],"D:\\develop-react\\blog-app\\src\\firebase\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx",["471"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst VideoUpload = (props) => {\r\n    const classes = useStyles()\r\n\r\n    // const [imageId, setImageId] = useState('')\r\n    // const [imagePath, setImagePath] = useState('')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"video/mp4\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // setImageDescription(\"GoogleEerth\")\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: \"\" };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [ props.setImages ])\r\n    // const inputDescription = useCallback((e) => {\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>動画を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept=\"video/mp4\"\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n            {/* <h1>{imageId}</h1>\r\n            <h1>{imagePath}</h1>\r\n            <h1>{imageDescription}</h1>\r\n            <TextInput\r\n                    fullWidth={true} label={\"動画の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx",[],["472","473"],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx",["474"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst AddImagesUpload = props => {\r\n    const classes = useStyles()\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: '', instagram:'', twitter:'' };\r\n                if (props.Multiple) {\r\n                    props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                } else {\r\n                    props.setImages([newImage])\r\n                }\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span className=\"p\">{props.title}</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon fontSize=\"large\"/>\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx",["475"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput,PrimaryButton} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n \r\nconst ImagesUpload = props => {\r\n    const classes = useStyles()\r\n    // const [imageId, setImageId] = useState('imageId')\r\n    // const [imagePath, setImagePath] = useState('imagePath')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // dispatch(hideLoadingAction())\r\n                \r\n                const newImage = { id: fileName, path: downloadURL, description: '' };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    // const inputDescription = useCallback((e) => {\r\n\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n        \r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    \r\n    return (\r\n        <div>\r\n            <span>画像を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n           \r\n            {/* <TextInput\r\n                    fullWidth={true} label={\"画像の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx",["476"],"import React from 'react'\r\nimport {useDispatch} from  'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrape:{\r\n        [theme.breakpoints.down('sm')]:{\r\n            margin:8,\r\n            width:'100%',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            margin:8,\r\n            width:'calc(50% - 16px )',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            margin:16,\r\n            width:'calc(25% - 32px)',\r\n            height:'auto'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent:'flex-start',\r\n        // alignItems:'flex-start',\r\n        height: '100%',\r\n    },\r\n    button:{\r\n        marginRight:0,\r\n        marginLeft:'auto',\r\n        padding:'0 16px'\r\n    },\r\n    chip:{\r\n        marginRight:4\r\n    },\r\n    cardActionArea:{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent:'flex-start',\r\n        alignItems:'flex-start',\r\n    },\r\n    cardAction:{\r\n        flexShrink: 0\r\n    }\r\n}))\r\n\r\nconst NewPostsArea = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const post = props.post\r\n    const handleClickTga =(ids,e) =>{\r\n        //投稿表示エリアのフィルターするキーを設定する\r\n        props.setFilter({\r\n            type:'tag',\r\n            key:ids.postId,\r\n            locationKey:'',\r\n            tagKey:ids.tagId,\r\n        })\r\n        props.setVolume(props.defaultVolume)\r\n    }\r\n    \r\n    return (\r\n        <Card className={classes.cardWrape}>\r\n            <CardActionArea className={classes.cardActionArea}>\r\n                {post.topImages.length > 0 && (\r\n                    post.topImages.map(image => (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={image.description}\r\n                            height=\"auto\"\r\n                            image={image.path}\r\n                            title={image.title}\r\n                            key={image.id}\r\n                        />\r\n                    ))\r\n                )} \r\n                <CardContent>\r\n                    <h4>{post.title}</h4>\r\n                    <p>{post.postDate.split('T')[0]}</p>\r\n                    <p>{post.location.name}</p>\r\n                    {post.tags.length > 0 && (\r\n                        post.tags.map(tag => (\r\n                            <span key={tag.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    label={tag.name}\r\n                                    onClick={(e) => handleClickTga({postId:post.id,tagId:tag.id},e)}\r\n                                    className={classes.chip}\r\n                                    clickable\r\n                                />\r\n                            </span>\r\n                        ))\r\n                    )} \r\n                </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    endIcon={<ChevronRightIcon/>}\r\n                    onClick={()=> dispatch(push('/post/detail/' + props.id ))}\r\n                    className={classes.button}\r\n                    >\r\n                    投稿を見る\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewPostsArea\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx",[],"D:\\develop-react\\blog-app\\src\\reportWebVitals.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx",["477","478"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      width: '100%',\r\n    //   border:'1px solid white',\r\n    //   backgroundColor:'white'\r\n    },\r\n  }));\r\n\r\nconst PostListGridImage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid \">\r\n           <div className=\"l-section \">\r\n            <div className={classes.root}>\r\n                    <GridList cellHeight={'auto'} className={classes.gridList} cols={3}>\r\n                        {  postsSort().length > 0 &&(\r\n                            postsSort().map(post=> (\r\n                                post.topImages.map(topImage=>(\r\n                                    <GridListTile key={topImage.id} cols={1}>\r\n                                        <img src={topImage.path} alt={topImage.description} className=\"c-image-fit-cover\"/>\r\n                                    </GridListTile>\r\n                                ))\r\n                            ))\r\n                        )}\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PostListGridImage \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js",[],"D:\\develop-react\\blog-app\\src\\Auth.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx",["479"],"import React,{ useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoImage from '../../assets/img/no_image.jpg'\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { deletePost } from '../../reducks/posts/operators'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 8,\r\n            width: 'calc(50% - 16px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: 16,\r\n            width: 'calc(33.3333% - 32px)'\r\n        },\r\n    },\r\n    // content: {\r\n    //     display: 'flex',\r\n    //     padding: '16px 8px',\r\n    //     textAlign: 'left',\r\n    //     '&:last-child': {\r\n    //         paddingBottom: 16\r\n    //     }\r\n    // },\r\n    media: {\r\n        height: 200,\r\n        width:'auto'\r\n    },\r\n    // icon: {\r\n    //     marginRight: 0,\r\n    //     marginLeft: 'auto'\r\n    // }\r\n\r\n})) \r\nconst PostListCard = props => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const topImages = props.topImages\r\n    // const topImages = (props.topImages.length > 0 ? props.images : [{ path: NoImage }])\r\n    // const postImages = (props.postImages.length > 0 ? props.images : [{ path: NoImage }])\r\n\r\n    return (\r\n        <div>\r\n            {/* <PostListCard key={post.id}\r\n                            id={post.id} title={post.title} article={post.article}\r\n                            postDate={post.postDate} type={post.type}\r\n                            topImages={postImages} postImages={post.postImages}\r\n                        /> */}\r\n            <Card className={classes.root}>\r\n                 {/* id={stage.id} sort={stage.sort}\r\n                            stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                            images={stage.images} */}\r\n                <CardMedia className={classes.media}\r\n                    image={topImages[0].path}\r\n                    // title={topImages[0].description}\r\n                    // onClick={() => dispatch(push('/post/' + props.id))}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {props.title}\r\n                    </Typography>\r\n                    {/* <Typography>\r\n                        {props.stageYear} STAGE-{props.stageNo}\r\n                    </Typography> */}\r\n                </CardContent>\r\n            </Card>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon></MoreVertIcon>\r\n            </IconButton>\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClick={handleClose}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                        dispatch(push('/post/edit/' + props.id))\r\n                        handleClose()\r\n                }}>\r\n                    編集する\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        dispatch(deletePost(props.id))\r\n                        handleClose()\r\n                }}>\r\n                    削除する\r\n                </MenuItem>\r\n            </Menu >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default PostListCard\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx",["480","481"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\nconst PostImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n    return (\r\n        <div>\r\n             <div className=\"classes.u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PostImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx",["482"],"import React,{useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MultipleSelect } from '../UiKit/index'\r\nimport { getTags } from '../../reducks/tags/seloctors'\r\nimport { fetchTags } from '../../reducks/tags/operators'\r\n\r\nconst TagsArea = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const tags = getTags(selector)\r\n    \r\n\r\n    const handleChange = (selectedTags) => {\r\n        const selectedValue = []\r\n        if(selectedTags.length > 0 ){\r\n            selectedTags.forEach(selectedTag => {\r\n                const found = tags.find(tag => tag.id === selectedTag)\r\n                if (found){\r\n                    selectedValue.push(found)\r\n                }\r\n            })\r\n        }\r\n        props.setTgas(selectedValue)\r\n    }\r\n    const valueTags = (pTags) => {\r\n        if(pTags === []){\r\n            return []\r\n        }\r\n        const valueTags = []\r\n        pTags.forEach(pTag=>{\r\n            console.log(pTag.id);\r\n            console.log(pTag.name);\r\n            valueTags.push(pTag.id)\r\n        })\r\n        return valueTags\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTags())\r\n    }, [])  \r\n    \r\n    return (\r\n        <div>\r\n            <h3>TagsArea</h3>\r\n            <p>タグを選択してください</p>\r\n            <MultipleSelect\r\n                label={\"タグ\"}\r\n                // value={props.tags || []}\r\n                value={valueTags(props.tags)}\r\n                handleChange={handleChange}\r\n                options={tags}\r\n                required={true}\r\n            />\r\n            {/* <h1>tag name</h1>\r\n            {selected.length > 0 && (\r\n                selected.map(value => {\r\n                    <h1>value.name</h1>\r\n                })\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagsArea\r\n","D:\\develop-react\\blog-app\\src\\index.js",[],"D:\\develop-react\\blog-app\\src\\Router.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx",["483"],"import React,{ useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getStages } from '../reducks/stage/selectors'\r\nimport { StageCard } from '../components/stage/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst StageList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state => state))\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStages()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                <h2>ステージリスト</h2>\r\n                    {\r\n                        stages.length > 0 && ( \r\n                            stages.map((stage) => (\r\n                                <StageCard key={stage.id}\r\n                                    id={stage.id} sort={stage.sort}\r\n                                    stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                                    images={stage.images} />\r\n                            ))\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <Button onClick={()=> dispatch(push('/admin'))}>\r\n                            <p>Back to Admin Menu</p>\r\n                        </Button> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default StageList \r\n","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx",[],["484","485"],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx",[],"D:\\develop-react\\blog-app\\src\\firebase\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx",["486"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst ReplaceImgesUpload = props => {\r\n    const classes = useStyles()\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => { \r\n\r\n                const id = props.images[props.index].id\r\n                const newImages = props.images.filter(image => image.id !== id)\r\n                const newImage = { id: fileName, path: downloadURL, description: 'new image' };\r\n                newImages.push(newImage)\r\n                props.setImages(newImages) \r\n                \r\n                // props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                // newBookmarks = bookmarks.filter(item !== article.id)\r\n\r\n\r\n                // dispatch(hideLoadingAction())\r\n                // props.setImages([newImage]) \r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>投稿画像を変更する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplaceImgesUpload\r\n","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx",["487"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostListGrid = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid c-post-list-grid\">\r\n           <div className=\"l-row\">\r\n                {  postsSort().length > 0 &&(\r\n                     postsSort().map(post=> (\r\n                        post.topImages.map(topImage=>(\r\n                            <div key={topImage.id} \r\n                                className=\"l-col-4\" \r\n                                onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                            >\r\n                                <img src={topImage.path} \r\n                                   alt={post.title} \r\n                                   className=\"c-image-fit-cover\"/>\r\n                            </div>\r\n                        ))\r\n                    ))\r\n                )}\r\n           </div>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostListGrid \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx",["488"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchStages} from '../reducks/stage/operators'\r\nimport {getStages} from '../reducks/stage/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport{PostsInStage} from '../components/stage/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap', \r\n      width: '100%',\r\n    },\r\n    heading:{\r\n        color:'rgba(0, 0, 0, 0.8)',\r\n    },\r\n    subHeading:{\r\n        color:'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    accordion:{\r\n        width:'100%',\r\n    },\r\n    summary:{\r\n        width:'100%',\r\n        height:'100px',\r\n        display:'flex',\r\n        flexFlow:'row wrape',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        padding:'0 .8rem'\r\n    },\r\n    stageImage:{\r\n        width:'auto',\r\n        height:'100%',\r\n        display:'block',\r\n        marginRight:'1.6rem'\r\n    }\r\n  }));\r\n\r\nconst StageListGridLine = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchStages())  \r\n    },[])  \r\n    return ( \r\n        <div className=\"l-container \">\r\n            <div className=\"l-section \">\r\n                    { stages.length > 0 &&(\r\n                        stages.map(stage => (\r\n                            <Accordion className={classes.accordion} key={stage.id}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                >\r\n                                    <div className={classes.summary}>\r\n                                        <div>\r\n                                            <div className={classes.subHeading}>\r\n                                                <span classNmae=\".h4\">STAGE{stage.stageNo}-</span>\r\n                                                <span classNmae=\"p\">{stage.stageYear}</span>\r\n                                            </div>\r\n                                            <h4 className={classes.heading}>{stage.stage}</h4>\r\n                                        </div>\r\n                                        <img src={stage.images[0].path} alt=\"\" className={classes.stageImage}/>\r\n                                    </div>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <PostsInStage stage={stage}/>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                                \r\n                        ))\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StageListGridLine \r\n\r\n","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js",[],"D:\\develop-react\\blog-app\\src\\googleMap\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx",["489"],"import React, { useEffect } from 'react'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\nimport Button from '@material-ui/core/Button';\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n    }, [])\r\n  \r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                    <div>\r\n                    <h2>投稿一覧</h2>\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        posts.length > 0 && (\r\n                            posts.map((post) => (\r\n                                <PostListCard key={post.id}\r\n                                    id={post.id} title={post.title} article={post.article}\r\n                                    postDate={post.postDate} type={post.type}\r\n                                    topImages={post.topImages} postImages={post.postImages}\r\n                                />\r\n                            ))\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <Button onClick={()=> dispatch(push('/admin'))}>\r\n                        <p>Back to Admin Menu</p>\r\n                    </Button> \r\n                </div>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx",["490","491"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\n\r\nconst TopImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default TopImagesPreview\r\n",["492","493"],"D:\\develop-react\\blog-app\\src\\templates\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\Home.jsx",["494"],"import React, { useEffect,useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { getStages } from '../reducks/stage/selectors'\r\n\r\nimport { HomeStage, NewPosts, FilterPosts } from '../components/home/index'\r\n\r\nconst Home = () => {\r\n    const defaultVolume = 4\r\n    //redux\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stages = getStages(selector)\r\n    //state\r\n    const [filter,setFilter] = useState({\r\n        type:'post',\r\n        key:'',\r\n        locationKey:'',\r\n        tagKey:'',\r\n    })\r\n    const [stageName,setStageName] = useState('')\r\n    const [stageNo,setStageNo] = useState(0)\r\n    const [stageYear,setStageYear] = useState('')\r\n    const [volume,setVolume] = useState(defaultVolume)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n        dispatch(fetchStages()) \r\n    }, [])\r\n         \r\n    return ( \r\n        <div> \r\n            <HomeStage \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                setStageName={setStageName}\r\n                setStageNo={setStageNo}\r\n                setStageYear={setStageYear}\r\n                />\r\n            <FilterPosts  \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n            />\r\n            <NewPosts \r\n                posts={posts}\r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                stageName={stageName}\r\n                stageNo={stageNo}\r\n                stageYear={stageYear}\r\n                />\r\n        </div> \r\n    )\r\n} \r\n\r\nexport default Home\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx",["495","496","497","498","499"],"import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {DataGrid } from '@material-ui/data-grid';\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport { push } from 'connected-react-router'\r\nimport moment from 'moment'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles= makeStyles((theme) => ({\r\n    grid:{\r\n        backgroundColor:'#fff'\r\n    },\r\n    postsWrape:{\r\n        position:'relative',\r\n        height:'100%',\r\n        width:'100%',\r\n        maxHeight:'120px',\r\n        display:'flex',\r\n        flexFlow:'row nowrape'\r\n    },\r\n    postBody:{\r\n        padding:'.8rem',\r\n    },\r\n    images:{\r\n        display:'block',\r\n        width:'auto',\r\n        height:'100%',\r\n        maxHeight:'120px'\r\n        \r\n    },\r\n    locationWrape:{\r\n    },\r\n    typeWrape:{\r\n    },\r\n    stageWrape:{\r\n    }\r\n    \r\n}))\r\n\r\nconst BlogData = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state) \r\n    const posts = getPosts(selector)\r\n    let postRows = []\r\n\r\n    const theme = useTheme();\r\n    // const isDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    // const isUpSM = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const isDownSM = !useMediaQuery('(min-width:600px)');\r\n    const isDownMD = !useMediaQuery('(min-width:960px)');\r\n\r\n    // console.log('BlogData');\r\n    // console.log(posts);\r\n\r\n    // id:post.id,\r\n    // postDate: mFormatted, \r\n    // title:post.title, \r\n    // stageYear:post.stage.stageYear, \r\n    // stageNo:post.stage.stageNo, \r\n    // stageName:post.stage.stage, \r\n    // location:post.location.name, \r\n    // type:post.type, \r\n    // image:post.topImages[0].path\r\n\r\n\r\n    \r\n\r\n    const columns = [\r\n        {field:'id',\r\n        headerName:'ID',\r\n        hide: true,\r\n        flex: '1',\r\n        },\r\n\r\n        {field: 'postDate',\r\n        headerName: '投稿',\r\n        flex: 1,\r\n        renderCell:(params)=>(\r\n            <div className={classes.postsWrape} >\r\n                <img src={params.getValue('image') } className={classes.images}/>\r\n                <div className={classes.postBody}>\r\n                    <div onClick={()=> dispatch(push('/post/detail/' + params.getValue('id')))}>\r\n                        <h4>{params.getValue('title')}</h4>\r\n                        <p>{params.getValue('postDate')}</p>\r\n                    </div>\r\n                    <div onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                        <p>STAGE{params.getValue('stageNo')}</p>\r\n                        <p>{params.getValue('stageName')}</p>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n            </div> \r\n            \r\n        )},\r\n       \r\n        {field:'location',\r\n        headerName:'ロケーション',\r\n        flex: 0.3,\r\n        hide: isDownSM,\r\n        renderCell:(params)=>(\r\n            // <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/edit/' + params.getValue('locationId')))}>\r\n            <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/List'))}>\r\n                <h6>{params.getValue('location')}</h6>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'type',\r\n        headerName:'投稿タイプ', \r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.typeWrape}>\r\n                <p>{params.getValue('type')}</p>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'stageNo',\r\n        headerName:'ステージ',\r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.stageWrape} onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                <p>STAGE{params.getValue('stageNo')}</p>\r\n            </div>\r\n        )\r\n        },\r\n    ]\r\n    const rowData = () => {\r\n        posts.map(post => {\r\n            let timestampDate = post.created_at.toDate()\r\n            let m = moment(timestampDate );\r\n            let mFormatted = m.format();\r\n            let mYYMMDD = mFormatted.split('T')\r\n            let YYMMDD = mYYMMDD[0]\r\n            // let HHmmSS = mYYMMDD[1].split('+')\r\n            postRows.push({\r\n                id:post.id,\r\n                image:post.topImages[0].path,\r\n                title:post.title,\r\n                postDate: YYMMDD,\r\n                location:post.location.name,  \r\n                locationId:post.location.id,  \r\n                stageYear:post.stage.stageYear, \r\n                stageNo:post.stage.stageNo, \r\n                stageName:post.stage.stage, \r\n                stageId:post.stage.id, \r\n                type:post.type, \r\n            })\r\n        })\r\n\r\n        return postRows\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    \r\n    return (\r\n        // <div className=\"l-container-fluid \">\r\n        // <div style={{ height: 400, width: '100%',backgroundColor:'#fff'  }}>\r\n        //     <div style={{ display: 'flex', height: '100%' }}>\r\n        //         <div style={{ flexGrow: 1 }}>\r\n        //            <DataGrid\r\n        //                 columns={columns}\r\n        //                 rows={rowData()}\r\n        //                 autoHeight \r\n        //                 checkboxSelection\r\n        //                 className={classes.grid}\r\n        //                 rowHeight={52}\r\n        //             />\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <div>\r\n            <div style={{backgroundColor:'#fff', height: '100vh', width: '100%' }}>\r\n                <DataGrid\r\n                columns={columns}\r\n                rows={rowData()} \r\n                rowHeight={120}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BlogData\r\n","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx",["500"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst RoundPaginations = props => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const cnt = props.posts.length\r\n    const posts = props.posts\r\n    const [page, setPage] = useState(1);\r\n    const handleChange = (event, value) => {\r\n      setPage(value)\r\n\r\n\r\n        const index = parseInt(value, 10)\r\n        const currenyPost = posts[index - 1] \r\n        dispatch(push('/post/detail/' + currenyPost.id))\r\n\r\n    }; \r\n    \r\n    useEffect(()=>{\r\n      const index = posts.findIndex((post) => post.id === props.id);\r\n      if(index !== -1){\r\n        setPage( index + 1)\r\n      }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Pagination count={cnt} page={page}  onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default RoundPaginations\r\n","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx",["501","502","503"],"D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx",["504","505","506","507"],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx",["508","509"],"import React,{useCallback} from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport {googleMapConfig} from \"../../googleMap/config\";\r\n\r\nconst MapArea = props => {\r\n    const key = googleMapConfig.key\r\n    const locations = props.locations\r\n    console.log('MapArea');\r\n    console.log(locations);\r\n\r\n    const defaultLatLng = {\r\n        lat: 34.661773,\r\n        lng: 133.934675,\r\n      };\r\n    const items = [\r\n        {\r\n          lat: 35.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 34.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 36.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n      ];\r\n    //マーカーが1個\r\n    //   const handleApiLoaded = ({ map, maps }) => {\r\n    //     new maps.Marker({\r\n    //       map,\r\n    //       position: defaultLatLng,\r\n    //     });\r\n    //   };\r\n    \r\n    //マーカー複数で範囲内に表示\r\n    const handleApiLoaded = ({ map, maps }) => {\r\n        const bounds = new maps.LatLngBounds();\r\n        items().forEach((item) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:item.lat,\r\n                lng:item.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        map.fitBounds(bounds);\r\n      };\r\n\r\n    const handleApiLoadedSet = useCallback(({ map, maps })=>{\r\n        const bounds = new maps.LatLngBounds();\r\n        console.log(locations);\r\n        console.log('handleApiLoadedSet ');\r\n\r\n        locations.forEach((location) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:location.position.lat,\r\n                lng:location.position.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        return map.fitBounds(bounds);\r\n    })\r\n   \r\n   \r\n    return (\r\n        <div className=\"c-locationarea-map-googlemap\" >\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: key }}\r\n                defaultCenter={defaultLatLng}\r\n                defaultZoom={5}\r\n                onGoogleApiLoaded={({ map, maps } )=>handleApiLoadedSet({ map, maps })}\r\n                yesIWantToUseGoogleMapApiInternals\r\n            >\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MapArea\r\n\r\n","D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx",[],{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","replacedBy":"513"},{"ruleId":"514","severity":1,"message":"515","line":105,"column":7,"nodeType":"516","endLine":105,"endColumn":11,"suggestions":"517"},{"ruleId":"510","replacedBy":"518"},{"ruleId":"512","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":13,"column":33,"nodeType":"522","messageId":"523","endLine":13,"endColumn":38},{"ruleId":"520","severity":1,"message":"521","line":14,"column":33,"nodeType":"522","messageId":"523","endLine":14,"endColumn":38},{"ruleId":"524","severity":1,"message":"525","line":36,"column":21,"nodeType":"526","endLine":36,"endColumn":38},{"ruleId":"510","replacedBy":"527"},{"ruleId":"512","replacedBy":"528"},{"ruleId":"510","replacedBy":"529"},{"ruleId":"512","replacedBy":"530"},{"ruleId":"510","replacedBy":"531"},{"ruleId":"512","replacedBy":"532"},{"ruleId":"510","replacedBy":"533"},{"ruleId":"512","replacedBy":"534"},{"ruleId":"514","severity":1,"message":"535","line":56,"column":8,"nodeType":"516","endLine":56,"endColumn":27,"suggestions":"536"},{"ruleId":"510","replacedBy":"537"},{"ruleId":"512","replacedBy":"538"},{"ruleId":"514","severity":1,"message":"535","line":48,"column":8,"nodeType":"516","endLine":48,"endColumn":25,"suggestions":"539"},{"ruleId":"514","severity":1,"message":"535","line":55,"column":8,"nodeType":"516","endLine":55,"endColumn":25,"suggestions":"540"},{"ruleId":"541","severity":1,"message":"542","line":4,"column":8,"nodeType":"543","messageId":"544","endLine":4,"endColumn":15},{"ruleId":"541","severity":1,"message":"545","line":5,"column":9,"nodeType":"543","messageId":"544","endLine":5,"endColumn":13},{"ruleId":"514","severity":1,"message":"546","line":39,"column":7,"nodeType":"516","endLine":39,"endColumn":9,"suggestions":"547"},{"ruleId":"541","severity":1,"message":"548","line":7,"column":8,"nodeType":"543","messageId":"544","endLine":7,"endColumn":15},{"ruleId":"514","severity":1,"message":"549","line":13,"column":7,"nodeType":"516","endLine":13,"endColumn":23,"suggestions":"550"},{"ruleId":"514","severity":1,"message":"549","line":18,"column":7,"nodeType":"516","endLine":18,"endColumn":21,"suggestions":"551"},{"ruleId":"514","severity":1,"message":"546","line":40,"column":8,"nodeType":"516","endLine":40,"endColumn":10,"suggestions":"552"},{"ruleId":"514","severity":1,"message":"546","line":16,"column":7,"nodeType":"516","endLine":16,"endColumn":9,"suggestions":"553"},{"ruleId":"510","replacedBy":"554"},{"ruleId":"512","replacedBy":"555"},{"ruleId":"514","severity":1,"message":"535","line":55,"column":8,"nodeType":"516","endLine":55,"endColumn":25,"suggestions":"556"},{"ruleId":"514","severity":1,"message":"546","line":21,"column":7,"nodeType":"516","endLine":21,"endColumn":9,"suggestions":"557"},{"ruleId":"514","severity":1,"message":"546","line":58,"column":7,"nodeType":"516","endLine":58,"endColumn":9,"suggestions":"558"},{"ruleId":"514","severity":1,"message":"546","line":16,"column":8,"nodeType":"516","endLine":16,"endColumn":10,"suggestions":"559"},{"ruleId":"514","severity":1,"message":"549","line":14,"column":7,"nodeType":"516","endLine":14,"endColumn":23,"suggestions":"560"},{"ruleId":"514","severity":1,"message":"549","line":19,"column":7,"nodeType":"516","endLine":19,"endColumn":21,"suggestions":"561"},{"ruleId":"510","replacedBy":"562"},{"ruleId":"512","replacedBy":"563"},{"ruleId":"514","severity":1,"message":"546","line":32,"column":8,"nodeType":"516","endLine":32,"endColumn":10,"suggestions":"564"},{"ruleId":"541","severity":1,"message":"565","line":8,"column":8,"nodeType":"543","messageId":"544","endLine":8,"endColumn":14},{"ruleId":"541","severity":1,"message":"566","line":51,"column":11,"nodeType":"543","messageId":"544","endLine":51,"endColumn":16},{"ruleId":"567","severity":1,"message":"568","line":85,"column":17,"nodeType":"569","endLine":85,"endColumn":82},{"ruleId":"570","severity":1,"message":"571","line":135,"column":24,"nodeType":"572","messageId":"573","endLine":135,"endColumn":26},{"ruleId":"514","severity":1,"message":"546","line":161,"column":7,"nodeType":"516","endLine":161,"endColumn":9,"suggestions":"574"},{"ruleId":"514","severity":1,"message":"575","line":37,"column":7,"nodeType":"516","endLine":37,"endColumn":9,"suggestions":"576"},{"ruleId":"541","severity":1,"message":"577","line":1,"column":39,"nodeType":"543","messageId":"544","endLine":1,"endColumn":47},{"ruleId":"514","severity":1,"message":"578","line":62,"column":7,"nodeType":"516","endLine":62,"endColumn":23,"suggestions":"579"},{"ruleId":"514","severity":1,"message":"546","line":66,"column":7,"nodeType":"516","endLine":66,"endColumn":9,"suggestions":"580"},{"ruleId":"541","severity":1,"message":"577","line":1,"column":15,"nodeType":"543","messageId":"544","endLine":1,"endColumn":23},{"ruleId":"541","severity":1,"message":"581","line":1,"column":24,"nodeType":"543","messageId":"544","endLine":1,"endColumn":35},{"ruleId":"541","severity":1,"message":"582","line":5,"column":9,"nodeType":"543","messageId":"544","endLine":5,"endColumn":16},{"ruleId":"514","severity":1,"message":"546","line":15,"column":7,"nodeType":"516","endLine":15,"endColumn":9,"suggestions":"583"},{"ruleId":"541","severity":1,"message":"584","line":38,"column":11,"nodeType":"543","messageId":"544","endLine":38,"endColumn":26},{"ruleId":"514","severity":1,"message":"585","line":54,"column":32,"nodeType":"543","endLine":54,"endColumn":43},"no-native-reassign",["586"],"no-negated-in-lhs",["587"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["588"],["586"],["587"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["586"],["587"],["586"],["587"],["586"],["587"],["586"],["587"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["589"],["586"],["587"],["590"],["591"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'push' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["592"],"'NoImage' is defined but never used.","React Hook useCallback has missing dependencies: 'images', 'index', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["593"],["594"],["595"],["596"],["586"],["587"],["597"],["598"],["599"],["600"],["601"],["602"],["586"],["587"],["603"],"'Button' is defined but never used.","'theme' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["604"],"React Hook useEffect has missing dependencies: 'posts' and 'props.id'. Either include them or remove the dependency array.",["605"],"'useState' is defined but never used.","React Hook useCallback has a missing dependency: 'posts'. Either include it or remove the dependency array.",["606"],["607"],"'useCallback' is defined but never used.","'MapArea' is defined but never used.",["608"],"'handleApiLoaded' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation",{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"611","fix":"613"},{"desc":"611","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"617","fix":"619"},{"desc":"615","fix":"620"},{"desc":"615","fix":"621"},{"desc":"611","fix":"622"},{"desc":"615","fix":"623"},{"desc":"615","fix":"624"},{"desc":"615","fix":"625"},{"desc":"617","fix":"626"},{"desc":"617","fix":"627"},{"desc":"615","fix":"628"},{"desc":"615","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"615","fix":"634"},{"desc":"615","fix":"635"},"Update the dependencies array to be: [dispatch, id, posts]",{"range":"636","text":"637"},"Update the dependencies array to be: [props]",{"range":"638","text":"639"},{"range":"640","text":"639"},{"range":"641","text":"639"},"Update the dependencies array to be: [dispatch]",{"range":"642","text":"643"},"Update the dependencies array to be: [images, index, props]",{"range":"644","text":"645"},{"range":"646","text":"645"},{"range":"647","text":"643"},{"range":"648","text":"643"},{"range":"649","text":"639"},{"range":"650","text":"643"},{"range":"651","text":"643"},{"range":"652","text":"643"},{"range":"653","text":"645"},{"range":"654","text":"645"},{"range":"655","text":"643"},{"range":"656","text":"643"},"Update the dependencies array to be: [posts, props.id]",{"range":"657","text":"658"},"Update the dependencies array to be: [posts]",{"range":"659","text":"660"},{"range":"661","text":"643"},{"range":"662","text":"643"},[4090,4094],"[dispatch, id, posts]",[2275,2294],"[props]",[1966,1983],[2267,2284],[1256,1258],"[dispatch]",[526,542],"[images, index, props]",[719,733],[1206,1208],[580,582],[2192,2209],[722,724],[1640,1642],[576,578],[527,543],[720,734],[1094,1096],[5034,5036],[991,993],"[posts, props.id]",[2288,2304],"[posts]",[2368,2370],[581,583]]