[{"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx":"1","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx":"2","D:\\develop-react\\blog-app\\src\\Router.jsx":"3","D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx":"4","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx":"5","D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx":"6","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx":"7","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx":"8","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx":"9","D:\\develop-react\\blog-app\\src\\components\\post\\index.js":"10","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx":"11","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js":"12","D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js":"13","D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js":"14","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx":"15","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx":"16","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx":"17","D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx":"18","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx":"19","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx":"20","D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx":"21","D:\\develop-react\\blog-app\\src\\templates\\index.js":"22","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx":"23","D:\\develop-react\\blog-app\\src\\components\\post\\Newest.jsx":"24","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx":"25","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx":"26","D:\\develop-react\\blog-app\\src\\reportWebVitals.js":"27","D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js":"28","D:\\develop-react\\blog-app\\src\\templates\\Header.jsx":"29","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx":"30","D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx":"31","D:\\develop-react\\blog-app\\src\\Auth.jsx":"32","D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js":"33","D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js":"34","D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js":"35","D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js":"36","D:\\develop-react\\blog-app\\src\\firebase\\config.js":"37","D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx":"38","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx":"39","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx":"40","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx":"41","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx":"42","D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx":"43","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx":"44","D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx":"45","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx":"46","D:\\develop-react\\blog-app\\src\\App.jsx":"47","D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js":"48","D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx":"49","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx":"50","D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js":"51","D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js":"52","D:\\develop-react\\blog-app\\src\\firebase\\index.js":"53","D:\\develop-react\\blog-app\\src\\components\\location\\index.js":"54","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx":"55","D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx":"56","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx":"57","D:\\develop-react\\blog-app\\src\\components\\post\\Recent.jsx":"58","D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js":"59","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx":"60","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js":"61","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js":"62","D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js":"63","D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js":"64","D:\\develop-react\\blog-app\\src\\googleMap\\config.js":"65","D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js":"66","D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx":"67","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx":"68","D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js":"69","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx":"70","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js":"71","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js":"72","D:\\develop-react\\blog-app\\src\\components\\tags\\index.js":"73","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx":"74","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js":"75","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx":"76","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx":"77","D:\\develop-react\\blog-app\\src\\index.js":"78","D:\\develop-react\\blog-app\\src\\components\\stage\\index.js":"79","D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx":"80","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx":"81","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx":"82","D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js":"83","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js":"84","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx":"85","D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx":"86","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx":"87","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js":"88","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx":"89","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx":"90","D:\\develop-react\\blog-app\\src\\components\\home\\index.js":"91"},{"size":1056,"mtime":1611026213207,"results":"92","hashOfConfig":"93"},{"size":1940,"mtime":1610814765462,"results":"94","hashOfConfig":"93"},{"size":1277,"mtime":1611640217966,"results":"95","hashOfConfig":"93"},{"size":5323,"mtime":1611215284573,"results":"96","hashOfConfig":"93"},{"size":3946,"mtime":1610885712605,"results":"97","hashOfConfig":"93"},{"size":3486,"mtime":1610816464759,"results":"98","hashOfConfig":"93"},{"size":1046,"mtime":1610817990212,"results":"99","hashOfConfig":"93"},{"size":1167,"mtime":1610944829412,"results":"100","hashOfConfig":"93"},{"size":337,"mtime":1610864031590,"results":"101","hashOfConfig":"93"},{"size":862,"mtime":1610944880481,"results":"102","hashOfConfig":"93"},{"size":2993,"mtime":1611026231500,"results":"103","hashOfConfig":"93"},{"size":2191,"mtime":1611214518575,"results":"104","hashOfConfig":"93"},{"size":334,"mtime":1610885944706,"results":"105","hashOfConfig":"93"},{"size":534,"mtime":1610885941493,"results":"106","hashOfConfig":"93"},{"size":1864,"mtime":1611039564908,"results":"107","hashOfConfig":"93"},{"size":1188,"mtime":1611040859308,"results":"108","hashOfConfig":"93"},{"size":1265,"mtime":1611039774151,"results":"109","hashOfConfig":"93"},{"size":857,"mtime":1610892386053,"results":"110","hashOfConfig":"93"},{"size":1563,"mtime":1611038792529,"results":"111","hashOfConfig":"93"},{"size":1375,"mtime":1611039237001,"results":"112","hashOfConfig":"93"},{"size":1863,"mtime":1611282795015,"results":"113","hashOfConfig":"93"},{"size":718,"mtime":1611639865050,"results":"114","hashOfConfig":"93"},{"size":7678,"mtime":1611644449350,"results":"115","hashOfConfig":"93"},{"size":1918,"mtime":1611150809531,"results":"116","hashOfConfig":"93"},{"size":2807,"mtime":1610950539353,"results":"117","hashOfConfig":"93"},{"size":3063,"mtime":1610944911106,"results":"118","hashOfConfig":"93"},{"size":362,"mtime":1606632244700,"results":"119","hashOfConfig":"93"},{"size":538,"mtime":1610689428433,"results":"120","hashOfConfig":"93"},{"size":382,"mtime":1610809778903,"results":"121","hashOfConfig":"93"},{"size":1669,"mtime":1610809951677,"results":"122","hashOfConfig":"93"},{"size":1852,"mtime":1611026346336,"results":"123","hashOfConfig":"93"},{"size":684,"mtime":1610422390788,"results":"124","hashOfConfig":"93"},{"size":2603,"mtime":1610680068127,"results":"125","hashOfConfig":"93"},{"size":184,"mtime":1610379821286,"results":"126","hashOfConfig":"93"},{"size":2622,"mtime":1610810804083,"results":"127","hashOfConfig":"93"},{"size":470,"mtime":1611500285060,"results":"128","hashOfConfig":"93"},{"size":394,"mtime":1610031357760,"results":"129","hashOfConfig":"93"},{"size":2021,"mtime":1610810676726,"results":"130","hashOfConfig":"93"},{"size":4347,"mtime":1610810649449,"results":"131","hashOfConfig":"93"},{"size":970,"mtime":1610810551110,"results":"132","hashOfConfig":"93"},{"size":792,"mtime":1611284375734,"results":"133","hashOfConfig":"93"},{"size":340,"mtime":1610810041233,"results":"134","hashOfConfig":"93"},{"size":772,"mtime":1610810018688,"results":"135","hashOfConfig":"93"},{"size":1289,"mtime":1610863400313,"results":"136","hashOfConfig":"93"},{"size":1621,"mtime":1611213887222,"results":"137","hashOfConfig":"93"},{"size":936,"mtime":1611026244515,"results":"138","hashOfConfig":"93"},{"size":348,"mtime":1610081588147,"results":"139","hashOfConfig":"93"},{"size":342,"mtime":1610809231975,"results":"140","hashOfConfig":"93"},{"size":432,"mtime":1610809544218,"results":"141","hashOfConfig":"93"},{"size":1303,"mtime":1610809982798,"results":"142","hashOfConfig":"93"},{"size":1905,"mtime":1610812188627,"results":"143","hashOfConfig":"93"},{"size":189,"mtime":1609995316979,"results":"144","hashOfConfig":"93"},{"size":562,"mtime":1609855395833,"results":"145","hashOfConfig":"93"},{"size":218,"mtime":1610810004627,"results":"146","hashOfConfig":"93"},{"size":4827,"mtime":1610810011559,"results":"147","hashOfConfig":"93"},{"size":1287,"mtime":1610810578677,"results":"148","hashOfConfig":"93"},{"size":5948,"mtime":1610810558402,"results":"149","hashOfConfig":"93"},{"size":619,"mtime":1611041635407,"results":"150","hashOfConfig":"93"},{"size":528,"mtime":1610685674059,"results":"151","hashOfConfig":"93"},{"size":1765,"mtime":1611663845630,"results":"152","hashOfConfig":"93"},{"size":381,"mtime":1610810964974,"results":"153","hashOfConfig":"93"},{"size":324,"mtime":1610685636013,"results":"154","hashOfConfig":"93"},{"size":209,"mtime":1610552535912,"results":"155","hashOfConfig":"93"},{"size":194,"mtime":1610287566559,"results":"156","hashOfConfig":"93"},{"size":91,"mtime":1610517406770,"results":"157","hashOfConfig":"93"},{"size":386,"mtime":1609859521995,"results":"158","hashOfConfig":"93"},{"size":4429,"mtime":1610810995823,"results":"159","hashOfConfig":"93"},{"size":335,"mtime":1610866488309,"results":"160","hashOfConfig":"93"},{"size":478,"mtime":1609854411718,"results":"161","hashOfConfig":"93"},{"size":156,"mtime":1610809959828,"results":"162","hashOfConfig":"93"},{"size":338,"mtime":1610550482017,"results":"163","hashOfConfig":"93"},{"size":574,"mtime":1609854468131,"results":"164","hashOfConfig":"93"},{"size":47,"mtime":1610810670546,"results":"165","hashOfConfig":"93"},{"size":685,"mtime":1610810699159,"results":"166","hashOfConfig":"93"},{"size":1044,"mtime":1610550536840,"results":"167","hashOfConfig":"93"},{"size":4689,"mtime":1611414005552,"results":"168","hashOfConfig":"93"},{"size":289,"mtime":1610810606887,"results":"169","hashOfConfig":"93"},{"size":792,"mtime":1609854623605,"results":"170","hashOfConfig":"93"},{"size":220,"mtime":1610779050687,"results":"171","hashOfConfig":"93"},{"size":533,"mtime":1610810725893,"results":"172","hashOfConfig":"93"},{"size":1199,"mtime":1611325814702,"results":"173","hashOfConfig":"93"},{"size":3734,"mtime":1611497715651,"results":"174","hashOfConfig":"93"},{"size":558,"mtime":1610810952720,"results":"175","hashOfConfig":"93"},{"size":2201,"mtime":1610812159008,"results":"176","hashOfConfig":"93"},{"size":3477,"mtime":1611634263699,"results":"177","hashOfConfig":"93"},{"size":461,"mtime":1611644466420,"results":"178","hashOfConfig":"93"},{"size":1246,"mtime":1611644460787,"results":"179","hashOfConfig":"93"},{"size":320,"mtime":1611498754262,"results":"180","hashOfConfig":"93"},{"size":263,"mtime":1611668145029,"results":"181","hashOfConfig":"93"},{"size":1535,"mtime":1611672145464,"results":"182","hashOfConfig":"93"},{"size":104,"mtime":1611645859289,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"vg192i",{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"191"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"186"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"191"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"194"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"229"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"191"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"186"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"191"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"202"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"191"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx",[],["386","387"],"D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx",[],"D:\\develop-react\\blog-app\\src\\Router.jsx",[],["388","389"],"D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx",[],["390","391"],"D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx",["392"],"import React,{ useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoImage from '../../assets/img/no_image.jpg'\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { deletePost } from '../../reducks/posts/operators'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 8,\r\n            width: 'calc(50% - 16px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: 16,\r\n            width: 'calc(33.3333% - 32px)'\r\n        },\r\n    },\r\n    // content: {\r\n    //     display: 'flex',\r\n    //     padding: '16px 8px',\r\n    //     textAlign: 'left',\r\n    //     '&:last-child': {\r\n    //         paddingBottom: 16\r\n    //     }\r\n    // },\r\n    media: {\r\n        height: 200,\r\n        width:'auto'\r\n    },\r\n    // icon: {\r\n    //     marginRight: 0,\r\n    //     marginLeft: 'auto'\r\n    // }\r\n\r\n})) \r\nconst PostListCard = props => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const topImages = props.topImages\r\n    // const topImages = (props.topImages.length > 0 ? props.images : [{ path: NoImage }])\r\n    // const postImages = (props.postImages.length > 0 ? props.images : [{ path: NoImage }])\r\n\r\n    return (\r\n        <div>\r\n            {/* <PostListCard key={post.id}\r\n                            id={post.id} title={post.title} article={post.article}\r\n                            postDate={post.postDate} type={post.type}\r\n                            topImages={postImages} postImages={post.postImages}\r\n                        /> */}\r\n            <Card className={classes.root}>\r\n                 {/* id={stage.id} sort={stage.sort}\r\n                            stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                            images={stage.images} */}\r\n                <CardMedia className={classes.media}\r\n                    image={topImages[0].path}\r\n                    // title={topImages[0].description}\r\n                    // onClick={() => dispatch(push('/post/' + props.id))}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {props.title}\r\n                    </Typography>\r\n                    {/* <Typography>\r\n                        {props.stageYear} STAGE-{props.stageNo}\r\n                    </Typography> */}\r\n                </CardContent>\r\n            </Card>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon></MoreVertIcon>\r\n            </IconButton>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClick={handleClose}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                        dispatch(push('/post/edit/' + props.id))\r\n                        handleClose()\r\n                }}>\r\n                    編集する\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        dispatch(deletePost(props.id))\r\n                        handleClose()\r\n                }}>\r\n                    削除する\r\n                </MenuItem>\r\n            </Menu >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostListCard\r\n","D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx",[],["393","394"],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx",[],["395","396"],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\index.js",[],"D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx",[],["397","398"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx",[],["399","400"],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx",["401"],"import React,{useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MultipleSelect } from '../UiKit/index'\r\nimport { getTags } from '../../reducks/tags/seloctors'\r\nimport { fetchTags } from '../../reducks/tags/operators'\r\n\r\nconst TagsArea = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const tags = getTags(selector)\r\n    \r\n\r\n    const handleChange = (selectedTags) => {\r\n        const selectedValue = []\r\n        if(selectedTags.length > 0 ){\r\n            selectedTags.forEach(selectedTag => {\r\n                const found = tags.find(tag => tag.id === selectedTag)\r\n                if (found){\r\n                    selectedValue.push(found)\r\n                }\r\n            })\r\n        }\r\n        props.setTgas(selectedValue)\r\n    }\r\n    const valueTags = (pTags) => {\r\n        if(pTags === []){\r\n            return []\r\n        }\r\n        const valueTags = []\r\n        pTags.forEach(pTag=>{\r\n            console.log(pTag.id);\r\n            console.log(pTag.name);\r\n            valueTags.push(pTag.id)\r\n        })\r\n        return valueTags\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTags())\r\n    }, [])  \r\n    \r\n    return (\r\n        <div>\r\n            <h3>TagsArea</h3>\r\n            <p>タグを選択してください</p>\r\n            <MultipleSelect\r\n                label={\"タグ\"}\r\n                // value={props.tags || []}\r\n                value={valueTags(props.tags)}\r\n                handleChange={handleChange}\r\n                options={tags}\r\n                required={true}\r\n            />\r\n            {/* <h1>tag name</h1>\r\n            {selected.length > 0 && (\r\n                selected.map(value => {\r\n                    <h1>value.name</h1>\r\n                })\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagsArea\r\n","D:\\develop-react\\blog-app\\src\\templates\\index.js",[],"D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx",["402"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../firebase/index'\r\nimport moment from 'moment'\r\nimport {TopImageArea,PostArea,LocationArea,Pagination} from '../components/postDetail/index'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\n\r\nconst Postdetail = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    let id = window.location.pathname.split('/post/detail')[1]\r\n    if (id !== '') {\r\n        id = id.split('/')[1]\r\n    }\r\n    const [title, setTitle] = useState(\"\")\r\n    const [article, setArticle] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n\r\n    const dateNow = moment().format()//2014-08-18T21:11:54+09:47\r\n    const dateSplit = dateNow.split('+')//2014-08-18T21:11:54 この形式でpicerに渡す\r\n    const [postDate, setPostDate] = useState(dateSplit[0]);\r\n\r\n    const [topImages, setTopImages] = useState([])\r\n    const [postImages, setPostImages] = useState([])\r\n    //stage\r\n    const [stage, setStage] = useState(\"\")\r\n    const [stageNo,setStageNo]= useState(\"\")\r\n    const [stageYear,setStageYear]= useState(0)\r\n    const [stageImages,setStageImages] = useState([])\r\n    //tag\r\n    const [tags, setTags] = useState([])\r\n    //location\r\n    const [locationName, setLocationName] = useState([])\r\n    const [locationAddress, setLocationAddress] = useState([])\r\n    const [locationLat, setLocationLat] = useState([])\r\n    const [locationLng, setLocationLng] = useState([])\r\n    const [locationImages, setLocationImages] = useState([])\r\n   \r\n    // useEffect(() => {\r\n    //     if(!posts){\r\n    //         dispatch(fetchPosts())\r\n    //     }\r\n\r\n    //     // }else{\r\n    //         const post = posts.find(post => post.id === id)\r\n    //         if(post){\r\n    //             setTitle(post.title)\r\n    //             setArticle(post.article)\r\n    //             setType(post.type)\r\n    //             setPostDate(post.postDate)\r\n    //             setTopImages(post.topImages)\r\n    //             setPostImages(post.postImages)\r\n    //             //stage\r\n    //             setStage(post.stage.stage)\r\n    //             setStageNo(post.stage.stageNo)\r\n    //             setStageYear(post.stage.stageYear)\r\n    //             setStageImages(post.stage.images)\r\n    //             //tag\r\n    //             setTags(post.tags)\r\n    //             //location\r\n    //             setLocationName(post.location.name)\r\n    //             setLocationAddress(post.location.address)\r\n    //             setLocationLat(post.location.position.lat)\r\n    //             setLocationLng(post.location.position.lng)\r\n    //             setLocationImages(post.location.images)\r\n    //         // }\r\n    //     }\r\n    // }, [])\r\n    useEffect(() => {\r\n        if(!posts || posts.length === 0){\r\n            dispatch(fetchPosts())\r\n        }\r\n        if (id !== '') {\r\n            db.collection('posts').doc(id).get().then(snapshot => {\r\n                const post = snapshot.data()\r\n                setTitle(post.title)\r\n                setArticle(post.article)\r\n                setType(post.type)\r\n                setPostDate(post.postDate)\r\n                setTopImages(post.topImages)\r\n                setPostImages(post.postImages)\r\n                //stage\r\n                setStage(post.stage.stage)\r\n                setStageNo(post.stage.stageNo)\r\n                setStageYear(post.stage.stageYear)\r\n                setStageImages(post.stage.images)\r\n                //tag\r\n                setTags(post.tags)\r\n                //location\r\n                setLocationName(post.location.name)\r\n                setLocationAddress(post.location.address)\r\n                setLocationLat(post.location.position.lat)\r\n                setLocationLng(post.location.position.lng)\r\n                setLocationImages(post.location.images)\r\n\r\n            }).catch(error => {\r\n                throw new Error(error) \r\n            })\r\n        }\r\n    },[id])  \r\n\r\n    \r\n    return (\r\n        <main>\r\n            {/* TopImageArea--------------------------------------------------------- */}\r\n            <TopImageArea title={title} stage={stage} stageNo={stageNo} stageYear={stageYear} images={topImages}/> \r\n            {/* PostArea--------------------------------------------------------- */}\r\n            <PostArea stage={stage} stageNo={stageNo} stageYear={stageYear} stageImages={stageImages}\r\n                        article={article} type={type} postDate={postDate} postImages={postImages}\r\n                        tags={tags} \r\n                        locationName={locationName} locationAddress={locationAddress}\r\n                    />\r\n            {/* Pagination--------------------------------------------------------- */}\r\n            <Pagination posts={posts} id={id}/>\r\n            {/* LocationArea--------------------------------------------------------- */}\r\n            <LocationArea locationName={locationName} locationAddress={locationAddress}\r\n                locationLat={locationLat}\r\n                locationLng={locationLng}\r\n                locationImages={locationImages}\r\n                    />\r\n            \r\n            {/* PostListArea--------------------------------------------------------- */}\r\n            {/* <PostListArea  */}\r\n            {/* SNSrea--------------------------------------------------------- */}\r\n            {/* <SNSArea /> */}\r\n\r\n            \r\n            {/* <h1>{id}</h1>\r\n            <h1>{title}</h1>\r\n            <h1>{article}</h1>\r\n            <h1>{type}</h1>\r\n            <h1>{postDate}</h1>\r\n            <h1>TopImage</h1>\r\n            {topImages.length > 0 && (\r\n                topImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={ image.description} className=\"p-imagePreview__img\"/>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>PostImage</h1>\r\n            {postImages.length > 0 && (\r\n                postImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )} */}\r\n\r\n\r\n\r\n{/*             \r\n            <h1>Stage</h1>\r\n            <p>{stage}</p>\r\n            <p>{stageNo}</p>\r\n            <p>{stageYear}</p>\r\n            {stageImages.length > 0 && (\r\n                stageImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )}\r\n\r\n            <h1>Locations</h1>\r\n            \r\n            <p>{locationName}</p>\r\n            <p>{locationAddress}</p>\r\n            <p>{locationLat}</p>\r\n            <p>{locationLng}</p>\r\n            {locationImages.length > 0 && (\r\n                locationImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <video  muted className=\"p-imagePreview__img\">\r\n                            <source src={image.path} type=\"video/mp4\" />\r\n                        </video>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>Tags</h1>\r\n            \r\n            {tags.length > 0 && (\r\n               tags.map(tag => (\r\n                    <div key={tag.id}>\r\n                        <p>{tag.name}</p>\r\n                    </div>\r\n                ))\r\n            )} */}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Postdetail\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\Newest.jsx",["403","404"],"import React from 'react'\r\nimport { PostImageCard } from './index'\r\nimport { useDispatch } from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\n \r\nconst Newest = (props) => {\r\n    const dispatch = useDispatch()\r\n    const postDate = props.post.postDate.split('T') \r\n    const postImages = props.post.postImages\r\n    return (\r\n        <div>\r\n            <h1> 最新の投稿</h1>\r\n            <h3>{props.post.title}</h3>\r\n            {props.post.topImages.length > 0 && (\r\n                <div>\r\n                    <img className=\"p-topImage\"\r\n                    src={props.post.topImages[0].path}\r\n                    alt={props.post.title}\r\n                    />\r\n                    <p>{props.post.topImages[0].description }</p>\r\n                </div>\r\n                \r\n             )} \r\n            <h5>{props.post.article}</h5>\r\n            <p>{postDate[0]}</p> \r\n            {/* <div> \r\n                {\r\n                    postImages.map((postImage) => (\r\n                        <PostImageCard\r\n                            id={postImage.id}\r\n                            path={postImage.path}\r\n                            description={postImage.description}\r\n                            key={postImage.id} />\r\n                    ))\r\n                }\r\n            </div> */}\r\n            <div onClick={() => dispatch(push('/post/detail/' + props.post.id))}>この投稿を見る</div>\r\n            {/* <h1>data-----------------</h1>\r\n            <p>title--{props.post.title}</p>\r\n            <p>article--{props.post.article}</p>\r\n            <p>type--{props.post.type}</p>\r\n            <p>postDate--{props.post.postDate}</p> \r\n            <p>topImages--{props.post.topImages[0].path}</p> \r\n            <p>postImages--{props.post.postImages[0].path}</p> \r\n            <p>postImages--{props.post.postImages[1].path}</p>  */}\r\n               \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Newest\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx",["405"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst AddImagesUpload = props => {\r\n    const classes = useStyles()\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: '' };\r\n                if (props.Multiple) {\r\n                    props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                } else {\r\n                    props.setImages([newImage])\r\n                }\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>{props.title}を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx",["406"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst ReplaceImgesUpload = props => {\r\n    const classes = useStyles()\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => { \r\n\r\n                const id = props.images[props.index].id\r\n                const newImages = props.images.filter(image => image.id !== id)\r\n                const newImage = { id: fileName, path: downloadURL, description: 'new image' };\r\n                newImages.push(newImage)\r\n                props.setImages(newImages) \r\n                \r\n                // props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                // newBookmarks = bookmarks.filter(item !== article.id)\r\n\r\n\r\n                // dispatch(hideLoadingAction())\r\n                // props.setImages([newImage]) \r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>投稿画像を変更する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplaceImgesUpload\r\n","D:\\develop-react\\blog-app\\src\\reportWebVitals.js",[],["407","408"],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Header.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx",[],"D:\\develop-react\\blog-app\\src\\Auth.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js",[],"D:\\develop-react\\blog-app\\src\\firebase\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx",["409"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput,PrimaryButton} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n \r\nconst ImagesUpload = props => {\r\n    const classes = useStyles()\r\n    // const [imageId, setImageId] = useState('imageId')\r\n    // const [imagePath, setImagePath] = useState('imagePath')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // dispatch(hideLoadingAction())\r\n                \r\n                const newImage = { id: fileName, path: downloadURL, description: '' };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    // const inputDescription = useCallback((e) => {\r\n\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n        \r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    \r\n    return (\r\n        <div>\r\n            <span>画像を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n           \r\n            {/* <TextInput\r\n                    fullWidth={true} label={\"画像の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx",[],["410","411"],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx",[],["412","413"],"D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx",[],"D:\\develop-react\\blog-app\\src\\App.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\firebase\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\Recent.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Home.jsx",["414"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { getStages } from '../reducks/stage/selectors'\r\n\r\nimport { HomeStage } from '../components/home/index'\r\nimport { Newest, Recent } from '../components/post/index'\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stages = getStages(selector)\r\n    console.log(stages);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n        dispatch(fetchStages())\r\n    }, [])\r\n      \r\n    return ( \r\n        <div>\r\n            <HomeStage stages={stages}/>\r\n            {\r\n                posts.length > 0 && (\r\n                    posts.map((post, index) => (\r\n                        <div key={post.id}>\r\n                            {\r\n                                (index === 0) &&\r\n                                <Newest post={post} />\r\n                            }\r\n                            {\r\n                                (index > 0 && index < 10 ) &&\r\n                                    <Recent post={post}/>\r\n                            }\r\n                            \r\n                            {/* <h1>{index +1  }:{post.title}</h1>\r\n                            <p>記事：{post.article}</p>\r\n                            <p>タイプ：{post.type}</p>\r\n                            <p>投稿日：{post.postDate}</p> */}\r\n\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\googleMap\\config.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx",["415"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst VideoUpload = (props) => {\r\n    const classes = useStyles()\r\n\r\n    // const [imageId, setImageId] = useState('')\r\n    // const [imagePath, setImagePath] = useState('')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"video/mp4\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // setImageDescription(\"GoogleEerth\")\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: \"\" };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [ props.setImages ])\r\n    // const inputDescription = useCallback((e) => {\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>動画を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept=\"video/mp4\"\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n            {/* <h1>{imageId}</h1>\r\n            <h1>{imagePath}</h1>\r\n            <h1>{imageDescription}</h1>\r\n            <TextInput\r\n                    fullWidth={true} label={\"動画の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx",["416"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst RoundPaginations = props => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const cnt = props.posts.length\r\n    const posts = props.posts\r\n    const [page, setPage] = useState(1);\r\n    const handleChange = (event, value) => {\r\n      setPage(value)\r\n\r\n\r\n        const index = parseInt(value, 10)\r\n        const currenyPost = posts[index - 1] \r\n        dispatch(push('/post/detail/' + currenyPost.id))\r\n\r\n    }; \r\n    \r\n    useEffect(()=>{\r\n      const index = posts.findIndex((post) => post.id === props.id);\r\n      if(index !== -1){\r\n        setPage( index + 1)\r\n      }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Pagination count={cnt} page={page}  onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default RoundPaginations\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx",["417"],"D:\\develop-react\\blog-app\\src\\components\\home\\index.js",[],{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","replacedBy":"421"},{"ruleId":"418","replacedBy":"422"},{"ruleId":"420","replacedBy":"423"},{"ruleId":"418","replacedBy":"424"},{"ruleId":"420","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":7,"column":8,"nodeType":"428","messageId":"429","endLine":7,"endColumn":15},{"ruleId":"418","replacedBy":"430"},{"ruleId":"420","replacedBy":"431"},{"ruleId":"418","replacedBy":"432"},{"ruleId":"420","replacedBy":"433"},{"ruleId":"418","replacedBy":"434"},{"ruleId":"420","replacedBy":"435"},{"ruleId":"418","replacedBy":"436"},{"ruleId":"420","replacedBy":"437"},{"ruleId":"438","severity":1,"message":"439","line":40,"column":8,"nodeType":"440","endLine":40,"endColumn":10,"suggestions":"441"},{"ruleId":"438","severity":1,"message":"442","line":105,"column":7,"nodeType":"440","endLine":105,"endColumn":11,"suggestions":"443"},{"ruleId":"426","severity":1,"message":"444","line":2,"column":10,"nodeType":"428","messageId":"429","endLine":2,"endColumn":23},{"ruleId":"426","severity":1,"message":"445","line":9,"column":11,"nodeType":"428","messageId":"429","endLine":9,"endColumn":21},{"ruleId":"438","severity":1,"message":"446","line":48,"column":8,"nodeType":"440","endLine":48,"endColumn":25,"suggestions":"447"},{"ruleId":"438","severity":1,"message":"446","line":55,"column":8,"nodeType":"440","endLine":55,"endColumn":25,"suggestions":"448"},{"ruleId":"418","replacedBy":"449"},{"ruleId":"420","replacedBy":"450"},{"ruleId":"438","severity":1,"message":"446","line":55,"column":8,"nodeType":"440","endLine":55,"endColumn":25,"suggestions":"451"},{"ruleId":"418","replacedBy":"452"},{"ruleId":"420","replacedBy":"453"},{"ruleId":"418","replacedBy":"454"},{"ruleId":"420","replacedBy":"455"},{"ruleId":"438","severity":1,"message":"439","line":21,"column":8,"nodeType":"440","endLine":21,"endColumn":10,"suggestions":"456"},{"ruleId":"438","severity":1,"message":"446","line":56,"column":8,"nodeType":"440","endLine":56,"endColumn":27,"suggestions":"457"},{"ruleId":"438","severity":1,"message":"458","line":37,"column":7,"nodeType":"440","endLine":37,"endColumn":9,"suggestions":"459"},{"ruleId":"460","severity":1,"message":"461","line":35,"column":25,"nodeType":"462","endLine":35,"endColumn":61},"no-native-reassign",["463"],"no-negated-in-lhs",["464"],["463"],["464"],["463"],["464"],"no-unused-vars","'NoImage' is defined but never used.","Identifier","unusedVar",["463"],["464"],["463"],["464"],["463"],["464"],["463"],["464"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["465"],"React Hook useEffect has missing dependencies: 'dispatch' and 'posts'. Either include them or remove the dependency array.",["466"],"'PostImageCard' is defined but never used.","'postImages' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["467"],["468"],["463"],["464"],["469"],["463"],["464"],["463"],["464"],["470"],["471"],"React Hook useEffect has missing dependencies: 'posts' and 'props.id'. Either include them or remove the dependency array.",["472"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"477","fix":"479"},{"desc":"477","fix":"480"},{"desc":"473","fix":"481"},{"desc":"477","fix":"482"},{"desc":"483","fix":"484"},"Update the dependencies array to be: [dispatch]",{"range":"485","text":"486"},"Update the dependencies array to be: [dispatch, id, posts]",{"range":"487","text":"488"},"Update the dependencies array to be: [props]",{"range":"489","text":"490"},{"range":"491","text":"490"},{"range":"492","text":"490"},{"range":"493","text":"486"},{"range":"494","text":"490"},"Update the dependencies array to be: [posts, props.id]",{"range":"495","text":"496"},[1206,1208],"[dispatch]",[4081,4085],"[dispatch, id, posts]",[1940,1957],"[props]",[2192,2209],[2267,2284],[752,754],[2275,2294],[991,993],"[posts, props.id]"]