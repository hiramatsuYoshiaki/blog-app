[{"D:\\develop-react\\blog-app\\src\\components\\landing\\Slideshow.jsx":"1","D:\\develop-react\\blog-app\\src\\templates\\Landing.jsx":"2","D:\\develop-react\\blog-app\\src\\components\\landing\\ReactCurtainsSlideshowGSAP.jsx":"3","D:\\develop-react\\blog-app\\src\\App.jsx":"4","D:\\develop-react\\blog-app\\src\\templates\\index.js":"5","D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js":"6","D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js":"7","D:\\develop-react\\blog-app\\src\\templates\\Header.jsx":"8","D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx":"9","D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx":"10","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx":"11","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx":"12","D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx":"13","D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx":"14","D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx":"15","D:\\develop-react\\blog-app\\src\\templates\\HoverEffect.jsx":"16","D:\\develop-react\\blog-app\\src\\templates\\CanvasTest.jsx":"17","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultiplePlanes.jsx":"18","D:\\develop-react\\blog-app\\src\\templates\\GsapTest.jsx":"19","D:\\develop-react\\blog-app\\src\\templates\\ImageLoadingTest.jsx":"20","D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js":"21","D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js":"22","D:\\develop-react\\blog-app\\src\\Auth.jsx":"23","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultiplePlane.jsx":"24","D:\\develop-react\\blog-app\\src\\components\\transition\\ChildrenTest.jsx":"25","D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js":"26","D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js":"27","D:\\develop-react\\blog-app\\src\\components\\home\\index.js":"28","D:\\develop-react\\blog-app\\src\\components\\about\\index.js":"29","D:\\develop-react\\blog-app\\src\\components\\post\\index.js":"30","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\Slideshow.jsx":"31","D:\\develop-react\\blog-app\\src\\firebase\\index.js":"32","D:\\develop-react\\blog-app\\src\\components\\about\\GlitchHeader.jsx":"33","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx":"34","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx":"35","D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx":"36","D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx":"37","D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx":"38","D:\\develop-react\\blog-app\\src\\components\\horizontal\\index.js":"39","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx":"40","D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx":"41","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx":"42","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx":"43","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx":"44","D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx":"45","D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js":"46","D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx":"47","D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx":"48","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx":"49","D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx":"50","D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx":"51","D:\\develop-react\\blog-app\\src\\components\\landing\\SlideshowUsingGSAP.jsx":"52","D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js":"53","D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js":"54","D:\\develop-react\\blog-app\\src\\templates\\Home.jsx":"55","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx":"56","D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx":"57","D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx":"58","D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx":"59","D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx":"60","D:\\develop-react\\blog-app\\src\\templates\\TopPage.jsx":"61","D:\\develop-react\\blog-app\\src\\templates\\ThreeTest.jsx":"62","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsBasicPlane.jsx":"63","D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerTest.jsx":"64","D:\\develop-react\\blog-app\\src\\templates\\LoadingDispalyFetchDataTest.jsx":"65","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js":"66","D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js":"67","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SlideshowUsingGSAP.jsx":"68","D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js":"69","D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js":"70","D:\\develop-react\\blog-app\\src\\components\\landing\\index.js":"71","D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js":"72","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MuitiplePlaneScroll.jsx":"73","D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx":"74","D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx":"75","D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx":"76","D:\\develop-react\\blog-app\\src\\components\\vertical\\index.js":"77","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx":"78","D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx":"79","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx":"80","D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx":"81","D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx":"82","D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx":"83","D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx":"84","D:\\develop-react\\blog-app\\src\\components\\tags\\index.js":"85","D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx":"86","D:\\develop-react\\blog-app\\src\\Router.jsx":"87","D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx":"88","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx":"89","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx":"90","D:\\develop-react\\blog-app\\src\\templates\\LandingPage.jsx":"91","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSlideshowGSAP.jsx":"92","D:\\develop-react\\blog-app\\src\\templates\\LoadingDisplayTest.jsx":"93","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js":"94","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SelectiveRenderTargets.jsx":"95","D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx":"96","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx":"97","D:\\develop-react\\blog-app\\src\\components\\locationMap\\LocationInPosts.jsx":"98","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx":"99","D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx":"100","D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx":"101","D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js":"102","D:\\develop-react\\blog-app\\src\\components\\horizontal\\HorizontalCarousel.jsx":"103","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx":"104","D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx":"105","D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx":"106","D:\\develop-react\\blog-app\\src\\reportWebVitals.js":"107","D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx":"108","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx":"109","D:\\develop-react\\blog-app\\src\\templates\\CanvasCircle.jsx":"110","D:\\develop-react\\blog-app\\src\\components\\location\\index.js":"111","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SinglePlane.jsx":"112","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx":"113","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx":"114","D:\\develop-react\\blog-app\\src\\googleMap\\config.js":"115","D:\\develop-react\\blog-app\\src\\components\\vertical\\VerticalCarousel.jsx":"116","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx":"117","D:\\develop-react\\blog-app\\src\\components\\landing\\PostsArea.jsx":"118","D:\\develop-react\\blog-app\\src\\components\\landing\\StagesArea.jsx":"119","D:\\develop-react\\blog-app\\src\\index.js":"120","D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js":"121","D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx":"122","D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx":"123","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js":"124","D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js":"125","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx":"126","D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx":"127","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js":"128","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SimplePlane.jsx":"129","D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js":"130","D:\\develop-react\\blog-app\\src\\components\\stage\\index.js":"131","D:\\develop-react\\blog-app\\src\\components\\about\\TimelineSection.jsx":"132","D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js":"133","D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx":"134","D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx":"135","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx":"136","D:\\develop-react\\blog-app\\src\\templates\\LandingRoot.jsx":"137","D:\\develop-react\\blog-app\\src\\templates\\About.jsx":"138","D:\\develop-react\\blog-app\\src\\templates\\ComponentTransitionTest.jsx":"139","D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultipleplanesUsingGSAP.jsx":"140","D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js":"141","D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx":"142","D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js":"143","D:\\develop-react\\blog-app\\src\\templates\\GreenSockTest.jsx":"144","D:\\develop-react\\blog-app\\src\\firebase\\config.js":"145","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSelectiveRenderTargets.jsx":"146","D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js":"147","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainesSimplePlane.jsx":"148","D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js":"149","D:\\develop-react\\blog-app\\src\\templates\\Top.jsx":"150","D:\\develop-react\\blog-app\\src\\templates\\HomeBlog.jsx":"151","D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerHorizontal.jsx":"152","D:\\develop-react\\blog-app\\src\\templates\\GsapChengeBackgroundColor.jsx":"153","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx":"154","D:\\develop-react\\blog-app\\src\\templates\\LocomotiveScrollSimpleTest.jsx":"155","D:\\develop-react\\blog-app\\src\\templates\\GsapDynamicBackgroundColorHorizontal.jsx":"156","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultipleplanesUsingGSAP.jsx":"157","D:\\develop-react\\blog-app\\src\\templates\\GsapHorizontal.jsx":"158","D:\\develop-react\\blog-app\\src\\templates\\GsapScrollingTrigerTest.jsx":"159"},{"size":9810,"mtime":1617161707863,"results":"160","hashOfConfig":"161"},{"size":5426,"mtime":1617000373898,"results":"162","hashOfConfig":"161"},{"size":481,"mtime":1616906168324,"results":"163","hashOfConfig":"161"},{"size":511,"mtime":1616647869215,"results":"164","hashOfConfig":"161"},{"size":3301,"mtime":1618381438622,"results":"165","hashOfConfig":"161"},{"size":558,"mtime":1610810952720,"results":"166","hashOfConfig":"161"},{"size":538,"mtime":1610689428433,"results":"167","hashOfConfig":"161"},{"size":9224,"mtime":1616557224669,"results":"168","hashOfConfig":"161"},{"size":674,"mtime":1612275440072,"results":"169","hashOfConfig":"161"},{"size":1588,"mtime":1612685173682,"results":"170","hashOfConfig":"161"},{"size":1605,"mtime":1612883486004,"results":"171","hashOfConfig":"161"},{"size":3638,"mtime":1612883464370,"results":"172","hashOfConfig":"161"},{"size":5492,"mtime":1614413097689,"results":"173","hashOfConfig":"161"},{"size":606,"mtime":1614566728735,"results":"174","hashOfConfig":"161"},{"size":2120,"mtime":1612855040977,"results":"175","hashOfConfig":"161"},{"size":1223,"mtime":1618377988401,"results":"176","hashOfConfig":"161"},{"size":5064,"mtime":1618376403221,"results":"177","hashOfConfig":"161"},{"size":573,"mtime":1616048853282,"results":"178","hashOfConfig":"161"},{"size":6889,"mtime":1618298785792,"results":"179","hashOfConfig":"161"},{"size":1029,"mtime":1618380230546,"results":"180","hashOfConfig":"161"},{"size":334,"mtime":1611896764916,"results":"181","hashOfConfig":"161"},{"size":342,"mtime":1610809231975,"results":"182","hashOfConfig":"161"},{"size":641,"mtime":1612268267860,"results":"183","hashOfConfig":"161"},{"size":3698,"mtime":1616165605053,"results":"184","hashOfConfig":"161"},{"size":1368,"mtime":1616555134388,"results":"185","hashOfConfig":"161"},{"size":2228,"mtime":1612248495951,"results":"186","hashOfConfig":"161"},{"size":2057,"mtime":1612275339413,"results":"187","hashOfConfig":"161"},{"size":265,"mtime":1612103877974,"results":"188","hashOfConfig":"161"},{"size":118,"mtime":1614579714463,"results":"189","hashOfConfig":"161"},{"size":772,"mtime":1612932746035,"results":"190","hashOfConfig":"161"},{"size":7285,"mtime":1616139050625,"results":"191","hashOfConfig":"161"},{"size":562,"mtime":1609855395833,"results":"192","hashOfConfig":"161"},{"size":461,"mtime":1616657528696,"results":"193","hashOfConfig":"161"},{"size":1696,"mtime":1612941158046,"results":"194","hashOfConfig":"161"},{"size":969,"mtime":1612941158046,"results":"195","hashOfConfig":"161"},{"size":1287,"mtime":1610810578677,"results":"196","hashOfConfig":"161"},{"size":970,"mtime":1610810551110,"results":"197","hashOfConfig":"161"},{"size":5948,"mtime":1610810558402,"results":"198","hashOfConfig":"161"},{"size":65,"mtime":1615174020594,"results":"199","hashOfConfig":"161"},{"size":2466,"mtime":1614234618123,"results":"200","hashOfConfig":"161"},{"size":3452,"mtime":1617172923387,"results":"201","hashOfConfig":"161"},{"size":4143,"mtime":1612938265396,"results":"202","hashOfConfig":"161"},{"size":1246,"mtime":1611644460787,"results":"203","hashOfConfig":"161"},{"size":685,"mtime":1610810699159,"results":"204","hashOfConfig":"161"},{"size":1621,"mtime":1611213887222,"results":"205","hashOfConfig":"161"},{"size":184,"mtime":1610379821286,"results":"206","hashOfConfig":"161"},{"size":2021,"mtime":1610810676726,"results":"207","hashOfConfig":"161"},{"size":4429,"mtime":1610810995823,"results":"208","hashOfConfig":"161"},{"size":1200,"mtime":1611727042798,"results":"209","hashOfConfig":"161"},{"size":461,"mtime":1611644466420,"results":"210","hashOfConfig":"161"},{"size":1715,"mtime":1613114868305,"results":"211","hashOfConfig":"161"},{"size":441,"mtime":1616909884457,"results":"212","hashOfConfig":"161"},{"size":1044,"mtime":1610550536840,"results":"213","hashOfConfig":"161"},{"size":478,"mtime":1609854411718,"results":"214","hashOfConfig":"161"},{"size":2255,"mtime":1617078660564,"results":"215","hashOfConfig":"161"},{"size":2691,"mtime":1612855842572,"results":"216","hashOfConfig":"161"},{"size":6368,"mtime":1617255105743,"results":"217","hashOfConfig":"161"},{"size":1398,"mtime":1612883526326,"results":"218","hashOfConfig":"161"},{"size":2738,"mtime":1614153535248,"results":"219","hashOfConfig":"161"},{"size":6076,"mtime":1613709544083,"results":"220","hashOfConfig":"161"},{"size":913,"mtime":1615532004332,"results":"221","hashOfConfig":"161"},{"size":1382,"mtime":1615793907580,"results":"222","hashOfConfig":"161"},{"size":2595,"mtime":1618302783137,"results":"223","hashOfConfig":"161"},{"size":2487,"mtime":1617091116589,"results":"224","hashOfConfig":"161"},{"size":2974,"mtime":1617161716371,"results":"225","hashOfConfig":"161"},{"size":574,"mtime":1609854468131,"results":"226","hashOfConfig":"161"},{"size":338,"mtime":1610550482017,"results":"227","hashOfConfig":"161"},{"size":427,"mtime":1616136296683,"results":"228","hashOfConfig":"161"},{"size":189,"mtime":1609995316979,"results":"229","hashOfConfig":"161"},{"size":2622,"mtime":1610810804083,"results":"230","hashOfConfig":"161"},{"size":314,"mtime":1616988034257,"results":"231","hashOfConfig":"161"},{"size":159,"mtime":1614413062784,"results":"232","hashOfConfig":"161"},{"size":7552,"mtime":1616138555655,"results":"233","hashOfConfig":"161"},{"size":7421,"mtime":1614574632292,"results":"234","hashOfConfig":"161"},{"size":1864,"mtime":1611039564908,"results":"235","hashOfConfig":"161"},{"size":1863,"mtime":1611282795015,"results":"236","hashOfConfig":"161"},{"size":62,"mtime":1615300863902,"results":"237","hashOfConfig":"161"},{"size":289,"mtime":1610810606887,"results":"238","hashOfConfig":"161"},{"size":857,"mtime":1610892386053,"results":"239","hashOfConfig":"161"},{"size":1563,"mtime":1611038792529,"results":"240","hashOfConfig":"161"},{"size":533,"mtime":1610810725893,"results":"241","hashOfConfig":"161"},{"size":1201,"mtime":1612495094572,"results":"242","hashOfConfig":"161"},{"size":2172,"mtime":1612495041043,"results":"243","hashOfConfig":"161"},{"size":340,"mtime":1610810041233,"results":"244","hashOfConfig":"161"},{"size":47,"mtime":1610810670546,"results":"245","hashOfConfig":"161"},{"size":3840,"mtime":1612940585319,"results":"246","hashOfConfig":"161"},{"size":7928,"mtime":1618382117010,"results":"247","hashOfConfig":"161"},{"size":1787,"mtime":1616653881813,"results":"248","hashOfConfig":"161"},{"size":2164,"mtime":1612704387130,"results":"249","hashOfConfig":"161"},{"size":2895,"mtime":1612856647485,"results":"250","hashOfConfig":"161"},{"size":5496,"mtime":1616047460231,"results":"251","hashOfConfig":"161"},{"size":535,"mtime":1618371516164,"results":"252","hashOfConfig":"161"},{"size":1543,"mtime":1618380612507,"results":"253","hashOfConfig":"161"},{"size":324,"mtime":1610685636013,"results":"254","hashOfConfig":"161"},{"size":11091,"mtime":1616043515885,"results":"255","hashOfConfig":"161"},{"size":3063,"mtime":1610944911106,"results":"256","hashOfConfig":"161"},{"size":1188,"mtime":1611040859308,"results":"257","hashOfConfig":"161"},{"size":3272,"mtime":1614413852536,"results":"258","hashOfConfig":"161"},{"size":1289,"mtime":1610863400313,"results":"259","hashOfConfig":"161"},{"size":3486,"mtime":1610816464759,"results":"260","hashOfConfig":"161"},{"size":672,"mtime":1612494399533,"results":"261","hashOfConfig":"161"},{"size":1905,"mtime":1610812188627,"results":"262","hashOfConfig":"161"},{"size":4244,"mtime":1615436665881,"results":"263","hashOfConfig":"161"},{"size":4827,"mtime":1610810011559,"results":"264","hashOfConfig":"161"},{"size":1178,"mtime":1613112367408,"results":"265","hashOfConfig":"161"},{"size":4418,"mtime":1616921036877,"results":"266","hashOfConfig":"161"},{"size":362,"mtime":1606632244700,"results":"267","hashOfConfig":"161"},{"size":7708,"mtime":1614153535247,"results":"268","hashOfConfig":"161"},{"size":1840,"mtime":1612883513207,"results":"269","hashOfConfig":"161"},{"size":2001,"mtime":1618374427237,"results":"270","hashOfConfig":"161"},{"size":218,"mtime":1610810004627,"results":"271","hashOfConfig":"161"},{"size":4486,"mtime":1616128335973,"results":"272","hashOfConfig":"161"},{"size":1702,"mtime":1612941072413,"results":"273","hashOfConfig":"161"},{"size":4347,"mtime":1610810649449,"results":"274","hashOfConfig":"161"},{"size":91,"mtime":1610517406770,"results":"275","hashOfConfig":"161"},{"size":2536,"mtime":1615439241590,"results":"276","hashOfConfig":"161"},{"size":8472,"mtime":1614574888232,"results":"277","hashOfConfig":"161"},{"size":3613,"mtime":1618464772052,"results":"278","hashOfConfig":"161"},{"size":3797,"mtime":1618471225316,"results":"279","hashOfConfig":"161"},{"size":796,"mtime":1616568511562,"results":"280","hashOfConfig":"161"},{"size":534,"mtime":1611896770248,"results":"281","hashOfConfig":"161"},{"size":2508,"mtime":1612275483349,"results":"282","hashOfConfig":"161"},{"size":3856,"mtime":1614413325882,"results":"283","hashOfConfig":"161"},{"size":2201,"mtime":1610812159008,"results":"284","hashOfConfig":"161"},{"size":470,"mtime":1611500285060,"results":"285","hashOfConfig":"161"},{"size":1375,"mtime":1611039237001,"results":"286","hashOfConfig":"161"},{"size":3276,"mtime":1617255105758,"results":"287","hashOfConfig":"161"},{"size":381,"mtime":1610810964974,"results":"288","hashOfConfig":"161"},{"size":7663,"mtime":1616165586021,"results":"289","hashOfConfig":"161"},{"size":209,"mtime":1610552535912,"results":"290","hashOfConfig":"161"},{"size":278,"mtime":1614144540068,"results":"291","hashOfConfig":"161"},{"size":3662,"mtime":1614659733486,"results":"292","hashOfConfig":"161"},{"size":41,"mtime":1613108363481,"results":"293","hashOfConfig":"161"},{"size":1265,"mtime":1611039774151,"results":"294","hashOfConfig":"161"},{"size":2848,"mtime":1612936417154,"results":"295","hashOfConfig":"161"},{"size":3948,"mtime":1611902322953,"results":"296","hashOfConfig":"161"},{"size":11122,"mtime":1618471045773,"results":"297","hashOfConfig":"161"},{"size":369,"mtime":1616472460289,"results":"298","hashOfConfig":"161"},{"size":670,"mtime":1616557224669,"results":"299","hashOfConfig":"161"},{"size":595,"mtime":1616209029617,"results":"300","hashOfConfig":"161"},{"size":194,"mtime":1610287566559,"results":"301","hashOfConfig":"161"},{"size":772,"mtime":1610810018688,"results":"302","hashOfConfig":"161"},{"size":317,"mtime":1612943404932,"results":"303","hashOfConfig":"161"},{"size":4134,"mtime":1618294636185,"results":"304","hashOfConfig":"161"},{"size":394,"mtime":1610031357760,"results":"305","hashOfConfig":"161"},{"size":474,"mtime":1618371474906,"results":"306","hashOfConfig":"161"},{"size":386,"mtime":1609859521995,"results":"307","hashOfConfig":"161"},{"size":412,"mtime":1618300152544,"results":"308","hashOfConfig":"161"},{"size":528,"mtime":1610685674059,"results":"309","hashOfConfig":"161"},{"size":2535,"mtime":1617679247726,"results":"310","hashOfConfig":"161"},{"size":9367,"mtime":1617525604463,"results":"311","hashOfConfig":"161"},{"size":3097,"mtime":1618293450998,"results":"312","hashOfConfig":"161"},{"size":11804,"mtime":1617679068459,"results":"313","hashOfConfig":"161"},{"size":1494,"mtime":1612941158007,"results":"314","hashOfConfig":"161"},{"size":3033,"mtime":1618373754783,"results":"315","hashOfConfig":"161"},{"size":13379,"mtime":1618296477089,"results":"316","hashOfConfig":"161"},{"size":575,"mtime":1618370444964,"results":"317","hashOfConfig":"161"},{"size":10595,"mtime":1618297653223,"results":"318","hashOfConfig":"161"},{"size":7343,"mtime":1618298232550,"results":"319","hashOfConfig":"161"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},"vg192i",{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"336"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"336"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"336"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"336"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"416"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"333"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"327"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"330"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"327"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"333"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"416"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"380"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"330"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"380"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"380"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"330"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"380"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"327"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"336"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"380"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"330"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"330"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"336"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"574"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"380"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"336"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"327"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"336"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"336"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"380"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"327"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"330"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"358"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"336"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"327"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"327"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"336"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"358"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"336"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"686","messages":"687","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\develop-react\\blog-app\\src\\components\\landing\\Slideshow.jsx",["688","689"],"import React,{useRef,useState,useEffect} from 'react' \r\nimport {Plane,useCurtains} from 'react-curtains'\r\nimport gsap from 'gsap'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport noImage from '../../assets/img/img4121_flat.jpg'\r\nconst useStyles = makeStyles((theme) => ({\r\n    Slideshow: {\r\n        position: 'absolute',\r\n        top: '0%',\r\n        right: '4%',\r\n        bottom: '4%',\r\n        left: '4%',\r\n        zIndex: 15,\r\n      \r\n        cursor: 'pointer',\r\n        fontSize: '1em',\r\n        color: 'white',\r\n      \r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        '& img':{\r\n            display: 'none',\r\n        },\r\n      } \r\n      \r\n}))\r\nconst vertexShader = `\r\n  precision mediump float;\r\n  // default mandatory variables\r\n  attribute vec3 aVertexPosition;\r\n  attribute vec2 aTextureCoord;\r\n  uniform mat4 uMVMatrix;\r\n  uniform mat4 uPMatrix;\r\n  // varyings : notice we've got 3 texture coords varyings\r\n  // one for the displacement texture\r\n  // one for our visible texture\r\n  // and one for the upcoming texture\r\n  varying vec3 vVertexPosition;\r\n  varying vec2 vTextureCoord;\r\n  varying vec2 vActiveTextureCoord;\r\n  varying vec2 vNextTextureCoord;\r\n  // textures matrices\r\n  uniform mat4 activeTexMatrix;\r\n  uniform mat4 nextTexMatrix;\r\n  // custom uniforms\r\n  uniform float uTransitionTimer;\r\n  void main() {\r\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r\n    // varyings\r\n    vTextureCoord = aTextureCoord;\r\n    vActiveTextureCoord = (activeTexMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;\r\n    vNextTextureCoord = (nextTexMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;\r\n    vVertexPosition = aVertexPosition;\r\n  }\r\n`;\r\n\r\nconst fragmentShader = `\r\n  precision mediump float;\r\n  varying vec3 vVertexPosition;\r\n  varying vec2 vTextureCoord;\r\n  varying vec2 vActiveTextureCoord;\r\n  varying vec2 vNextTextureCoord;\r\n  // custom uniforms\r\n  uniform float uTransitionTimer;\r\n  // our textures samplers\r\n  // notice how it matches the sampler attributes of the textures we created dynamically\r\n  uniform sampler2D activeTex;\r\n  uniform sampler2D nextTex;\r\n  uniform sampler2D displacement;\r\n  void main() {\r\n    // our displacement texture\r\n    vec4 displacementTexture = texture2D(displacement, vTextureCoord);\r\n    // slides transitions based on displacement and transition timer\r\n    vec2 firstDisplacementCoords = vActiveTextureCoord + displacementTexture.r * ((cos((uTransitionTimer + 90.0) / (90.0 / 3.141592)) + 1.0) / 1.25);\r\n    vec4 firstDistortedColor = texture2D(activeTex, vec2(vActiveTextureCoord.x, firstDisplacementCoords.y));\r\n    // same as above but we substract the effect\r\n    vec2 secondDisplacementCoords = vNextTextureCoord - displacementTexture.r * ((cos(uTransitionTimer / (90.0 / 3.141592)) + 1.0) / 1.25);\r\n    vec4 secondDistortedColor = texture2D(nextTex, vec2(vNextTextureCoord.x, secondDisplacementCoords.y));\r\n    // mix both texture\r\n    vec4 finalColor = mix(firstDistortedColor, secondDistortedColor, 1.0 - ((cos(uTransitionTimer / (90.0 / 3.141592)) + 1.0) / 2.0));\r\n    // handling premultiplied alpha\r\n    finalColor = vec4(finalColor.rgb * finalColor.a, finalColor.a);\r\n    gl_FragColor = finalColor;\r\n  }\r\n`;\r\n\r\n\r\nconst Slideshow = props => {\r\n    const classes = useStyles()\r\n    // console.log('Slideshow');\r\n    // console.log(props.posts);\r\n    const posts = props.posts\r\n    // const [selectedPosts,setSelectedPosts] = useState([])\r\n    // console.log('selectedPosts',selectedPosts);\r\n    // useEffect(()=>{\r\n    //     const filterPosts =props.posts.filter(posts => posts.type === 'post')\r\n    //     setSelectedPosts(filterPosts)\r\n    // },[props.posts])\r\n\r\n    // const [value, setValue] = React.useState(null)\r\n    // setValue({...value, props.newValue})\r\n\r\n    // const [posts, setPosts] = useState([])\r\n    // const posts = props.posts\r\n    // console.log(props.posts);\r\n    // setPosts(prevState => [...prevState,propsPosts]);//配列に追加\r\n\r\n    // console.log('posts',posts);\r\n    // const [postsImage,setPostsImage] = useState([])\r\n    // useEffect(()=>{\r\n    //   console.log('setPostsImage');\r\n    //   console.log(props.posts);\r\n    //   if(props.posts.length > 0){\r\n    //     // setPostsImage(prevState => [...prevState,...props.posts]);\r\n    //     console.log('setPostsImage length > 0');\r\n    //     setPostsImage(props.posts)\r\n    //   }\r\n    //   console.log(postsImage);\r\n      \r\n    // },[props.posts])\r\n\r\n\r\n\r\n\r\n\r\n    const [plane, setPlane] = useState(null);\r\n    const slideshowInner = useRef(null);\r\n    // slideshow states\r\n    const [activeTexture, setActiveTexture] = useState(1);\r\n    const [maxTextures, setMaxTextures] = useState(0);\r\n    const isChanging = useRef(false);\r\n    const tween = useRef(null);\r\n    const activeTex = useRef(null);\r\n    const nextTex = useRef(null);\r\n    const uniforms = {\r\n        transitionTimer: {\r\n          name: \"uTransitionTimer\",\r\n          type: \"1f\",\r\n          value: 0\r\n        }\r\n      };\r\n    const onLoading = (plane, texture) => {\r\n        // improve texture rendering on small screens with LINEAR_MIPMAP_NEAREST minFilter\r\n        texture.setMinFilter(texture.gl.LINEAR_MIPMAP_NEAREST);\r\n      };\r\n    \r\n    const onReady = (plane) => {\r\n      setPlane(plane);\r\n    };\r\n    const onClick = () => {\r\n      if (!isChanging.current && plane) {\r\n        isChanging.current = true;\r\n  \r\n        // check what will be next image\r\n        let nextTextureIndex;\r\n        if (activeTexture < maxTextures) {\r\n          nextTextureIndex = activeTexture + 1;\r\n        } else {\r\n          nextTextureIndex = 1;\r\n        }\r\n        // apply it to our next texture\r\n        nextTex.current.setSource(plane.images[nextTextureIndex]);\r\n  \r\n        tween.current = gsap.to(plane.uniforms.transitionTimer, {\r\n          duration: 1.75,\r\n          value: 90,\r\n          ease: \"power2.inOut\",\r\n          onComplete: () => {\r\n            isChanging.current = false;\r\n            tween.current = null;\r\n  \r\n            plane.uniforms.transitionTimer.value = 0;\r\n  \r\n            const activeTextureIndex = nextTextureIndex;\r\n            // our next texture becomes our active texture\r\n            activeTex.current.setSource(plane.images[activeTextureIndex]);\r\n            setActiveTexture(activeTextureIndex);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    \r\n    useCurtains(\r\n      (curtains) => {\r\n        if (plane) {\r\n          // first we set our very first image as the active texture\r\n          activeTex.current = plane.createTexture({\r\n            sampler: \"activeTex\",\r\n            fromTexture: plane.textures[activeTexture]\r\n          });\r\n          // next we set the second image as next texture but this is not mandatory\r\n          // as we will reset the next texture on slide change\r\n          nextTex.current = plane.createTexture({\r\n            sampler: \"nextTex\",\r\n            fromTexture: plane.textures[activeTexture + 1]\r\n          });\r\n        }\r\n      },\r\n      [plane]\r\n    );\r\n    useEffect(() => {\r\n      if (slideshowInner.current) {\r\n        setMaxTextures(slideshowInner.current.childElementCount - 2);\r\n      }\r\n      let currentTween = tween.current;\r\n      return () => {\r\n        if (currentTween) {\r\n          currentTween.kill();\r\n        }\r\n      };\r\n    }, [slideshowInner.current]);\r\n    \r\n    \r\n\r\n\r\n \r\n    return (\r\n      <div>\r\n      {posts.length > 0 &&(\r\n        <Plane\r\n            className={classes.Slideshow} \r\n            // plane init parameters\r\n            vertexShader={vertexShader}\r\n            fragmentShader={fragmentShader}\r\n            uniforms={uniforms}\r\n            // plane events\r\n            onLoading={onLoading}\r\n            onReady={onReady}\r\n            onClick={onClick} \r\n        >\r\n            <div ref={slideshowInner}>\r\n                \r\n                <div className=\"c-about-header-wraper\">\r\n                  <div>Click !</div>\r\n                  <h1 className=\"c-glitch c-about-glich\" \r\n                      data-text=\"TOURdeHDR\" >TOURdeHDR\r\n                  </h1>\r\n                  <span className=\"c-about-header-sub\" >h-works</span> \r\n                </div>\r\n                {/* <div className=\"c-about-header-wraper\">\r\n                  <div>posts length: {posts.length}</div>\r\n                  {\r\n                    posts.length > 0 &&(\r\n                      posts.map((post) => (\r\n                        <div key={post.topImages[0].id}>{post.topImages[0].path}</div>\r\n                      ))\r\n                    )\r\n                  }\r\n                </div> */}\r\n               \r\n                <img\r\n                    src=\"https://www.curtainsjs.com/examples/medias/displacement.jpg\"\r\n                    data-sampler=\"displacement\"\r\n                    alt=\"\"\r\n                    key=\"displacement\"\r\n                />\r\n                {/* <img src=\"https://unsplash.it/1920/1080?random=1\" alt=\"\" />\r\n                <img src=\"https://unsplash.it/1920/1080?random=2\" alt=\"\" />\r\n                <img src=\"https://unsplash.it/1920/1080?random=3\" alt=\"\" />\r\n                <img src=\"https://unsplash.it/1920/1080?random=4\" alt=\"\" /> */}\r\n\r\n               \r\n                {\r\n                  // posts.length > 0 ?(\r\n                    posts.map((post) => (\r\n                      <img src={post.topImages[0].path} \r\n                        alt={post.title} \r\n                        key={post.topImages[0].id}\r\n                      />\r\n                    ))\r\n                  // )\r\n                  // :(\r\n                  //   <img src={noImage} alt=\"\" />\r\n                  // )\r\n                }\r\n\r\n            </div>\r\n        </Plane>\r\n        )\r\n        // :(<h1 style={{color:'red'}}>Loading...</h1>) \r\n      }\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Slideshow\r\n",["690","691"],"D:\\develop-react\\blog-app\\src\\templates\\Landing.jsx",["692","693"],"import React,{useEffect,useState,useRef} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport logo from '../assets/img/h-logo.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { gsap } from \"gsap\";\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger'\r\nimport {ReactCurtainsSlideshowGSAP, PostsArea} from '../components/landing/index'\r\n\r\n\r\n\r\ngsap.registerPlugin(ScrollTrigger)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    landingWraper:{\r\n        textAlign:'center',\r\n        width:'100%',\r\n    },\r\n    // appLogo: {\r\n    //     pointerEvents: 'none',\r\n    //     maxWidth: '100%',\r\n    //     width:'200px',\r\n    //     height:'200px;'\r\n    // },\r\n    landingHeader: {\r\n        minHeight: 'calc(100vh - 6.4rem)',\r\n        margin: '0 auto 0 auto', \r\n        position:'relative',\r\n    },\r\n    landingMain:{\r\n        margin: '100px auto 100px auto',\r\n    },\r\n    landingPostsWraper:{\r\n        margin: '0 auto 100px auto',\r\n    },\r\n    landingStagesWraper:{\r\n        margin: '0 auto 100px auto',\r\n    },\r\n    landingFooter: {\r\n        backgroundColor: '#262626',\r\n        width:'100%',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n        margin: '0 auto 100px auto', \r\n    },\r\n}))\r\n\r\n\r\nconst Landing = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const postsAll = getPosts(selector)\r\n    const displayNumber = 4\r\n\r\n    const [posts,setPosts] = useState([])\r\n    \r\n    const footerRef = useRef(null);\r\n    const revealRefs = useRef([])\r\n\r\n    revealRefs.current = []\r\n\r\n    \r\n    \r\n    // セクションへのすべての参照をrevealRefs.current配列に追加する\r\n    const addToRefs = el => {\r\n        if(el && !revealRefs.current.includes(el)){\r\n            revealRefs.current.push(el)\r\n        }\r\n    }\r\n\r\n    // const [background, setBackground] = useState('#5a7d95');\r\n    // const toggleBackground = () => {\r\n    //     const color = background !== '#5a7d95' ? '#5a7d95' : '#1b4943'; \r\n    //     setBackground(color);\r\n    // }\r\n    // useEffect(()=>{\r\n    //     gsap.to(footerRef.current, {\r\n    //         backgroundColor: background,\r\n    //         duration: 1, \r\n    //         ease: 'none'\r\n    //     });\r\n    // },[background])\r\n    useEffect(()=>{\r\n        // 我々は持っているすべてのセクションへのアクセスをを使用して新しいGSAPトゥイーンを作成し。次に、それらをループして、scrollTriggerます。\r\n        revealRefs.current.forEach((el,index)=> {\r\n            gsap.fromTo(el,\r\n                { \r\n                    autoAlpha:0 \r\n                },\r\n                {\r\n                    duration:1,\r\n                    autoAlpha:1,\r\n                    ease:'none',\r\n                    scrollTrigger:{\r\n                        id:`section-${index+1}`,\r\n                        trigger:el,\r\n                        start:'top center+=100',\r\n                        toggleActions:`play none none reverse`\r\n                    }\r\n                }\r\n                )\r\n        })\r\n    },[])\r\n    useEffect(()=>{\r\n        let postsSort = []\r\n        //投稿記事を選択------\r\n        postsSort = postsAll.filter(posts => posts.type === 'post')\r\n        // ソート降順\r\n        postsSort.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        // setPosts(postsSort)\r\n        setPosts(postsSort.slice(0, displayNumber))\r\n    },[postsAll])\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())  \r\n    },[])\r\n    \r\n\r\n    return (\r\n        // <div className=\"l-container-fluid\">\r\n        //     <div className=\"l-section-fluid \">\r\n                <div className={classes.landingWraper}>\r\n                    <header className={classes.landingHeader} >\r\n                        <ReactCurtainsSlideshowGSAP posts={posts}/>\r\n                    </header>\r\n                  \r\n                    <main className={classes.landingMain}>\r\n                        <div className={classes.landingPostsWraper}>\r\n                            {posts.map((post) => (\r\n                                <div key={post.id} ref={addToRefs}>\r\n                                    <PostsArea post={post}/>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className={classes.landingPostsWraper}>\r\n                            <h1 style={{color:'white'}}>stages</h1>\r\n                        </div>\r\n                    </main> \r\n\r\n                    <footer ref={footerRef} className={classes.landingFooter} >\r\n                        <h1 className={{color:'white'}}>Footer </h1>\r\n                        {/* <img src={logo} className={classes.appLogo} alt=\"logo\" />\r\n                        <button onClick={() => toggleBackground()}>Change background</button> */}\r\n                    </footer>\r\n                    \r\n                   \r\n                </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n",["694","695"],"D:\\develop-react\\blog-app\\src\\components\\landing\\ReactCurtainsSlideshowGSAP.jsx",[],["696","697"],"D:\\develop-react\\blog-app\\src\\App.jsx",[],["698","699"],"D:\\develop-react\\blog-app\\src\\templates\\index.js",[],["700","701"],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Header.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\SignOut.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostListGrid.jsx",["702"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostListGrid = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid c-post-list-grid\">\r\n           <div className=\"l-row\">\r\n                {  postsSort().length > 0 &&(\r\n                     postsSort().map(post=> (\r\n                        post.topImages.map(topImage=>(\r\n                            <div key={topImage.id} \r\n                                className=\"l-col-4\" \r\n                                onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                            >\r\n                                <img src={topImage.path} \r\n                                   alt={post.title} \r\n                                   className=\"c-image-fit-cover\"/>\r\n                            </div>\r\n                        ))\r\n                    ))\r\n                )}\r\n           </div>\r\n       </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PostListGrid \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\StageList.jsx",["703"],"import React,{ useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getStages } from '../reducks/stage/selectors'\r\nimport { StageCard } from '../components/stage/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst StageList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state => state))\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStages()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                <h2>ステージリスト</h2>\r\n                    {\r\n                        stages.length > 0 && ( \r\n                            stages.map((stage) => (\r\n                                <StageCard key={stage.id}\r\n                                    id={stage.id} sort={stage.sort}\r\n                                    stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                                    images={stage.images} />\r\n                            ))\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <Button onClick={()=> dispatch(push('/admin'))}>\r\n                            <p>Back to Admin Menu</p>\r\n                        </Button> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default StageList \r\n","D:\\develop-react\\blog-app\\src\\templates\\StageEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationMap.jsx",["704"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getLocations} from '../reducks/locations/selectors'\r\nimport {fetchLocatins} from '../reducks/locations/operators'\r\nimport {MapMarker} from '../components/locationMap/index'\r\n\r\nconst LocationMap = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const locations = getLocations(selector)\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchLocatins())\r\n    },[])\r\n    return (\r\n        <MapMarker locations={locations}/>\r\n    )\r\n}\r\n\r\nexport default LocationMap\r\n",["705","706"],"D:\\develop-react\\blog-app\\src\\templates\\CssDesign.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\HoverEffect.jsx",["707"],"D:\\develop-react\\blog-app\\src\\templates\\CanvasTest.jsx",["708","709","710","711"],"import React,{useState,useEffect} from 'react'\r\nimport image from '../assets/img/img4121_flat.jpg'\r\n// const canvasWidth = 600\r\n// const canvasHeight = 400\r\n\r\n\r\nconst CanvasTest = () => {\r\n    const [canvasWidth, setCanvasWidth] = useState(600)\r\n    const [canvasHeight, setCanvasHeight] = useState(400)\r\n\r\n    const handleResize = () => {\r\n        setCanvasWidth(window.innerWidth)\r\n        setCanvasHeight(window.innerHeight - 64 - 64 - 8) \r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleResize()\r\n        window.addEventListener('resize',handleResize)    \r\n        return () => {\r\n            window.addEventListener('resize',handleResize)    \r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        /* START CONFIG VARS */\r\n        const displayText = 'DG Solutions';\r\n        const textColor = 'lightgrey';\r\n        const textStyle = '30px Arial';\r\n        const circleColor = 'red';\r\n        const positionRadius = 30;\r\n        const animSpeed = 1;\r\n        /* END CONFIG VARS */\r\n\r\n        let canvas = document.querySelector(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let img = new Image();\r\n        \r\n        \r\n            \r\n        \r\n        let frame = 0;\r\n        let textPosition = 40;\r\n\r\n\r\n        setInterval(function() {\r\n            frame++;\r\n            \r\n            let shiftText =  textPosition + (frame * animSpeed)\r\n            if( shiftText > 200 ){\r\n                frame = 0\r\n            }\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            ctx.beginPath();\r\n            ctx.fillStyle = textColor;\r\n            ctx.font = textStyle;\r\n            ctx.fillText(displayText, 60, shiftText);\r\n            ctx.globalCompositeOperation = 'xor';\r\n            ctx.fillStyle = circleColor;\r\n\r\n        \r\n            // let shiftX = Math.sin(frame / (360 / animSpeed) *  Math.PI) * positionRadius;\r\n            // let shiftY = Math.cos(frame / (360 / animSpeed) *  Math.PI) * positionRadius;\r\n        \r\n            // ctx.beginPath();\r\n            // ctx.arc(50 + shiftX, 130, 20, 0, 2*Math.PI);\r\n            // ctx.fill();\r\n            // ctx.beginPath();\r\n            // ctx.arc(250 - shiftX, 130, 20, 0, 2*Math.PI);\r\n            // ctx.fill();\r\n\r\n            ctx.fillStyle = 'red';\r\n            ctx.fillRect(0, 100, canvasWidth, 100);\r\n\r\n            // img.src = image;\r\n            // img.onload = function(){\r\n            //     ctx.drawImage(img, 60, 30, 300, 200);\r\n            // }\r\n            \r\n        }, 1000/40); \r\n\r\n       \r\n\r\n\r\n\r\n        //\r\n        // ctx.fillStyle = \"red\";\r\n        // ctx.fillRect(10, 10, 100, 50);\r\n\r\n        // Image オブジェクトを生成\r\n        // let img = new Image();\r\n        // img.src = image;//../assets/img/img4121_flat.jpg\r\n\r\n        // 画像読み込み終了してから描画\r\n        // 構文: 幅、高さを指定\r\n        //drawImage(image, x, y, width, height)\r\n        // img.onload = function(){\r\n        //     ctx.drawImage(img, 10, 10, 200, 150);\r\n        // }\r\n    },[])\r\n    // useEffect(() => {\r\n    //     window.addEventListener('mousemove', () => {});\r\n      \r\n    //     return () => {\r\n    //       window.removeEventListener('mousemove', () => {})\r\n    //     }\r\n    //   }, []) \r\n    return (\r\n        <div className=\"l-container\" >\r\n            <div className=\"l-section \" > \r\n                <div style={{display:'flex', justifyContent:'center', \r\n                    alignItems:'center',    \r\n                    width:'100%', \r\n                    height:'100%'}}>\r\n                    <canvas width={canvasWidth} height={canvasHeight} style={{border:'1px solid white'}}></canvas>\r\n                </div>\r\n                {/* <div >\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5 >Horizontal stage image 1</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 2</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 3</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 4</h5>\r\n                    </div>\r\n                    <div style={{width:400, height:200, border:'1px solid white'}}>\r\n                        <h5>Horizontal stage image 5</h5>\r\n                    </div>\r\n                </div> \r\n                <div >\r\n                    <h1>Horizontal stage title 1</h1>\r\n                    <h1>Horizontal stage title 2</h1>\r\n                    <h1>Horizontal stage title 3</h1>\r\n                    <h1>Horizontal stage title 4</h1>\r\n                    <h1>Horizontal stage title 5</h1>\r\n                </div>  */}\r\n                \r\n               \r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CanvasTest\r\n// 2021.4.14 removal animation-page\r\n\r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultiplePlanes.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\GsapTest.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ImageLoadingTest.jsx",["712","713"],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\actions.js",[],"D:\\develop-react\\blog-app\\src\\Auth.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultiplePlane.jsx",[],["714","715"],"D:\\develop-react\\blog-app\\src\\components\\transition\\ChildrenTest.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\operators.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\home\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\about\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\post\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\Slideshow.jsx",[],"D:\\develop-react\\blog-app\\src\\firebase\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\about\\GlitchHeader.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesPreview.jsx",["716","717"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\n\r\nconst TopImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default TopImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\TopImagesArea.jsx",[],["718","719"],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\horizontal\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapArea.jsx",["720","721"],"import React,{useCallback} from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport {googleMapConfig} from \"../../googleMap/config\";\r\n\r\nconst MapArea = props => {\r\n    const key = googleMapConfig.key\r\n    const locations = props.locations\r\n    console.log('MapArea');\r\n    console.log(locations);\r\n\r\n    const defaultLatLng = {\r\n        lat: 34.661773,\r\n        lng: 133.934675,\r\n      };\r\n    const items = [\r\n        {\r\n          lat: 35.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 34.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n        {\r\n          lat: 36.7022589,\r\n          lng: 139.7744733,\r\n        },\r\n      ];\r\n    //マーカーが1個\r\n    //   const handleApiLoaded = ({ map, maps }) => {\r\n    //     new maps.Marker({\r\n    //       map,\r\n    //       position: defaultLatLng,\r\n    //     });\r\n    //   };\r\n    \r\n    //マーカー複数で範囲内に表示\r\n    const handleApiLoaded = ({ map, maps }) => {\r\n        const bounds = new maps.LatLngBounds();\r\n        items().forEach((item) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:item.lat,\r\n                lng:item.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        map.fitBounds(bounds);\r\n      };\r\n\r\n    const handleApiLoadedSet = useCallback(({ map, maps })=>{\r\n        const bounds = new maps.LatLngBounds();\r\n        console.log(locations);\r\n        console.log('handleApiLoadedSet ');\r\n\r\n        locations.forEach((location) => {\r\n            const marker = new maps.Marker({\r\n              position: {\r\n                lat:location.position.lat,\r\n                lng:location.position.lng,\r\n              },\r\n              map,\r\n              title: \"Hello World!\",\r\n            });\r\n            bounds.extend(marker.position);\r\n        });\r\n        return map.fitBounds(bounds);\r\n    })\r\n   \r\n   \r\n    return (\r\n        <div className=\"c-locationarea-map-googlemap\" >\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: key }}\r\n                defaultCenter={defaultLatLng}\r\n                defaultZoom={5}\r\n                onGoogleApiLoaded={({ map, maps } )=>handleApiLoadedSet({ map, maps })}\r\n                yesIWantToUseGoogleMapApiInternals\r\n            >\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MapArea\r\n\r\n",["722","723"],"D:\\develop-react\\blog-app\\src\\components\\stage\\PostsInStage.jsx",["724","725","726"],"import React,{useEffect, useCallback, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport {fetchPosts} from '../../reducks/posts/operators'\r\nimport {getPosts} from '../../reducks/posts/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Collapse from '@material-ui/core/Collapse';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list:{\r\n        width:'100%'\r\n    }\r\n  }));\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const dateToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2)\r\n};\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const datetimeToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2) + ' '\r\n        + ('00' + dt.getHours()).slice(-2) + ':'\r\n        + ('00' + dt.getMinutes()).slice(-2) + ':'\r\n        + ('00' + dt.getSeconds()).slice(-2)\r\n};\r\nconst PostsInStage = props => {\r\n    const classes=useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stageId = props.stage.id\r\n\r\n    // const orderedDatetime = datetimeToString(created_at.toDate())\r\n    // const shippingDate = dateToString(created_at.toDate())\r\n\r\n    const postsInStage = useCallback((id) => {\r\n        const filterPosts = posts.filter(post => post.stage.id === id)\r\n        let sorted = filterPosts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return 1\r\n            if(a.created_at < b.created_at) return -1\r\n            return 0\r\n        }) \r\n        return sorted\r\n    },[props.stage.id])\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    return (\r\n        <List className={classes.list}>\r\n            {postsInStage(stageId).map((post, index ) => (\r\n                <div key={post.id} >\r\n                    <ListItem \r\n                        alignItems=\"flex-start\" \r\n                        \r\n                        onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"投稿メイン画像\" src={post.topImages[0].path} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                        primary={post.title}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                    {dateToString(post.created_at.toDate())}\r\n                            </React.Fragment>\r\n                        }                \r\n                        />\r\n                    </ListItem>\r\n                    <Divider  />\r\n                </div>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default PostsInStage\r\n","D:\\develop-react\\blog-app\\src\\components\\home\\NewPostsArea.jsx",["727"],"import React from 'react'\r\nimport {useDispatch} from  'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrape:{\r\n        [theme.breakpoints.down('sm')]:{\r\n            margin:8,\r\n            width:'100%',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            margin:8,\r\n            width:'calc(50% - 16px )',\r\n            height:'auto'\r\n        },\r\n        [theme.breakpoints.up('md')]:{\r\n            margin:16,\r\n            width:'calc(25% - 32px)',\r\n            height:'auto'\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent:'flex-start',\r\n        // alignItems:'flex-start',\r\n        height: '100%',\r\n    },\r\n    button:{\r\n        marginRight:0,\r\n        marginLeft:'auto',\r\n        padding:'0 16px'\r\n    },\r\n    chip:{\r\n        marginRight:4\r\n    },\r\n    cardActionArea:{\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent:'flex-start',\r\n        alignItems:'flex-start',\r\n    },\r\n    cardAction:{\r\n        flexShrink: 0\r\n    }\r\n}))\r\n\r\nconst NewPostsArea = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const post = props.post\r\n    const handleClickTga =(ids,e) =>{\r\n        //投稿表示エリアのフィルターするキーを設定する\r\n        props.setFilter({\r\n            type:'tag',\r\n            key:ids.postId,\r\n            locationKey:'',\r\n            tagKey:ids.tagId,\r\n        })\r\n        props.setVolume(props.defaultVolume)\r\n    }\r\n    \r\n    return (\r\n        <Card className={classes.cardWrape}>\r\n            <CardActionArea className={classes.cardActionArea}>\r\n                {post.topImages.length > 0 && (\r\n                    post.topImages.map(image => (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={image.description}\r\n                            height=\"auto\"\r\n                            image={image.path}\r\n                            title={image.title}\r\n                            key={image.id}\r\n                        />\r\n                    ))\r\n                )} \r\n                <CardContent>\r\n                    <h4>{post.title}</h4>\r\n                    <p>{post.postDate.split('T')[0]}</p>\r\n                    <p>{post.location.name}</p>\r\n                    {post.tags.length > 0 && (\r\n                        post.tags.map(tag => (\r\n                            <span key={tag.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    label={tag.name}\r\n                                    onClick={(e) => handleClickTga({postId:post.id,tagId:tag.id},e)}\r\n                                    className={classes.chip}\r\n                                    clickable\r\n                                />\r\n                            </span>\r\n                        ))\r\n                    )} \r\n                </CardContent>\r\n\r\n            </CardActionArea>\r\n            <CardActions className={classes.cardAction}>\r\n                <Button\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    endIcon={<ChevronRightIcon/>}\r\n                    onClick={()=> dispatch(push('/post/detail/' + props.id ))}\r\n                    className={classes.button}\r\n                    >\r\n                    投稿を見る\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewPostsArea\r\n","D:\\develop-react\\blog-app\\src\\components\\UiKit\\RoundPaginations.jsx",["728"],"import React,{useState,useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst RoundPaginations = props => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const cnt = props.posts.length\r\n    const posts = props.posts\r\n    const [page, setPage] = useState(1);\r\n    const handleChange = (event, value) => {\r\n      setPage(value)\r\n\r\n\r\n        const index = parseInt(value, 10)\r\n        const currenyPost = posts[index - 1] \r\n        dispatch(push('/post/detail/' + currenyPost.id))\r\n\r\n    }; \r\n    \r\n    useEffect(()=>{\r\n      const index = posts.findIndex((post) => post.id === props.id);\r\n      if(index !== -1){\r\n        setPage( index + 1)\r\n      }\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Pagination count={cnt} page={page}  onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default RoundPaginations\r\n","D:\\develop-react\\blog-app\\src\\components\\UiKit\\PrimaryButton.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\MultipleSelect.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\seloctors.js",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\TagsCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoUpload.jsx",["729"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst VideoUpload = (props) => {\r\n    const classes = useStyles()\r\n\r\n    // const [imageId, setImageId] = useState('')\r\n    // const [imagePath, setImagePath] = useState('')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"video/mp4\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // setImageDescription(\"GoogleEerth\")\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: \"\" };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [ props.setImages ])\r\n    // const inputDescription = useCallback((e) => {\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>動画を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept=\"video/mp4\"\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n            {/* <h1>{imageId}</h1>\r\n            <h1>{imagePath}</h1>\r\n            <h1>{imageDescription}</h1>\r\n            <TextInput\r\n                    fullWidth={true} label={\"動画の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\TopImageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\Pagination.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\instagram\\Enbed.jsx",["730","731","732"],"import React,{useEffect} from 'react'\r\n\r\nconst Enbed = props => {\r\n    const styleBlokquote = { background:\"#FFF\", \r\n                                border:0, \r\n                                borderRadius:\"3px\", \r\n                                boxShadow:\"0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15)\", \r\n                                margin: \"1px\", \r\n                                maxWidth:\"540px\", \r\n                                minWidth:\"326px\", \r\n                                padding:0, \r\n                                width:\"99.375%\", \r\n                                width:\"-webkit-calc(100% - 2px)\", \r\n                                width:\"calc(100% - 2px)\" \r\n                            }\r\n    const styleLink = { background:\"#FFFFFF\", \r\n                        lineHeight:0, \r\n                        padding:\"0 0\", \r\n                        textAlign:\"center\", \r\n                        textDecoration:\"none\", \r\n                        width:\"100%\"\r\n                    }\r\n    useEffect(()=>{\r\n        if (window.instgrm) window.instgrm.Embeds.process()\r\n    },[])\r\n    return (\r\n        <> \r\n             <blockquote \r\n              class=\"instagram-media\" \r\n              data-instgrm-captioned \r\n              data-instgrm-version=\"12\"\r\n              style={styleBlokquote}\r\n              >\r\n                <a href={props.path} \r\n                    style={styleLink} \r\n                    target={\"_blank\"}\r\n                >\r\n                </a>\r\n            </blockquote>\r\n            {/* index.htmlで読み込む */}\r\n            {/* <script async defer src=\"http://platform.instagram.com/en_US/embeds.js\"></script> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Enbed\r\n","D:\\develop-react\\blog-app\\src\\components\\landing\\SlideshowUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\store\\store.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Home.jsx",["733"],"import React, { useEffect,useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { getStages } from '../reducks/stage/selectors'\r\n\r\nimport { HomeStage, NewPosts, FilterPosts } from '../components/home/index'\r\n\r\nconst Home = () => {\r\n    const defaultVolume = 4\r\n    //redux\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const stages = getStages(selector)\r\n    //state\r\n    const [filter,setFilter] = useState({\r\n        type:'post',\r\n        key:'',\r\n        locationKey:'', \r\n        tagKey:'',  \r\n    })\r\n    const [stageName,setStageName] = useState('')\r\n    const [stageNo,setStageNo] = useState(0)\r\n    const [stageYear,setStageYear] = useState('')\r\n    const [volume,setVolume] = useState(defaultVolume)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts())\r\n        dispatch(fetchStages()) \r\n    }, []) \r\n         \r\n    return ( \r\n        <div> \r\n            <HomeStage \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                setStageName={setStageName}\r\n                setStageNo={setStageNo}\r\n                setStageYear={setStageYear} \r\n                />\r\n            <FilterPosts  \r\n                stages={stages} \r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n            />\r\n            <NewPosts \r\n                posts={posts}\r\n                filter={filter} \r\n                setFilter={setFilter}\r\n                defaultVolume={defaultVolume} \r\n                volume={volume} \r\n                setVolume={setVolume}\r\n                stageName={stageName}\r\n                stageNo={stageNo}\r\n                stageYear={stageYear}\r\n                />\r\n        </div> \r\n    )\r\n} \r\n\r\nexport default Home\r\n","D:\\develop-react\\blog-app\\src\\templates\\SignIn.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostEdit.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\TagsList.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationList.jsx",[],["734","735"],"D:\\develop-react\\blog-app\\src\\templates\\BlogData.jsx",["736","737","738","739","740"],"import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {DataGrid } from '@material-ui/data-grid';\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport { push } from 'connected-react-router'\r\nimport moment from 'moment'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst useStyles= makeStyles((theme) => ({\r\n    grid:{\r\n        backgroundColor:'#fff'\r\n    },\r\n    postsWrape:{\r\n        position:'relative',\r\n        height:'100%',\r\n        width:'100%',\r\n        maxHeight:'120px',\r\n        display:'flex',\r\n        flexFlow:'row nowrape'\r\n    },\r\n    postBody:{\r\n        padding:'.8rem',\r\n    },\r\n    images:{\r\n        display:'block',\r\n        width:'auto',\r\n        height:'100%',\r\n        maxHeight:'120px'\r\n        \r\n    },\r\n    locationWrape:{\r\n    },\r\n    typeWrape:{\r\n    },\r\n    stageWrape:{\r\n    }\r\n    \r\n}))\r\n\r\nconst BlogData = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state) \r\n    const posts = getPosts(selector)\r\n    let postRows = []\r\n\r\n    const theme = useTheme();\r\n    // const isDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    // const isUpSM = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const isDownSM = !useMediaQuery('(min-width:600px)');\r\n    const isDownMD = !useMediaQuery('(min-width:960px)');\r\n\r\n    // console.log('BlogData');\r\n    // console.log(posts);\r\n\r\n    // id:post.id,\r\n    // postDate: mFormatted, \r\n    // title:post.title, \r\n    // stageYear:post.stage.stageYear, \r\n    // stageNo:post.stage.stageNo, \r\n    // stageName:post.stage.stage, \r\n    // location:post.location.name, \r\n    // type:post.type, \r\n    // image:post.topImages[0].path\r\n\r\n\r\n    \r\n\r\n    const columns = [\r\n        {field:'id',\r\n        headerName:'ID',\r\n        hide: true,\r\n        flex: '1',\r\n        },\r\n\r\n        {field: 'postDate',\r\n        headerName: '投稿',\r\n        flex: 1,\r\n        renderCell:(params)=>(\r\n            <div className={classes.postsWrape} >\r\n                <img src={params.getValue('image') } className={classes.images}/>\r\n                <div className={classes.postBody}>\r\n                    <div onClick={()=> dispatch(push('/post/detail/' + params.getValue('id')))}>\r\n                        <h4>{params.getValue('title')}</h4>\r\n                        <p>{params.getValue('postDate')}</p>\r\n                    </div>\r\n                    <div onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                        <p>STAGE{params.getValue('stageNo')}</p>\r\n                        <p>{params.getValue('stageName')}</p>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n            </div> \r\n            \r\n        )},\r\n       \r\n        {field:'location',\r\n        headerName:'ロケーション',\r\n        flex: 0.3,\r\n        hide: isDownSM,\r\n        renderCell:(params)=>(\r\n            // <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/edit/' + params.getValue('locationId')))}>\r\n            <div className={classes.locationWrape} onClick={()=> dispatch(push('/location/List'))}>\r\n                <h6>{params.getValue('location')}</h6>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'type',\r\n        headerName:'投稿タイプ', \r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.typeWrape}>\r\n                <p>{params.getValue('type')}</p>\r\n            </div>\r\n        )\r\n        },\r\n        {field:'stageNo',\r\n        headerName:'ステージ',\r\n        flex: 0.2,\r\n        hide: isDownMD,\r\n        renderCell:(params)=>(\r\n            <div className={classes.stageWrape} onClick={()=> dispatch(push('/stage/listgridline'))}>\r\n                <p>STAGE{params.getValue('stageNo')}</p>\r\n            </div>\r\n        )\r\n        },\r\n    ]\r\n    const rowData = () => {\r\n        posts.map(post => {\r\n            let timestampDate = post.created_at.toDate()\r\n            let m = moment(timestampDate );\r\n            let mFormatted = m.format();\r\n            let mYYMMDD = mFormatted.split('T')\r\n            let YYMMDD = mYYMMDD[0]\r\n            // let HHmmSS = mYYMMDD[1].split('+')\r\n            postRows.push({\r\n                id:post.id,\r\n                image:post.topImages[0].path,\r\n                title:post.title,\r\n                postDate: YYMMDD,\r\n                location:post.location.name,  \r\n                locationId:post.location.id,  \r\n                stageYear:post.stage.stageYear, \r\n                stageNo:post.stage.stageNo, \r\n                stageName:post.stage.stage, \r\n                stageId:post.stage.id, \r\n                type:post.type, \r\n            })\r\n        })\r\n\r\n        return postRows\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    \r\n    return (\r\n        // <div className=\"l-container-fluid \">\r\n        // <div style={{ height: 400, width: '100%',backgroundColor:'#fff'  }}>\r\n        //     <div style={{ display: 'flex', height: '100%' }}>\r\n        //         <div style={{ flexGrow: 1 }}>\r\n        //            <DataGrid\r\n        //                 columns={columns}\r\n        //                 rows={rowData()}\r\n        //                 autoHeight \r\n        //                 checkboxSelection\r\n        //                 className={classes.grid}\r\n        //                 rowHeight={52}\r\n        //             />\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <div>\r\n            <div style={{backgroundColor:'#fff', height: '100vh', width: '100%' }}>\r\n                <DataGrid\r\n                columns={columns}\r\n                rows={rowData()} \r\n                rowHeight={120}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BlogData\r\n","D:\\develop-react\\blog-app\\src\\templates\\TopPage.jsx",["741"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {HorizontalCrousel} from '../components/horizontal/index'\r\nimport {VerticalCarousel} from '../components/vertical/index'\r\nimport { fetchStages } from '../reducks/stage/operators'\r\nimport {getStages} from '../reducks/stage/selectors' \r\n\r\nconst TopPage = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const stages = getStages(selector)\r\n    console.log(stages);\r\n    useEffect(()=>{\r\n        dispatch(fetchStages())\r\n    },[])\r\n    return (\r\n        <div className=\"l-container\" >\r\n            <div className=\"l-section\" > \r\n                <div>\r\n                    <HorizontalCrousel stages={stages}/>\r\n                    <VerticalCarousel stages={stages}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopPage  \r\n","D:\\develop-react\\blog-app\\src\\templates\\ThreeTest.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsBasicPlane.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerTest.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LoadingDispalyFetchDataTest.jsx",["742","743","744"],"import React,{useState, useEffect, useRef} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n        backgroundColor:'black',\r\n        '& p':{\r\n            margin:'16px'\r\n        },\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        flexDirection:'column',\r\n        \r\n      },\r\n}))\r\n\r\nconst LoadingDispalyFetchDataTest = () => {\r\n    const classes = useStyles()\r\n    // const [open, setOpen] = useState(true);\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    //   };\r\n    // const handleToggle = () => {\r\n    //     setOpen(!open);\r\n    //   };\r\n    // useEffect(() => {\r\n    //     setTimeout(() => {\r\n    //         handleClose()\r\n    //     }, 3000);\r\n    //   }, []);\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    console.log(posts);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts()) \r\n    }, [])  \r\n\r\n    return (\r\n        <>\r\n            <div className=\"l-container\" style={{display: posts.length > 0 ? \"block\" : \"none\"}}>\r\n                <div className=\"l-section \">\r\n                    <div className=\"c-admin-wrape\">\r\n                        <div>\r\n                            <h2>投稿一覧</h2>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                posts.length > 0 && (\r\n                                    posts.map((post) => (\r\n                                        <PostListCard key={post.id}\r\n                                            id={post.id} title={post.title} article={post.article}\r\n                                            postDate={post.postDate} type={post.type}\r\n                                            topImages={post.topImages} postImages={post.postImages}\r\n                                        />\r\n                                    ))\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Backdrop className={classes.backdrop} \r\n                        open={true} \r\n                        style={{display: posts.length > 0 ? \"none\" : \"flex\"}}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n                <p>Now Loading....</p>\r\n                \r\n            </Backdrop>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default LoadingDispalyFetchDataTest \r\n","D:\\develop-react\\blog-app\\src\\reducks\\users\\actions.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\store\\initialState.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SlideshowUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MuitiplePlaneScroll.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\MapMarker.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\TagsArea.jsx",["745"],"import React,{useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MultipleSelect } from '../UiKit/index'\r\nimport { getTags } from '../../reducks/tags/seloctors'\r\nimport { fetchTags } from '../../reducks/tags/operators'\r\n\r\nconst TagsArea = (props) => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector(state => state)\r\n    const tags = getTags(selector)\r\n    \r\n\r\n    const handleChange = (selectedTags) => {\r\n        const selectedValue = []\r\n        if(selectedTags.length > 0 ){\r\n            selectedTags.forEach(selectedTag => {\r\n                const found = tags.find(tag => tag.id === selectedTag)\r\n                if (found){\r\n                    selectedValue.push(found)\r\n                }\r\n            })\r\n        }\r\n        props.setTgas(selectedValue)\r\n    }\r\n    const valueTags = (pTags) => {\r\n        if(pTags === []){\r\n            return []\r\n        }\r\n        const valueTags = []\r\n        pTags.forEach(pTag=>{\r\n            console.log(pTag.id);\r\n            console.log(pTag.name);\r\n            valueTags.push(pTag.id)\r\n        })\r\n        return valueTags\r\n    } \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTags())\r\n    }, [])  \r\n    \r\n    return (\r\n        <div>\r\n            <h3>TagsArea</h3>\r\n            <p>タグを選択してください</p>\r\n            <MultipleSelect\r\n                label={\"タグ\"}\r\n                // value={props.tags || []}\r\n                value={valueTags(props.tags)}\r\n                handleChange={handleChange}\r\n                options={tags}\r\n                required={true}\r\n            />\r\n            {/* <h1>tag name</h1>\r\n            {selected.length > 0 && (\r\n                selected.map(value => {\r\n                    <h1>value.name</h1>\r\n                })\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagsArea\r\n","D:\\develop-react\\blog-app\\src\\components\\vertical\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\ImagePreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\DateTimePicers.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxStages.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\TextInput.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\FilterPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\StageSwiper.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoPreview.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\tags\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\PostArea.jsx",[],"D:\\develop-react\\blog-app\\src\\Router.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\PostList.jsx",["746"],"import React, { useEffect } from 'react'\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\nimport {PostListCard} from '../components/post/index'\r\nimport Button from '@material-ui/core/Button';\r\nimport {push} from 'connected-react-router'\r\n\r\nconst PostList = () => {\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPosts()) \r\n    }, [])\r\n  \r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section \">\r\n                <div className=\"c-admin-wrape\">\r\n                    <div>\r\n                    <h2>投稿一覧</h2>\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        posts.length > 0 && (\r\n                            posts.map((post) => (\r\n                                <PostListCard key={post.id}\r\n                                    id={post.id} title={post.title} article={post.article}\r\n                                    postDate={post.postDate} type={post.type}\r\n                                    topImages={post.topImages} postImages={post.postImages}\r\n                                />\r\n                            ))\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                    <Button onClick={()=> dispatch(push('/admin'))}>\r\n                        <p>Back to Admin Menu</p>\r\n                    </Button> \r\n                </div>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n","D:\\develop-react\\blog-app\\src\\templates\\PostListGridImage.jsx",["747","748"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPosts} from '../reducks/posts/operators'\r\nimport {getPosts} from '../reducks/posts/selectors'\r\nimport {push} from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      width: '100%',\r\n    //   border:'1px solid white',\r\n    //   backgroundColor:'white'\r\n    },\r\n  }));\r\n\r\nconst PostListGridImage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const postsSort = () =>{\r\n        let sorted = posts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return -1;\r\n            if(a.created_at < b.created_at) return 1;\r\n            return 0;\r\n        });\r\n        return sorted\r\n    }\r\n    useEffect(()=> {\r\n        dispatch(fetchPosts())  \r\n    },[])  \r\n    return (\r\n       <div className=\"l-container-fluid \">\r\n           <div className=\"l-section \">\r\n            <div className={classes.root}>\r\n                    <GridList cellHeight={'auto'} className={classes.gridList} cols={3}>\r\n                        {  postsSort().length > 0 &&(\r\n                            postsSort().map(post=> (\r\n                                post.topImages.map(topImage=>(\r\n                                    <GridListTile key={topImage.id} cols={1}>\r\n                                        <img src={topImage.path} alt={topImage.description} className=\"c-image-fit-cover\"/>\r\n                                    </GridListTile>\r\n                                ))\r\n                            ))\r\n                        )}\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PostListGridImage \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\Admin.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LandingPage.jsx",["749"],"import React,{useState,useEffect} from 'react'\r\nimport image from '../assets/img/img4121_flat.jpg'\r\n\r\nconst LandingPage = () => {\r\n  const [horizontalPosition, setHorizontalPosition] = useState(0)\r\n  // const [lastScrollTop, setLastScrollTop] = useState(0);\r\n  // const [bodyOffset, setBodyOffset] = useState(\r\n  //   document.body.getBoundingClientRect()\r\n  // );\r\n  // const [scrollY, setScrollY] = useState(bodyOffset.top);\r\n  // const [scrollX, setScrollX] = useState(bodyOffset.left);\r\n  // const [scrollDirection, setScrollDirection] = useState();\r\n  \r\n  const listener = event => { \r\n        console.log('listener scroll');\r\n        console.log('event' + event);\r\n        // setBodyOffset(document.body.getBoundingClientRect());\r\n        // setScrollY(-bodyOffset.top);\r\n        // setScrollX(bodyOffset.left);\r\n        // setScrollDirection(lastScrollTop > -bodyOffset.top ? \"down\" : \"up\");\r\n        // setLastScrollTop(-bodyOffset.top);\r\n\r\n        // console.log(bodyOffset.top);\r\n        // console.log(bodyOffset.left);\r\n        // console.log('window.innerWidth: ' + window.innerWidth);\r\n        // console.log('window.innerHeight: ' + window.innerHeight);\r\n\r\n        console.log('window.pageXOffset: ' + window.pageXOffset);\r\n        console.log('window.pageYOffset: ' + window.pageYOffset);\r\n\r\n        console.log('window.scrollX: ' + window.scrollX);\r\n        console.log('window.scrollY: ' + window.scrollY);\r\n\r\n        console.log('document.documentElement.scrollTop: ' + document.documentElement.scrollTop);\r\n        console.log('document.body.scrollTop: ' + document.body.scrollTop);\r\n\r\n\r\n       \r\n       \r\n      };\r\n    const mousewheel = event => {\r\n      console.log('mousewheel: ');\r\n        console.log('event.deltaY: ' + event.deltaY);\r\n        const pos = horizontalPosition + event.deltaY\r\n        setHorizontalPosition(pos)\r\n        console.log(pos);\r\n        if (event.deltaY < 0) {\r\n            console.log('scrolling up');\r\n        // this.back_page();\r\n            // setHorizontalPosition(horizontalPosition - 100)\r\n        }\r\n        if (event.deltaY > 0) {\r\n            console.log('scrolling down');\r\n            // this.next_page();\r\n            // setHorizontalPosition(horizontalPosition + 100)\r\n          } \r\n          // getheight();\r\n    }\r\n    const handleResize = event => {\r\n        console.log('handleResize: ');\r\n        console.log('window.innerWidth: ' + window.innerWidth);\r\n        console.log('window.innerHeighth: ' + window.innerHeight);\r\n    }\r\n    // const getheight = event => {\r\n    //     console.log('getheight');\r\n    //     const boxlist = document.getElementByClass('.box');\r\n    // }\r\n    useEffect(() => {\r\n        console.log('useEffect listener');\r\n        window.addEventListener('scroll', listener);\r\n        return () => {\r\n          window.removeEventListener('scroll', listener);\r\n          \r\n        };\r\n      },[]);\r\n    useEffect(() => {\r\n        console.log('useEffect mousewheel');\r\n        window.addEventListener('mousewheel', mousewheel);\r\n        return () => {\r\n          window.removeEventListener('mousewheel',mousewheel);\r\n        };\r\n      },[]);\r\n    useEffect(() => {\r\n        console.log('useEffect handleResize');\r\n        window.addEventListener('resize', handleResize);\r\n        return () => {\r\n          window.addEventListener('resize', handleResize);\r\n        };\r\n      },[]); \r\n    return (\r\n        <div className='c-landingpage-wrapper'>\r\n            <div className='c-landingpage-horizontal-box' \r\n              id=\"horizonBox\" \r\n              style={{transform:`translatex(${horizontalPosition}px)`}}>\r\n\r\n                <div className=\"c-landingpage-image-wrapper\">\r\n                        <img src={image} alt=\"img\" />\r\n                </div>\r\n                {/* <div className=\"c-landingpage-image-wrapper\">\r\n                        <img src={image} alt=\"img\" />\r\n                </div>\r\n                <div className=\"c-landingpage-image-wrapper\">\r\n                        <img src={image} alt=\"img\" />\r\n                </div>\r\n                <div className=\"c-landingpage-image-wrapper\">\r\n                        <img src={image} alt=\"img\" />\r\n                </div>\r\n                <div className=\"c-landingpage-image-wrapper\">\r\n                        <img src={image} alt=\"img\" />\r\n                </div> */}\r\n                <div style={{color:'white'}}>{horizontalPosition}</div>\r\n            </div>\r\n            \r\n            {/* <div className='c-landingpage-virtical-box' id=\"virticalBox\">\r\n                <p>scroll:{horizontalPosition}</p>\r\n                <h1>virtical scroll box1</h1>\r\n                <h1>virtical scroll box2</h1>\r\n                <h1>virtical scroll box3</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n                <h1>virtical scroll box4</h1>\r\n            </div> */}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSlideshowGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LoadingDisplayTest.jsx",["750","751"],"import React,{useEffect,useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n      backgroundColor:'black',\r\n    },\r\n  }));\r\nconst LoadingDisplayTest = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    // const [isLoaded, setIsLoaded] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n      };\r\n      useEffect(() => {\r\n        handleToggle()\r\n        setTimeout(() => {\r\n        //   setIsLoaded(true);\r\n        handleClose()\r\n        }, 3000);\r\n      }, []);\r\n    return (\r\n        <div style={{color:'white'}}>\r\n            LoadingDisplayTest\r\n            {/* <CircularProgress />\r\n            <LinearProgress /> */}\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleToggle}>\r\n                Show backdrop\r\n            </Button>\r\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingDisplayTest \r\n// 2021.4.14 removal animation-page\r\n","D:\\develop-react\\blog-app\\src\\reducks\\tags\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SelectiveRenderTargets.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\ReplaceImagesUpload.jsx",["752"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst ReplaceImgesUpload = props => {\r\n    const classes = useStyles()\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => { \r\n\r\n                const id = props.images[props.index].id\r\n                const newImages = props.images.filter(image => image.id !== id)\r\n                const newImage = { id: fileName, path: downloadURL, description: 'new image' };\r\n                newImages.push(newImage)\r\n                props.setImages(newImages) \r\n                \r\n                // props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                // newBookmarks = bookmarks.filter(item !== article.id)\r\n\r\n\r\n                // dispatch(hideLoadingAction())\r\n                // props.setImages([newImage]) \r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span>投稿画像を変更する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplaceImgesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\StageArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\locationMap\\LocationInPosts.jsx",["753","754","755"],"import React,{useEffect, useCallback, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport {fetchPosts} from '../../reducks/posts/operators'\r\nimport {getPosts} from '../../reducks/posts/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nconst useStyles = makeStyles((theme) => ({\r\n    list:{\r\n        width:'100%'\r\n    }\r\n  }));\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const dateToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2)\r\n};\r\n/**\r\n * Convert datetime into the String.\r\n * @param {Date} dt\r\n * @returns {string} \"YYYY-MM-DD\"\r\n */\r\nexport const datetimeToString = (dt) => {\r\n    return dt.getFullYear() + '-'\r\n        + ('00' + (dt.getMonth()+1)).slice(-2) + '-'\r\n        + ('00' + dt.getDate()).slice(-2) + ' '\r\n        + ('00' + dt.getHours()).slice(-2) + ':'\r\n        + ('00' + dt.getMinutes()).slice(-2) + ':'\r\n        + ('00' + dt.getSeconds()).slice(-2)\r\n};\r\nconst LocationInPosts = props => {\r\n    const classes=useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n    const locationId = props.id\r\n    const LocationInPosts = useCallback((id) => {\r\n        const filterPosts = posts.filter(post => post.location.id === id)\r\n        let sorted = filterPosts.sort(function(a,b){\r\n            if(a.created_at > b.created_at) return 1\r\n            if(a.created_at < b.created_at) return -1\r\n            return 0\r\n        }) \r\n        return sorted\r\n    },[props.id])\r\n\r\n    useEffect(()=>{\r\n        dispatch(fetchPosts())\r\n    },[])\r\n    return (\r\n        <List className={classes.list}>\r\n            {LocationInPosts(locationId).map((post, index ) => (\r\n                <>\r\n                    <ListItem \r\n                        alignItems=\"flex-start\" \r\n                        key={post.id} \r\n                        onClick={() => dispatch(push('/post/detail/' + post.id))}\r\n                    >\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"投稿メイン画像\" src={post.topImages[0].path} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                        primary={post.title}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <p>\r\n                                    {dateToString(post.created_at.toDate())}\r\n                                </p>\r\n                            </React.Fragment>\r\n                        }                \r\n                        />\r\n                    </ListItem>\r\n                    <Divider  />\r\n                </>\r\n            ))}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default LocationInPosts\r\n","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\StageCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\HomeStage.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\horizontal\\HorizontalCarousel.jsx",["756"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    img: {\r\n        // marginRight:'20%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width:'128px',\r\n            height:'80px'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            width:'200px',\r\n            height:'150px'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            width:'400px',\r\n            height:'250px'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width:'800px',\r\n            height:'500px'\r\n        },\r\n    },\r\n}))\r\n\r\n\r\nconst HorizontalCarousel = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const positionRef = useRef(); \r\n    const BoxWidthRef = useRef(); \r\n    const windowWidthRef = useRef(); \r\n    const [position,setPosition] = useState(0)\r\n    const [sliderBoxWidth,setSliderBoxWidth] = useState(0)\r\n    const [windowWidth,setWindowWidth] = useState(window.innerWidth)\r\n    const [loaded, setLoaded] = useState(false);\r\n    positionRef.current = position\r\n    BoxWidthRef.current = sliderBoxWidth\r\n    windowWidthRef.current = windowWidth\r\n    const stages = props.stages\r\n    \r\n    const mousewheel = event =>{\r\n        // console.log(typeof(event.deltaY));\r\n        // console.log(event.deltaY);\r\n        if (event.deltaY < 0 && positionRef.current < 0) {\r\n            // console.log('scrolling up');\r\n            setPosition(prevPosition => prevPosition + 30)\r\n        }\r\n        if ((event.deltaY > 0) && ((BoxWidthRef.current + positionRef.current) - windowWidthRef.current > 0)  ) {\r\n            // console.log('scrolling down');\r\n            setPosition(prevPosition => prevPosition - 30) \r\n        } \r\n        // console.log(positionRef.current);\r\n        // console.log(BoxWidthRef.current);\r\n        // console.log(windowWidthRef.current);\r\n    }\r\n    const handleResize = event => {\r\n        console.log('handleResize: ');\r\n        // console.log('window.innerWidth: ' + window.innerWidth);\r\n        // console.log('window.innerHeighth: ' + window.innerHeight);\r\n        setWindowWidth(window.innerWidth)\r\n        const clientWidth = document.getElementById('sliderBox').clientWidth\r\n        setSliderBoxWidth(clientWidth)\r\n    }\r\n    const onLoad = () => {\r\n        console.log('loaded');\r\n        setLoaded(true);\r\n        const clientWidth = document.getElementById('sliderBox').clientWidth\r\n        console.log('clientWidth',clientWidth);\r\n        console.log('BoxWidthRef.current',BoxWidthRef.current);\r\n        setSliderBoxWidth(clientWidth)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log( 'addEventListener resize');\r\n        window.addEventListener('resize', handleResize);\r\n        window.addEventListener('mousewheel',mousewheel)\r\n\r\n        return () => {\r\n            window.addEventListener('mousewheel', mousewheel)\r\n            window.addEventListener('resize', handleResize);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n\r\n        // <div className=\"c-horizontalCarousel\">\r\n        //     <div className=\"c-horizontalCarousel-wrapper\">\r\n                \r\n                <div id=\"sliderBox\" className=\"c-horizontalCarousel-box\" \r\n                    style={{transform:`translate(${position}px,-50%)`}}\r\n                    onClick={()=>dispatch(push('/'))}\r\n                >\r\n                        {stages.length > 0 && (\r\n                            stages.map(stage=>(\r\n                                <div className={classes.img} key={stage.id}  >\r\n                                    <img src={stage.images[0].path} \r\n                                         alt={stage.stage} \r\n                                         onLoad={() => onLoad()}\r\n                                         className=\"c-horizontalCarousel-image-size\" />\r\n                                    <p>box:{sliderBoxWidth}-pos:{position}-win:{ windowWidth}</p>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                </div>\r\n\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default HorizontalCarousel\r\n","D:\\develop-react\\blog-app\\src\\components\\location\\LocationCard.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\SNSArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\home\\NewPosts.jsx",[],"D:\\develop-react\\blog-app\\src\\reportWebVitals.js",[],"D:\\develop-react\\blog-app\\src\\templates\\PostDetail.jsx",["757"],"import React, { useState, useEffect } from 'react'\r\nimport { db } from '../firebase/index'\r\nimport moment from 'moment'\r\nimport {TopImageArea,PostArea,LocationArea,Pagination,SNSArea} from '../components/postDetail/index'\r\n\r\nimport { getPosts } from '../reducks/posts/selectors'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPosts } from '../reducks/posts/operators'\r\n\r\nconst Postdetail = () => { \r\n\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const posts = getPosts(selector)\r\n\r\n    let id = window.location.pathname.split('/post/detail')[1]\r\n    if (id !== '') {\r\n        id = id.split('/')[1]\r\n    }\r\n    const [title, setTitle] = useState(\"\")\r\n    const [article, setArticle] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n\r\n    const dateNow = moment().format()//2014-08-18T21:11:54+09:47\r\n    const dateSplit = dateNow.split('+')//2014-08-18T21:11:54 この形式でpicerに渡す\r\n    const [postDate, setPostDate] = useState(dateSplit[0]);\r\n\r\n    const [topImages, setTopImages] = useState([])\r\n    const [postImages, setPostImages] = useState([])\r\n    //stage\r\n    const [stage, setStage] = useState(\"\")\r\n    const [stageNo,setStageNo]= useState(\"\")\r\n    const [stageYear,setStageYear]= useState(0)\r\n    const [stageImages,setStageImages] = useState([])\r\n    //tag\r\n    const [tags, setTags] = useState([])\r\n    //location\r\n    const [locationName, setLocationName] = useState([])\r\n    const [locationAddress, setLocationAddress] = useState([])\r\n    const [locationLat, setLocationLat] = useState([])\r\n    const [locationLng, setLocationLng] = useState([])\r\n    const [locationImages, setLocationImages] = useState([])\r\n   \r\n    // useEffect(() => {\r\n    //     if(!posts){\r\n    //         dispatch(fetchPosts())\r\n    //     }\r\n\r\n    //     // }else{\r\n    //         const post = posts.find(post => post.id === id)\r\n    //         if(post){\r\n    //             setTitle(post.title)\r\n    //             setArticle(post.article)\r\n    //             setType(post.type)\r\n    //             setPostDate(post.postDate)\r\n    //             setTopImages(post.topImages)\r\n    //             setPostImages(post.postImages)\r\n    //             //stage\r\n    //             setStage(post.stage.stage)\r\n    //             setStageNo(post.stage.stageNo)\r\n    //             setStageYear(post.stage.stageYear)\r\n    //             setStageImages(post.stage.images)\r\n    //             //tag\r\n    //             setTags(post.tags)\r\n    //             //location\r\n    //             setLocationName(post.location.name)\r\n    //             setLocationAddress(post.location.address)\r\n    //             setLocationLat(post.location.position.lat)\r\n    //             setLocationLng(post.location.position.lng)\r\n    //             setLocationImages(post.location.images)\r\n    //         // }\r\n    //     }\r\n    // }, [])\r\n    useEffect(() => {\r\n        if(!posts || posts.length === 0){\r\n            dispatch(fetchPosts())\r\n        }\r\n        if (id !== '') {\r\n            db.collection('posts').doc(id).get().then(snapshot => {\r\n                const post = snapshot.data()\r\n                setTitle(post.title)\r\n                setArticle(post.article)\r\n                setType(post.type)\r\n                setPostDate(post.postDate)\r\n                setTopImages(post.topImages)\r\n                setPostImages(post.postImages)\r\n                //stage\r\n                setStage(post.stage.stage)\r\n                setStageNo(post.stage.stageNo)\r\n                setStageYear(post.stage.stageYear)\r\n                setStageImages(post.stage.images)\r\n                //tag\r\n                setTags(post.tags)\r\n                //location\r\n                setLocationName(post.location.name)\r\n                setLocationAddress(post.location.address)\r\n                setLocationLat(post.location.position.lat)\r\n                setLocationLng(post.location.position.lng)\r\n                setLocationImages(post.location.images)\r\n\r\n            }).catch(error => {\r\n                throw new Error(error) \r\n            })\r\n        }\r\n    },[id])  \r\n\r\n    \r\n    return (\r\n        <main>\r\n            {/* TopImageArea--------------------------------------------------------- */}\r\n            <TopImageArea title={title} stage={stage} stageNo={stageNo} stageYear={stageYear} images={topImages}/> \r\n            {/* PostArea--------------------------------------------------------- */}\r\n            <PostArea stage={stage} stageNo={stageNo} stageYear={stageYear} stageImages={stageImages}\r\n                        article={article} type={type} postDate={postDate} postImages={postImages}\r\n                        tags={tags} \r\n                        locationName={locationName} locationAddress={locationAddress}\r\n                    />\r\n            {/* Pagination--------------------------------------------------------- */}\r\n            <Pagination posts={posts} id={id}/>\r\n            {/* LocationArea--------------------------------------------------------- */}\r\n            <LocationArea locationName={locationName} locationAddress={locationAddress}\r\n                locationLat={locationLat}\r\n                locationLng={locationLng}\r\n                locationImages={locationImages} \r\n                    />\r\n             \r\n            {/* PostListArea--------------------------------------------------------- */}\r\n            {/* <PostListArea  */}\r\n            {/* SNSrea--------------------------------------------------------- */}\r\n            <SNSArea images={topImages} postImages={postImages}/> \r\n            {/* <h1>{id}</h1>\r\n            <h1>{title}</h1>\r\n            <h1>{article}</h1>\r\n            <h1>{type}</h1>\r\n            <h1>{postDate}</h1>\r\n            <h1>TopImage</h1>\r\n            {topImages.length > 0 && (\r\n                topImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={ image.description} className=\"p-imagePreview__img\"/>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>PostImage</h1>\r\n            {postImages.length > 0 && (\r\n                postImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )} */}\r\n\r\n\r\n\r\n{/*             \r\n            <h1>Stage</h1>\r\n            <p>{stage}</p>\r\n            <p>{stageNo}</p>\r\n            <p>{stageYear}</p>\r\n            {stageImages.length > 0 && (\r\n                stageImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <img src={image.path} alt={image.description} className=\"p-imagePreview__img\" />\r\n                    </div>\r\n                ))\r\n            )}\r\n\r\n            <h1>Locations</h1>\r\n            \r\n            <p>{locationName}</p>\r\n            <p>{locationAddress}</p>\r\n            <p>{locationLat}</p>\r\n            <p>{locationLng}</p>\r\n            {locationImages.length > 0 && (\r\n                locationImages.map(image => (\r\n                    <div key={image.id}>\r\n                        <video  muted className=\"p-imagePreview__img\">\r\n                            <source src={image.path} type=\"video/mp4\" />\r\n                        </video>\r\n                    </div>\r\n                ))\r\n            )}\r\n            <h1>Tags</h1>\r\n            \r\n            {tags.length > 0 && (\r\n               tags.map(tag => (\r\n                    <div key={tag.id}>\r\n                        <p>{tag.name}</p>\r\n                    </div>\r\n                ))\r\n            )} */}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Postdetail\r\n","D:\\develop-react\\blog-app\\src\\templates\\TagsEdit.jsx",[],["758","759"],"D:\\develop-react\\blog-app\\src\\templates\\CanvasCircle.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\location\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SinglePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesPreview.jsx",["760","761"],"import React,{useState,useCallback} from 'react'\r\nimport { TextInput } from '../UiKit/index'\r\n\r\nconst PostImagesPreview = props => {\r\n    const images = props.images\r\n    const index = parseInt(props.index, 10)\r\n    const [description,setDescription] = useState(props.description)\r\n    const [instagram,setInstagram] = useState(props.instagram)\r\n    const inputDescription = useCallback((e)=>{\r\n        setDescription(e.target.value)\r\n        images[index].description = e.target.value\r\n        props.setImages(images)\r\n    },[setDescription])\r\n    const inputInstagram = useCallback((e)=>{\r\n        setInstagram(e.target.value)\r\n        images[index].instagram = e.target.value\r\n        props.setImages(images)\r\n    },[setInstagram])\r\n    return (\r\n        <div>\r\n             <div className=\"classes.u-overflow-hidden\">\r\n                <img alt=\"アイキャッチ画像\" src={props.path} className=\"u-image-width-fit\"/>\r\n                <p>画像説明</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"画像説明\"} multiline={false} required={true}\r\n                        rows={1} value={description} type={\"text\"} onChange={inputDescription}\r\n                    />\r\n                </div>\r\n                <p>インスタグラムURL</p>\r\n                <div>\r\n                     <TextInput\r\n                        fullWidth={true} label={\"インスタグラムURL\"} multiline={false} required={false}\r\n                        rows={1} value={instagram} type={\"url\"} onChange={inputInstagram}\r\n                    />\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PostImagesPreview\r\n","D:\\develop-react\\blog-app\\src\\components\\stage\\ImagesUpload.jsx",["762"],"import React, { useCallback } from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import {TextInput,PrimaryButton} from '../UiKit/index'\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n \r\nconst ImagesUpload = props => {\r\n    const classes = useStyles()\r\n    // const [imageId, setImageId] = useState('imageId')\r\n    // const [imagePath, setImagePath] = useState('imagePath')\r\n    // const [imageDescription, setImageDescription] = useState('')\r\n\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n        //image type: \"image/jpeg\"\r\n        //video type: \"video/mp4\"\r\n        // let blob = new Blob(file, props.blobType);\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // props.setImages((prevState => [...prevState, newImage])) //追加\r\n                // setImageId(fileName)\r\n                // setImagePath(downloadURL)\r\n                // dispatch(hideLoadingAction())\r\n                \r\n                const newImage = { id: fileName, path: downloadURL, description: '' };\r\n                props.setImages([newImage])\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    // const inputDescription = useCallback((e) => {\r\n\r\n    //     const description = e.target.value\r\n    //     setImageDescription(description)\r\n    //     const newImage = { id: imageId, path: imagePath, description: description };\r\n    //     props.setImages([newImage])\r\n        \r\n    // }, [setImageDescription])\r\n    // const addImage = useCallback((imageId,imagePath,imageDescription) => {\r\n    //     // console.log('addImage');\r\n    //     const newImage = { id: imageId, path: imagePath, description: imageDescription };\r\n    //     // console.log('newImage',newImage);\r\n    //     // setAreaImages((prevState => [...prevState, newImage]))\r\n    //     // props.setImages((prevState => [...prevState, newImage]))\r\n    //     props.setImages([newImage])\r\n    // }, [props.setImages])\r\n    \r\n    return (\r\n        <div>\r\n            <span>画像を追加する</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon />\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n           \r\n            {/* <TextInput\r\n                    fullWidth={true} label={\"画像の説明を記入する\"} multiline={true} required={true}\r\n                    rows={5} value={imageDescription} type={\"text\"} onChange={inputDescription}\r\n                /> */}\r\n            {/* <PrimaryButton\r\n                label={\"登録\"}\r\n                onClick={() => addImage(imageId,imagePath,imageDescription)}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\googleMap\\config.js",[],"D:\\develop-react\\blog-app\\src\\components\\vertical\\VerticalCarousel.jsx",["763"],"import React,{useState,useEffect,useRef} from 'react'\r\n\r\nconst VerticalCarousel = props => {\r\n    const stages = props.stages\r\n    const positionRef = useRef()\r\n    const sliderBoxHeightRef = useRef()\r\n    const [position, setPosition] = useState(0)\r\n    const [sliderBoxHeight, setSliderBoxHeight] = useState(0)\r\n    positionRef.current = position\r\n    sliderBoxHeightRef.current = sliderBoxHeight\r\n    const mousewheel = event =>{\r\n        console.log('mousewheel');\r\n        // console.log(positionRef.current);\r\n        if (event.deltaY < 0 && positionRef.current < 0) {\r\n            console.log('scrolling up');\r\n            console.log(positionRef.current);\r\n            setPosition(prevPosition => prevPosition + 12)\r\n        }\r\n        if ((event.deltaY > 0) && ((sliderBoxHeightRef.current + positionRef.current) > 0)  ) {\r\n            console.log('scrolling down');\r\n            console.log(positionRef.current);\r\n            console.log(sliderBoxHeightRef.current);\r\n            console.log(sliderBoxHeightRef.current + positionRef.current);\r\n            setPosition(prevPosition => prevPosition - 12) \r\n        } \r\n        // if (event.deltaY < 0  ) {\r\n        //     console.log('scrolling up');\r\n        //     setPosition(prevPosition => prevPosition + 50)\r\n        // }\r\n        // if ((event.deltaY > 0)  ) {\r\n        //     console.log('scrolling down');\r\n        //     setPosition(prevPosition => prevPosition - 50) \r\n        // } \r\n       \r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('mousewheel',mousewheel)\r\n\r\n        return () => {\r\n            window.addEventListener('mousewheel',mousewheel)\r\n        }\r\n    },[])\r\n    useEffect(()=>{\r\n        // console.log('useEffect clientHeight');\r\n        const clientHeight = document.getElementById('sliderBoxv').clientHeight\r\n        setSliderBoxHeight(clientHeight)\r\n        // console.log(clientHeight);\r\n    })\r\n    return (\r\n        <div className='c-verticalCarousel-box'\r\n        id=\"sliderBoxv\"\r\n            style={{transform:`translate( -50%, calc(${position}px - 5rem)  )`}}\r\n        >\r\n            {stages.length > 0 && (\r\n                stages.map(stage=>(\r\n                    <div key={stage.id} className=\"c-verticalCarousel-element\">\r\n                        <h1 className=\"c-glitch c-verticalCarousel-glich\" \r\n                            data-text={stage.stage} >{stage.stage}\r\n                        </h1>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerticalCarousel\r\n","D:\\develop-react\\blog-app\\src\\components\\postDetail\\LocationArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\PostsArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\landing\\StagesArea.jsx",["764","765"],"D:\\develop-react\\blog-app\\src\\index.js",[],"D:\\develop-react\\blog-app\\src\\reducks\\posts\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Footer.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocationDetail.jsx",["766","767","768","769"],"import React,{useEffect,useState,useCallback} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getLocations} from  '../reducks/locations/selectors'\r\nimport {getStages} from '../reducks/stage/selectors'\r\nimport {fetchLocatins} from '../reducks/locations/operators'\r\nimport {LocationInPosts} from '../components/locationMap/index'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nconst useStyles = makeStyles((theme) => ({\r\n    accordion:{\r\n        width:'100%',\r\n    },\r\n    summary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        flexFlow:'row wrape',\r\n        alignItems:'center',\r\n        padding:'0 .8rem',\r\n        [theme.breakpoints.down('sm')]:{\r\n            justifyContent:'flex-start',\r\n            flexDirection:'column'\r\n        },\r\n        [theme.breakpoints.up('sm')]:{\r\n            justifyContent:'space-between',\r\n            flexDirection:'row'\r\n        }\r\n    },\r\n    stageImage:{\r\n        width:'auto',\r\n        height:'100%',\r\n        display:'block',\r\n        marginRight:'1.6rem'\r\n    },\r\n    heading:{\r\n        color:'rgba(0, 0, 0, 0.8)',\r\n    },\r\n    subHeading:{\r\n        color:'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    video:{\r\n        width:'300px',\r\n        height:'200px',\r\n        overflow:'hidden'\r\n    }\r\n}))\r\n\r\nconst LocationDetail = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const locations = getLocations(selector)\r\n    \r\n    let id = window.location.pathname.split('/location/detail')[1]\r\n    if(id !== ''){\r\n        id = id.split('/')[1]\r\n    }\r\n    const selectLocationsById = useCallback((id)=>{\r\n        if(id !==''){\r\n            return locations.filter(location=> location.id === id)\r\n        } else{\r\n            return locations\r\n        }\r\n    },[id])\r\n    \r\n    useEffect(()=>{\r\n        dispatch(fetchLocatins()) \r\n    },[])\r\n    return (\r\n        <div className=\"l-container\">\r\n            <div className=\"l-section\">\r\n                {selectLocationsById(id).map(selectLocation=>(\r\n                    <Accordion className={classes.accordion} key={selectLocation.id}>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            {/* <div>\r\n                                <h1>{selectLocation.name}</h1>\r\n                                <p>{selectLocation.address}</p>\r\n                            </div> */}\r\n                            <div className={classes.summary}>\r\n                                <div>\r\n                                    <h4 className={classes.heading}>{selectLocation.name}</h4>\r\n                                    <div className={classes.subHeading}>\r\n                                        <span classNmae=\".h4\">住所：{selectLocation.address}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <video  muted controls className={classes.video}>\r\n                                        <source src={selectLocation.images[0].path} type=\"video/mp4\" />\r\n                                    </video>\r\n                                </div>\r\n                            </div>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                           <LocationInPosts id={selectLocation.id} />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationDetail\r\n","D:\\develop-react\\blog-app\\src\\reducks\\stage\\operators.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBoxLocations.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\StageListGridLine.jsx",["770","771"],"import React,{useEffect} from  'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {push} from 'connected-react-router'\r\nimport {fetchStages} from '../reducks/stage/operators'\r\nimport {getStages} from '../reducks/stage/selectors'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport{PostsInStage} from '../components/stage/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      padding:'8px 0'\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap', \r\n      width: '100%',\r\n    },\r\n    heading:{\r\n        color:'rgba(0, 0, 0, 0.8)',\r\n    },\r\n    subHeading:{\r\n        color:'rgba(0, 0, 0, 0.5)'\r\n    },\r\n    accordion:{\r\n        width:'100%',\r\n    },\r\n    summary:{\r\n        width:'100%',\r\n        height:'100px',\r\n        display:'flex',\r\n        flexFlow:'row wrape',\r\n        justifyContent:'space-between',\r\n        alignItems:'center',\r\n        padding:'0 .8rem' \r\n    },\r\n    stageImage:{\r\n        width:'auto',\r\n        height:'100%',\r\n        display:'block',\r\n        marginRight:'1.6rem'\r\n    }\r\n  }));\r\n\r\nconst StageListGridLine = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const selector = useSelector((state) => state)\r\n    const stages = getStages(selector)\r\n\r\n    useEffect(()=> {\r\n        dispatch(fetchStages())    \r\n    },[])  \r\n\r\n    return ( \r\n        <div className=\"l-container \">\r\n            <div className=\"l-section \">\r\n                    { stages.length > 0 &&(\r\n                        stages.map(stage => (\r\n                            <Accordion className={classes.accordion} key={stage.id}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                >\r\n                                    <div className={classes.summary}>\r\n                                        <div>\r\n                                            <div className={classes.subHeading}>\r\n                                                <span className=\".h4\">STAGE{stage.stageNo}-</span>\r\n                                                <span className=\"p\">{stage.stageYear}</span>\r\n                                            </div>\r\n                                            <h4 className={classes.heading}>{stage.stage}</h4>\r\n                                        </div>\r\n                                        <img src={stage.images[0].path} alt=\"\" className={classes.stageImage}/>\r\n                                    </div>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <PostsInStage stage={stage}/> \r\n                                </AccordionDetails>\r\n                            </Accordion> \r\n                        ))\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StageListGridLine \r\n\r\n","D:\\develop-react\\blog-app\\src\\reducks\\locations\\actions.js",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\SimplePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\locations\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\stage\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\about\\TimelineSection.jsx",["772"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nconst useStyles = makeStyles((theme) => ({\r\n    // paper: {\r\n    //   padding: '6px 16px',\r\n    // },\r\n    // secondaryTail: {\r\n    //   backgroundColor: theme.palette.secondary.main,\r\n    // },\r\n    dateColor:{\r\n        color:'grey'\r\n    }\r\n  }));\r\nconst histories = [\r\n    {id:'200901',date:'2009',name:'TOURdeHDR First generation',variant:'default', color:'primary',link:'http://tourdehrd.blog62.fc2.com/'},\r\n    {id:'201301',date:'2013',name:'TOURdeHDR+ Second generation',variant:'default', color:'primary', link:'http://tourdehdr.sakuratan.com/site2/'},\r\n    {id:'201501',date:'2013-15',name:'TOURdeHDR+ Gallery 2013-15',variant:'default', color:'primary', link:'http://tourdehdr.sakura.ne.jp/web3/tourdehdr_web3/'},\r\n    {id:'201601',date:'2016',name:'TOURdeHDR+ Gallery',variant:'outlined', color:'default', link:'http://tourdehdr.sakura.ne.jp/web3/cyber-shot-gallery/'},\r\n    {id:'201602',date:'2016',name:'TOURdeHDR+ AWARD 2016',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/cyber-shot-gallery/nomi.html'},\r\n    {id:'201701',date:'2017',name:'TOURdeHDR+ Gallery',variant:'outlined', color:'default', link:'http://tourdehdr.sakura.ne.jp/web3/tourdehdr-gallery2017/index.html'},\r\n    {id:'201702',date:'2017',name:'TOURdeHDR+ AWARD 2017',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/digest2017/#/'},\r\n    {id:'201801',date:'2018',name:'TOURdeHDR+ AWARD Gallery',variant:'outlined', color:'secondary', link:'http://tourdehdr.sakura.ne.jp/web3/bgvideo-2018/#/'},\r\n    {id:'202001',date:'2020',name:'h-works Third generation',variant:'default', color:'primary', link:'https://tourdehdr3.netlify.app/'},\r\n    {id:'202101',date:'2021',name:'h-works 4th generation',variant:'default', color:'primary', link:'https://blog-app-4302d.web.app/'},\r\n]\r\n\r\nconst TimelineSection = props => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className=\"c-timeline-wraper\">\r\n            <h5>HISTORY</h5>\r\n            <Timeline align=\"alternate\">\r\n                {histories.map(history=>(\r\n                    <TimelineItem key={history.id}>\r\n                        <TimelineOppositeContent>\r\n                            <Typography >{history.date}</Typography>\r\n                        </TimelineOppositeContent>\r\n                        <TimelineSeparator>\r\n                            <TimelineDot variant={history.variant} color={history.color}/>\r\n                            <TimelineConnector />\r\n                        </TimelineSeparator>\r\n                        <TimelineContent >\r\n                            <Typography>\r\n                                <Link href={history.link}  target=\"_blank\" color=\"inherit\">\r\n                                    {history.name} \r\n                                </Link>\r\n                            </Typography>\r\n                        </TimelineContent>\r\n                    </TimelineItem>\r\n                ))}\r\n            </Timeline>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TimelineSection\r\n","D:\\develop-react\\blog-app\\src\\components\\instagram\\index.js",[],"D:\\develop-react\\blog-app\\src\\components\\UiKit\\SelectBox.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\post\\AddImagesUpload.jsx",["773"],"import React,{useCallback} from 'react'\r\nimport { storage } from \"../../firebase/index\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: 8,\r\n        height: 48,\r\n        width: 46\r\n    }\r\n}))\r\n\r\nconst AddImagesUpload = props => {\r\n    const classes = useStyles()\r\n    const uploadImage = useCallback((event) => {\r\n        const file = event.target.files;\r\n        //アップロードするにはBlogオブジェクトに変換する必要がある\r\n        //image type: \"image/jpeg\" video type: \"video/mp4\"\r\n        let blob = new Blob(file, { type: \"image/jpeg\" });\r\n\r\n        // Generate random 16 digits strings \r\n        // クラウドストレージにアップするためにファイ名が重複しないように１６桁のファイル名をランダム生成する\r\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n        const N=16;\r\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\r\n\r\n        //firebase storageのimageフォルダーにアップロードする\r\n        const uploadRef = storage.ref('images').child(fileName);\r\n        const uploadTask = uploadRef.put(blob);\r\n        //firebase storegeの画像ファイルのURLを取得する\r\n        uploadTask.then(() => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                // dispatch(hideLoadingAction())\r\n                const newImage = { id: fileName, path: downloadURL, description: '', instagram:'', twitter:'' };\r\n                if (props.Multiple) {\r\n                    props.setImages((prevState => [...prevState, newImage])) //追加する場合の書き方\r\n                } else {\r\n                    props.setImages([newImage])\r\n                }\r\n            });\r\n        }).catch((e) => {\r\n            // dispatch(hideLoadingAction())\r\n            console.log(e)\r\n\r\n        });\r\n    }, [props.setImages])\r\n    return (\r\n        <div>\r\n            <span className=\"p\">{props.title}</span>\r\n            <IconButton className={classes.icon}>\r\n                    <label>\r\n                        <AddPhotoAlternateIcon fontSize=\"large\"/>\r\n                        <input className=\"u-display-none\"\r\n                            type=\"file\"\r\n                            id=\"image\"\r\n                            accept={\"image/jpeg\"}\r\n                            onChange={(event) => uploadImage(event)}\r\n                        />\r\n                    </label>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddImagesUpload\r\n","D:\\develop-react\\blog-app\\src\\components\\post\\PostListCard.jsx",["774"],"import React,{ useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoImage from '../../assets/img/no_image.jpg'\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { deletePost } from '../../reducks/posts/operators'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: 8,\r\n            width: 'calc(50% - 16px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: 16,\r\n            width: 'calc(33.3333% - 32px)'\r\n        },\r\n    },\r\n    // content: {\r\n    //     display: 'flex',\r\n    //     padding: '16px 8px',\r\n    //     textAlign: 'left',\r\n    //     '&:last-child': {\r\n    //         paddingBottom: 16\r\n    //     }\r\n    // },\r\n    media: {\r\n        height: 200,\r\n        width:'auto'\r\n    },\r\n    // icon: {\r\n    //     marginRight: 0,\r\n    //     marginLeft: 'auto'\r\n    // }\r\n\r\n})) \r\nconst PostListCard = props => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n   \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const topImages = props.topImages\r\n    // const topImages = (props.topImages.length > 0 ? props.images : [{ path: NoImage }])\r\n    // const postImages = (props.postImages.length > 0 ? props.images : [{ path: NoImage }])\r\n\r\n    return (\r\n        <div>\r\n            {/* <PostListCard key={post.id}\r\n                            id={post.id} title={post.title} article={post.article}\r\n                            postDate={post.postDate} type={post.type}\r\n                            topImages={postImages} postImages={post.postImages}\r\n                        /> */}\r\n            <Card className={classes.root}>\r\n                 {/* id={stage.id} sort={stage.sort}\r\n                            stage={stage.stage} stageNo={stage.stageNo} stageYear={stage.stageYear}\r\n                            images={stage.images} */}\r\n                <CardMedia className={classes.media}\r\n                    image={topImages[0].path}\r\n                    // title={topImages[0].description}\r\n                    // onClick={() => dispatch(push('/post/' + props.id))}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {props.title}\r\n                    </Typography>\r\n                    {/* <Typography>\r\n                        {props.stageYear} STAGE-{props.stageNo}\r\n                    </Typography> */}\r\n                </CardContent>\r\n            </Card>\r\n            <IconButton onClick={handleClick}>\r\n                <MoreVertIcon></MoreVertIcon>\r\n            </IconButton>\r\n            <Menu \r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClick={handleClose}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                        dispatch(push('/post/edit/' + props.id))\r\n                        handleClose()\r\n                }}>\r\n                    編集する\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                        dispatch(deletePost(props.id))\r\n                        handleClose()\r\n                }}>\r\n                    削除する\r\n                </MenuItem>\r\n            </Menu >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default PostListCard\r\n","D:\\develop-react\\blog-app\\src\\templates\\LandingRoot.jsx",["775","776","777","778","779"],"D:\\develop-react\\blog-app\\src\\templates\\About.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\ComponentTransitionTest.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\reactCurtains\\MultipleplanesUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\stage\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\components\\location\\VideoArea.jsx",[],"D:\\develop-react\\blog-app\\src\\components\\postDetail\\index.js",[],"D:\\develop-react\\blog-app\\src\\templates\\GreenSockTest.jsx",[],"D:\\develop-react\\blog-app\\src\\firebase\\config.js",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsSelectiveRenderTargets.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\users\\selectors.js",[],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainesSimplePlane.jsx",[],"D:\\develop-react\\blog-app\\src\\reducks\\tags\\reducers.js",[],"D:\\develop-react\\blog-app\\src\\templates\\Top.jsx",["780","781"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap,power2} from 'gsap'\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    topWraper:{\r\n        color:'white' \r\n    },\r\n    header:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:red[500],\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    stages:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:blueGrey[500],\r\n    },\r\n    posts:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:lightGreen[500],\r\n    },\r\n    other:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        backgroundColor:purple[500],\r\n    }\r\n}))\r\n\r\nconst Top = () => {\r\n    const classes = useStyles()\r\n    const header = useRef(null)\r\n    const stages = useRef(null)\r\n    const posts = useRef(null)\r\n    const other = useRef(null)\r\n    useEffect(()=>{\r\n        // let tl = gsap.timeline()\r\n        gsap.fromTo(stages.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:stages.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n        gsap.fromTo(posts.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:posts.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n        gsap.fromTo(other.current,\r\n            { autoAlpha:0 },\r\n            { duration:1,autoAlpha:1,ease:'\"power2.out\"',\r\n                scrollTrigger:{trigger:other.current,start:`top center+=100`,\r\n                toggleActions:`play none none reverse`}\r\n            }\r\n        )\r\n    },[])\r\n    return (\r\n        <div className={classes.topWraper}>\r\n            <div ref={header} className={classes.header}>header</div>\r\n            <div ref={stages} className={classes.stages}>stages</div>\r\n            <div ref={posts} className={classes.posts}>posts</div>\r\n            <div ref={other} className={classes.other}>other</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top\r\n","D:\\develop-react\\blog-app\\src\\templates\\HomeBlog.jsx",["782","783","784"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // topWraper:{\r\n    //     color:'white'\r\n    // },\r\n    header:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:red[500],\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        border:'1px solid white'\r\n    },\r\n    stages:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:blueGrey[500],\r\n        border:'1px solid white'\r\n    },\r\n    posts:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:lightGreen[500],\r\n        border:'1px solid white'\r\n    },\r\n    other:{\r\n        width:'100%',\r\n        height:'100vh',\r\n        // backgroundColor:purple[500],\r\n        border:'1px solid white'\r\n    }\r\n    // ourMission:{\r\n    //     width:'100%',\r\n    //     height:'2000px',\r\n    //     backgroundColor:blueGrey[500],\r\n    //     border:'1px solid red'\r\n    // },\r\n    // gridContainer:{\r\n    //     height: '100%',\r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    // },\r\n    // titleContainer:{\r\n    //     display: 'flex',\r\n    //     border:'1px solid yellow'\r\n\r\n    // },\r\n}))\r\n\r\n\r\nconst HomeBlog = () => {\r\n    const classes = useStyles()\r\n    const content = useRef(null)\r\n    const header = useRef(null)\r\n    const stages = useRef(null)\r\n    const posts = useRef(null)\r\n    const other = useRef(null)\r\n    // const ourMission = useRef(null)\r\n    // const titleContainer = useRef(null)\r\n    useEffect(()=>{\r\n\r\n       \r\n        const colorChangeHeader = gsap.fromTo(content.current, \r\n            { backgroundColor: red[100] },\r\n            { backgroundColor: red[500] })\r\n\r\n        ScrollTrigger.create({\r\n            trigger: header.current,\r\n            start: \"top-=500px top+=200px\",\r\n            end: \"bottom+=300 bottom-=300px\",\r\n            // start: \"buttom buttom\",\r\n            // end: \"botto+=100 center\",\r\n            scrub: true,\r\n            animation: colorChangeHeader,\r\n            markers:true,\r\n        });\r\n        // const colorChangePosts = gsap.fromTo(content.current, \r\n        //     { backgroundColor: red[500] },\r\n        //     { backgroundColor: blueGrey[500] })\r\n\r\n        // ScrollTrigger.create({\r\n        //     scroller: content.current,\r\n        //     trigger: stages.current,\r\n        //     start: \"top-=500px top+=200px\",\r\n        //     end: \"bottom+=300 bottom-=300px\",\r\n        //     // start: \"buttom buttom\",\r\n        //     // end: \"center center\",\r\n        //     scrub: true,\r\n        //     animation: colorChangePosts,\r\n        //     markers:true,\r\n        // });\r\n        \r\n        // .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        // .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        // .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n        // gsap.fromTo(content.current, \r\n        //     {   backgroundColor:red[200]}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:red[800], \r\n        //         ease:\"linear\", \r\n        //         // markers:true,\r\n        //         // start:\"bottom 50%\",\r\n        //         scrollTrigger: {\r\n        //             trigger: content.current,\r\n        //             start:\"center 50%\", //when top of herman passes 75% viewport height\r\n        //             end:\"bottom 0%\", //when bottom of herman passes 25% viewport height\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(header.current, \r\n        //     {   backgroundColor:red[500]}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:red[500], \r\n        //         ease:\"linear\", \r\n        //         // markers:true,\r\n        //         // start:\"top 50%\",\r\n        //         scrollTrigger: {\r\n        //             trigger: header.current,\r\n        //             // start:\"top top\", //when top of herman passes 75% viewport height\r\n        //             // end:\"bottom 0%\", //when bottom of herman passes 25% viewport height\r\n        //             toggleActions:`play none none reverse`,\r\n        //             // markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(stages.current, \r\n        //     {   backgroundColor:red[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:blueGrey[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: stages.current,\r\n        //             start:\"top 50%\", \r\n        //             // end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(posts.current, \r\n        //     {   backgroundColor:blueGrey[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:lightGreen[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: posts.current,\r\n        //             start:\"top 50%\", \r\n        //             // end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // gsap.fromTo(other.current, \r\n        //     {   backgroundColor:lightGreen[500],}, \r\n        //     {   duration: 1, \r\n        //         backgroundColor:purple[500], \r\n        //         ease:\"linear\", \r\n        //         scrollTrigger: {\r\n        //             trigger: other.current,\r\n        //             start:\"top 50%\", \r\n        //             end:\"bottom 0%\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             // markers:true,\r\n        //         }\r\n        //     }\r\n        // )\r\n        // const colorChange = gsap.fromTo(ourMission.current, \r\n        //     { backgroundColor: \"white\" },\r\n        //     { backgroundColor: \"#232E3E\" })\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: titleContainer.current,\r\n        //     start: \"top-=500px top+=200px\",\r\n        //     end: \"bottom+=300 bottom-=300px\",\r\n        //     scrub: true,\r\n        //     animation: colorChange,\r\n        //     markers:true,\r\n        // });\r\n\r\n        // const colorToWhite= gsap.fromTo(ourMission.current, \r\n        //     { backgroundColor: \"#232E3E\" },\r\n        //     { backgroundColor: \"#ffffff\" })\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: titleContainer.current,\r\n        //     start: \"bottom top+=200px\",\r\n        //     end: \"+=500px\",\r\n        //     scrub: true,\r\n        //     animation: colorToWhite,\r\n        //     markers:true,\r\n        // });\r\n        // const tl = gsap.timeline({\r\n        //     scrollTrigger: {\r\n        //     trigger: container.current,\r\n        //     pin: true,\r\n        //     scrub: true,\r\n        //     end: () => container.current.offsetWidth\r\n        //   }\r\n        // })\r\n        // tl\r\n        // .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        // .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        // .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n    },[])\r\n    return (\r\n        <div className={classes.topWraper} ref={content}>\r\n            <div ref={header} className={classes.header}>\r\n                header 1\r\n            </div>\r\n            <div ref={stages} className={classes.stages}>\r\n                stages 2\r\n            </div>\r\n            <div ref={posts} className={classes.posts}>\r\n                posts 3\r\n            </div>\r\n            <div ref={other} className={classes.other}>\r\n                other 4\r\n            </div>\r\n        </div>\r\n        // <div className={classes.ourMission} ref={ourMission}>\r\n        //     <div className={classes.gridContainer}>\r\n        //         {/* <div className=\"grid-x grid-margin-x align-center overflow-hidden title-container\"> */}\r\n        //         <div className={classes.titleContainer} ref={titleContainer}>\r\n        //             <div className=\"cell medium-4 title-container\">\r\n        //                 <h2 className=\"heading h2 light\">Our<br />mission</h2>\r\n        //             </div>\r\n        //             <div className=\"cell medium-6\">\r\n        //                 <p className=\"heading h4 light\">On the ground in about 170 countries and territories, UNDP works to eradicate poverty while protecting the planet. We help countries develop strong policies, skills, partnerships and institutions so they can sustain their progress.</p>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default HomeBlog \r\n","D:\\develop-react\\blog-app\\src\\templates\\ScrollTriggerHorizontal.jsx",["785","786","787","788"],"import React,{useRef,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content:{\r\n        width:'100vw',\r\n        height:'100vh',\r\n        overflow:'hidden',\r\n        border:'1px solid blue'\r\n    },\r\n    container: {\r\n        width: '600%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: '#ADD8E6',\r\n        // backgroundColor: 'lightblue',\r\n        border:'1px solid green'\r\n\r\n      },\r\n      panel: {\r\n        position: 'relative',\r\n        color: 'black',\r\n        width:'100vw',\r\n        border:'1px solid red'\r\n      },\r\n      extra: {\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        backgroundColor: 'white',\r\n        height: '20vh',\r\n      },\r\n      \r\n      \r\n}))\r\n\r\nconst ScrollTriggerHorizontal = () => {\r\n    const classes = useStyles()\r\n    const container = useRef(null)\r\n    const sections = useRef([])\r\n    const addToRefs = el => {\r\n\r\n        console.log('addToRefs');\r\n        console.log(el);\r\n        if(el && !sections.current.includes(el)){\r\n            sections.current.push(el)\r\n            console.log(sections.current);\r\n            console.log(sections.current.el);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        const tl = gsap.timeline({\r\n            scrollTrigger: {\r\n            trigger: container.current,\r\n            pin: true,\r\n            scrub: true,\r\n            end: () => container.current.offsetWidth\r\n          }\r\n        })\r\n        tl\r\n        .to(sections.current, { duration: 2, xPercent: -100 * (sections.length - 1), ease: \"none\" })\r\n        .to(container.current, { duration: 1, backgroundColor: '#FF0000', ease: \"none\" }, 0)\r\n        .to(container.current, { duration: 1, backgroundColor: '#0000FF', ease: \"none\" }, 1)\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.extra}>\r\n            <p>scroll down</p>\r\n            </div>\r\n\r\n            <div className={classes.container} ref={container}>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    ONE\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    TWO\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    THREE\r\n                </section>\r\n                <section className={classes.panel} ref={addToRefs}>\r\n                    FOUR\r\n                </section>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ScrollTriggerHorizontal\r\n\r\n// https://codepen.io/akapowl/pen/ff7dabf8f0946c406bdc61487b4f3f04\r\n// 2021.4.13 removal animation-page","D:\\develop-react\\blog-app\\src\\templates\\GsapChengeBackgroundColor.jsx",["789","790","791","792","793","794","795"],"import React,{useRef,useEffect,useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {gsap} from 'gsap'\r\nimport {ScrollTrigger} from 'gsap/ScrollTrigger' \r\nimport LocomotiveScroll from 'locomotive-scroll'\r\n\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    body:{\r\n        fontFamily: 'termina, sans-serif',\r\n        // color: var(--text-color),\r\n        // background: var(--bg-color),\r\n        // transition: '0.3s ease-out',\r\n        transition: '1s ease-out',\r\n        overflowX: 'hidden',\r\n        color:'white'\r\n    },\r\n    \r\n    section: {\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        position: 'relative',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n        gridGap: '2rem',\r\n        padding: '50px 10vw',\r\n        maxWidth: '1000px',\r\n        margin: 'auto',\r\n        placeItems: 'center',\r\n        border:'1px solid black'\r\n    },\r\n    \r\n    img:{\r\n        maxHeight: '80vh',\r\n        width: '100%',\r\n        objectFit: 'contain',\r\n        section:{\r\n            'first-child': {\r\n                position: 'absolute'\r\n            }\r\n        }\r\n    },\r\n    h1:{\r\n        display: 'flex',\r\n        fontSize: '4rem',\r\n        zIndex: 2,\r\n        lineHeight: 1.2,\r\n        fontWeight: 700,\r\n        // @media (max-width: 768px) {\r\n        //     font-size: 2rem,\r\n        // }\r\n        [theme.breakpoints.down('sm')]: {  \r\n            fontSize: '2rem',\r\n        },\r\n        border:'1px solid grey'\r\n    },\r\n    h2:{\r\n        fontSize: '2rem',\r\n        maxWidth: '400px',\r\n        border:'1px solid grey'\r\n    }\r\n}))\r\n\r\nconst GsapChengeBackgroundColor = () => {\r\n    const classes = useStyles()\r\n    const [color, setColor] = useState({\r\n        testColor:'',\r\n        bgColor:''\r\n    })\r\n   const bodyRef = useRef(null)\r\n   const containerRef = useRef(null)\r\n   const sectionElements = [\r\n            {   id:1,\r\n                img:\"https://images.pexels.com/photos/3062948/pexels-photo-3062948.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n                // dataBgcolor:\"#bcb8ad\",\r\n                dataBgcolor:\"green\",\r\n                dataTextcolor:\"#032f35\"},\r\n            {   id:2,\r\n                img:\"https://images.pexels.com/photos/4467879/pexels-photo-4467879.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n                // dataBgcolor:\"#eacbd1\",\r\n                dataBgcolor:\"red\",\r\n                dataTextcolor:\"#536fae\"},\r\n            {   id:3,\r\n                img:\"https://images.pexels.com/photos/5604966/pexels-photo-5604966.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n                // dataBgcolor:\"#536fae\",\r\n                dataBgcolor:\"yellow\",\r\n                dataTextcolor:\"#eacbd1\"},\r\n            {   id:4,\r\n                img:\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n                // dataBgcolor:\"#e3857a\",\r\n                dataBgcolor:\"grey\",\r\n                dataTextcolor:\"#f1dba7\"},\r\n   ]\r\n\r\n   const sectionRefs = useRef([])\r\n    sectionRefs.current = []\r\n    // セクションへのすべての参照をsectionRefs.current配列に追加する\r\n    const addToRefs = el => {\r\n        // console.log('addToRefs');\r\n        \r\n        if(el && !sectionRefs.current.includes(el)){\r\n            sectionRefs.current.push(el)\r\n            console.log('addToRefs el',el);\r\n            console.log(el.dataset.bgcolor);\r\n            console.log('sectionRefs.current',sectionRefs.current);\r\n        }\r\n    }\r\n    \r\n\r\n   useEffect(()=>{\r\n    /* SMOOTH SCROLL */\r\n    const scroller = new LocomotiveScroll({\r\n        el:containerRef.current,\r\n        smooth: true\r\n      });\r\n      console.log('scroller',scroller);\r\n      scroller.on(\"scroll\", ScrollTrigger.update);\r\n      //特定のスクローラー要素のscrollTopおよび/またはscrollLeftゲッター/セッターをハイジャックして、\r\n      //スムーズなスクロールやその他のカスタム効果などを実装できるようにします。\r\n      ScrollTrigger.scrollerProxy(containerRef.current, {\r\n        scrollTop(value) {\r\n          return arguments.length//arguments.length プロパティは、関数に渡された引数の数が入ります。\r\n            ? scroller.scrollTo(value, 0, 0)\r\n            : scroller.scroll.instance.scroll.y;\r\n        },\r\n        //Element.getBoundingClientRect() メソッドは、要素の寸法と、そのビューポートに対する位置を返します。\r\n        getBoundingClientRect() {\r\n          return {\r\n            left: 0,\r\n            top: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n          };\r\n        }\r\n      });\r\n      //次のイベントのいずれかのリスナーを追加します：「scrollStart」、「scrollEnd」、「refreshInit」、「revert」、「matchMedia」、\r\n      //または「refresh」。これらは、そのようなScrollTrigger関連のイベントが発生したときにグローバルにディスパッチされます\r\n      ScrollTrigger.addEventListener(\"refresh\", () => scroller.update());\r\n      //ページ上のすべてのScrollTriggersの位置を再計算します\r\n      ScrollTrigger.refresh();\r\n    \r\n    /* COLOR CHANGER */\r\n    sectionRefs.current.forEach((el,i)=> {\r\n        console.log('useEffect');\r\n        console.log('sectionRefs.current',sectionRefs.current);\r\n        console.log('el',el);\r\n        const scrollColorElems = el.dataset.bgcolor\r\n        console.log('scrollColorElems', scrollColorElems)\r\n        //前のセクションの背景色を保持\r\n        const prevBg = i === 0 ? \"\" : sectionRefs.current[i - 1].dataset.bgcolor;\r\n        const prevText = i === 0 ? \"\" :sectionRefs.current[i - 1].dataset.textcolor;\r\n        console.log('bodyRef',bodyRef);\r\n        console.log('containerRef',containerRef);\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: el,\r\n        //     // scroller: el,\r\n        //     start: \"top 50%\",\r\n        //     onEnter: () =>\r\n        //       gsap.to(el, {\r\n        //         backgroundColor: el.dataset.bgcolor,\r\n        //         color: el.dataset.textcolor,\r\n        //         overwrite: \"auto\"\r\n        //     }),\r\n        //     onLeaveBack: () =>\r\n        //       gsap.to(el, {\r\n        //         backgroundColor: prevBg,\r\n        //         color: prevText,\r\n        //         overwrite: \"auto\"\r\n        //     })\r\n        // });\r\n\r\n        ScrollTrigger.create({\r\n            trigger: el,\r\n            // scroller: containerRef.current,\r\n            start: \"top 50%\",\r\n            onEnter: () =>\r\n              gsap.to(bodyRef.current, {\r\n                backgroundColor: el.dataset.bgcolor,\r\n                color: el.dataset.textcolor,\r\n                overwrite: \"auto\",\r\n                marker:true,\r\n            }),\r\n            onLeaveBack: () =>\r\n              gsap.to(bodyRef.current, {\r\n                backgroundColor: prevBg,\r\n                color: prevText,\r\n                overwrite: \"auto\",\r\n                marker:true,\r\n            }),\r\n            \r\n        });\r\n\r\n        // gsap.fromTo(el,\r\n        //     { autoAlpha:0},\r\n        //     { duration:1,\r\n        //         autoAlpha:1,\r\n        //         ease:'none',\r\n        //         scrollTrigger:{\r\n        //             id:`section-${index+1}`,\r\n        //             trigger:el,\r\n        //             start:`top center+=100`,\r\n        //             // end: \"center top\",\r\n        //             toggleActions:`play none none reverse`,\r\n        //             markers: true,\r\n        //             pin: false, \r\n        //         }\r\n        //     }\r\n        // )\r\n        // const colorChangeHeader = gsap.fromTo(el, \r\n        //     { backgroundColor: red[500] },\r\n        //     { backgroundColor: blueGrey[500] })\r\n\r\n        // ScrollTrigger.create({\r\n        //     trigger: el,\r\n        //     start: \"top 50%\",\r\n        //     end: \"bottom+=300 bottom-=300px\",\r\n        //     // start: \"buttom buttom\",\r\n        //     // end: \"botto+=100 center\",\r\n        //     scrub: true,\r\n        //     animation: colorChangeHeader,\r\n        //     markers:true,\r\n        // });\r\n    })\r\n   },[sectionRefs.current,containerRef.current,bodyRef.current])\r\n    return (\r\n        <div className={classes.body} ref={bodyRef}>\r\n            <div className='container' ref={containerRef}>\r\n                {sectionElements.map(element =>(\r\n                    <section data-bgcolor={element.dataBgcolor} \r\n                        data-textcolor={element.dataTextcolor} \r\n                        className={classes.section} \r\n                        key={element.id}\r\n                        ref={addToRefs}\r\n                    >\r\n                        <h1 data-scroll data-scroll-speed=\"3\" className={classes.h1}>\r\n                            Change background colour with GSAP ScrollTrigger\r\n                        </h1>\r\n                        <img src={element.img} \r\n                            alt=\"\" \r\n                            className={classes.img}/>\r\n                    </section>\r\n                ))}\r\n                {/* <section data-bgcolor=\"#bcb8ad\" data-textcolor=\"#032f35\" className={classes.section}>\r\n                    <h1 data-scroll data-scroll-speed=\"3\" className={classes.h1}>\r\n                        Change background colour with GSAP ScrollTrigger\r\n                    </h1>\r\n                    <img src=\"https://images.pexels.com/photos/3062948/pexels-photo-3062948.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" \r\n                         alt=\"\" \r\n                         className={classes.img}/>\r\n                </section>\r\n                <section data-bgcolor=\"#eacbd1\" data-textcolor=\"#536fae\" className={classes.section}>\r\n                    <img src=\"https://images.pexels.com/photos/4467879/pexels-photo-4467879.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" \r\n                         alt=\"\" \r\n                         className={classes.img}\r\n                    />\r\n                    <h2 data-scroll data-scroll-speed=\"1\" className={classes.h2}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    </h2>\r\n                </section>\r\n                <section data-bgcolor=\"#536fae\" data-textcolor=\"#eacbd1\" className={classes.section}>\r\n                    <img src=\"https://images.pexels.com/photos/5604966/pexels-photo-5604966.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" \r\n                         alt=\"\" \r\n                         className={classes.img}\r\n                    />\r\n                    <h2 data-scroll data-scroll-speed=\"1\" className={classes.h2}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    </h2>\r\n                </section>\r\n                <section data-bgcolor=\"#e3857a\" data-textcolor=\"#f1dba7\" className={classes.section}>\r\n                    <img src=\"https://images.pexels.com/photos/4791474/pexels-photo-4791474.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" \r\n                         alt=\"\" \r\n                         className={classes.img}\r\n                />\r\n                    <h2 data-scroll data-scroll-speed=\"1\" className={classes.h2}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    </h2>\r\n                </section> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GsapChengeBackgroundColor\r\n\r\n// https://codepen.io/cameronknight/pen/RwRebNY\r\n// Change background colour with GSAP ScrollTrigger\r\n// CodePen Home","D:\\develop-react\\blog-app\\src\\components\\post\\PostImagesArea.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\LocomotiveScrollSimpleTest.jsx",["796"],"import React,{useEffect,useRef} from 'react'\r\nimport locomotiveScroll from \"locomotive-scroll\";\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nconst useStyles = makeStyles((theme) => ({\r\n    body: {\r\n        margin: 0,\r\n        textAlign: 'center',\r\n        font: '900 120% system-ui, sans-serif',\r\n        backgroundColor:'white'\r\n      },\r\n      \r\n      section: {\r\n        height: '100vh',\r\n        display: 'grid',\r\n        placeItems: 'center',\r\n        border:'1px solid black',\r\n        color:'black'\r\n      }\r\n      \r\n    // App: {\r\n    //     textAlign: 'center',\r\n    //     color:'white'\r\n    //   },\r\n      \r\n    //   h1: {\r\n    //     margin: '500px 0 50px',\r\n    //   },\r\n      \r\n    //   scroll: {\r\n    //     padding: '0 0 200vh'\r\n    //   }\r\n}))\r\n\r\n\r\nconst LocomotiveScrollSimpleTest = () => {\r\n    const classes = useStyles()\r\n    const scrollRef = useRef()\r\n    useEffect(()=>{\r\n        const scroll = new locomotiveScroll({\r\n            el: scrollRef.current,\r\n            smooth: true\r\n          });\r\n        //   console.log(scroll);\r\n    },[])\r\n    return (\r\n        <div data-scroll-container ref={scrollRef} className={classes.body}>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h1 data-scroll>Hey</h1>\r\n                    <p data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"12\" style={{marginLeft: '20vw'}}>👋</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h2 data-scroll data-scroll-speed=\"1\">Looks like rain</h2>\r\n                    <p data-scroll data-scroll-speed=\"9\">🌧</p>\r\n                </div>\r\n            </div>\r\n            <div className={classes.section} data-scroll-section>\r\n                <div>\r\n                    <h2 data-scroll data-scroll-speed=\"1\">Have an apple</h2>\r\n                    <p data-scroll data-scroll-direction=\"horizontal\" data-scroll-speed=\"8\">🍎</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        // <div className={classes.App}>\r\n        //     <div className={classes.scroll} \r\n        //          ref={scrollRef} \r\n        //          >\r\n        //             <h1 className={classes.h1}\r\n        //                 data-scroll \r\n        //                 data-scroll-speed=\"3\" \r\n        //                 data-scroll-position=\"top\"\r\n        //             >\r\n        //                 Locomotive Scroll in React\r\n        //             </h1>\r\n        //             <h2\r\n        //             data-scroll\r\n        //             data-scroll-speed=\"1\"\r\n        //             data-scroll-position=\"top\"\r\n        //             data-scroll-direction=\"horizontal\"\r\n        //             >\r\n        //                 Go Sideways!!\r\n        //             </h2>  \r\n        //          </div>\r\n                \r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default LocomotiveScrollSimpleTest\r\n// 2021.4.14 removal animation-page \r\n\r\n","D:\\develop-react\\blog-app\\src\\templates\\GsapDynamicBackgroundColorHorizontal.jsx",["797","798"],"D:\\develop-react\\blog-app\\src\\templates\\ReactCurtainsMultipleplanesUsingGSAP.jsx",[],"D:\\develop-react\\blog-app\\src\\templates\\GsapHorizontal.jsx",["799","800","801"],"D:\\develop-react\\blog-app\\src\\templates\\GsapScrollingTrigerTest.jsx",["802","803","804"],{"ruleId":"805","severity":1,"message":"806","line":5,"column":8,"nodeType":"807","messageId":"808","endLine":5,"endColumn":15},{"ruleId":"809","severity":1,"message":"810","line":213,"column":8,"nodeType":"811","endLine":213,"endColumn":32,"suggestions":"812"},{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","replacedBy":"816"},{"ruleId":"805","severity":1,"message":"817","line":5,"column":8,"nodeType":"807","messageId":"808","endLine":5,"endColumn":12},{"ruleId":"809","severity":1,"message":"818","line":126,"column":7,"nodeType":"811","endLine":126,"endColumn":9,"suggestions":"819"},{"ruleId":"813","replacedBy":"820"},{"ruleId":"815","replacedBy":"821"},{"ruleId":"813","replacedBy":"822"},{"ruleId":"815","replacedBy":"823"},{"ruleId":"813","replacedBy":"824"},{"ruleId":"815","replacedBy":"825"},{"ruleId":"813","replacedBy":"826"},{"ruleId":"815","replacedBy":"827"},{"ruleId":"809","severity":1,"message":"818","line":21,"column":7,"nodeType":"811","endLine":21,"endColumn":9,"suggestions":"828"},{"ruleId":"809","severity":1,"message":"818","line":16,"column":7,"nodeType":"811","endLine":16,"endColumn":9,"suggestions":"829"},{"ruleId":"809","severity":1,"message":"818","line":14,"column":7,"nodeType":"811","endLine":14,"endColumn":9,"suggestions":"830"},{"ruleId":"813","replacedBy":"831"},{"ruleId":"815","replacedBy":"832"},{"ruleId":"805","severity":1,"message":"833","line":23,"column":16,"nodeType":"807","messageId":"808","endLine":23,"endColumn":22},{"ruleId":"805","severity":1,"message":"834","line":2,"column":8,"nodeType":"807","messageId":"808","endLine":2,"endColumn":13},{"ruleId":"805","severity":1,"message":"835","line":30,"column":15,"nodeType":"807","messageId":"808","endLine":30,"endColumn":29},{"ruleId":"805","severity":1,"message":"836","line":37,"column":13,"nodeType":"807","messageId":"808","endLine":37,"endColumn":16},{"ruleId":"809","severity":1,"message":"837","line":102,"column":7,"nodeType":"811","endLine":102,"endColumn":9,"suggestions":"838"},{"ruleId":"805","severity":1,"message":"839","line":1,"column":25,"nodeType":"807","messageId":"808","endLine":1,"endColumn":34},{"ruleId":"840","severity":1,"message":"841","line":24,"column":21,"nodeType":"842","endLine":24,"endColumn":69},{"ruleId":"813","replacedBy":"843"},{"ruleId":"815","replacedBy":"844"},{"ruleId":"809","severity":1,"message":"845","line":14,"column":7,"nodeType":"811","endLine":14,"endColumn":23,"suggestions":"846"},{"ruleId":"809","severity":1,"message":"845","line":19,"column":7,"nodeType":"811","endLine":19,"endColumn":21,"suggestions":"847"},{"ruleId":"813","replacedBy":"848"},{"ruleId":"815","replacedBy":"849"},{"ruleId":"805","severity":1,"message":"850","line":38,"column":11,"nodeType":"807","messageId":"808","endLine":38,"endColumn":26},{"ruleId":"809","severity":1,"message":"851","line":54,"column":32,"nodeType":"807","endLine":54,"endColumn":43},{"ruleId":"813","replacedBy":"852"},{"ruleId":"815","replacedBy":"853"},{"ruleId":"805","severity":1,"message":"854","line":1,"column":39,"nodeType":"807","messageId":"808","endLine":1,"endColumn":47},{"ruleId":"809","severity":1,"message":"855","line":62,"column":7,"nodeType":"811","endLine":62,"endColumn":23,"suggestions":"856"},{"ruleId":"809","severity":1,"message":"818","line":66,"column":7,"nodeType":"811","endLine":66,"endColumn":9,"suggestions":"857"},{"ruleId":"805","severity":1,"message":"858","line":4,"column":8,"nodeType":"807","messageId":"808","endLine":4,"endColumn":15},{"ruleId":"809","severity":1,"message":"859","line":37,"column":7,"nodeType":"811","endLine":37,"endColumn":9,"suggestions":"860"},{"ruleId":"809","severity":1,"message":"861","line":56,"column":8,"nodeType":"811","endLine":56,"endColumn":27,"suggestions":"862"},{"ruleId":"863","severity":1,"message":"864","line":13,"column":33,"nodeType":"865","messageId":"866","endLine":13,"endColumn":38},{"ruleId":"863","severity":1,"message":"864","line":14,"column":33,"nodeType":"865","messageId":"866","endLine":14,"endColumn":38},{"ruleId":"867","severity":1,"message":"868","line":36,"column":21,"nodeType":"869","endLine":36,"endColumn":38},{"ruleId":"809","severity":1,"message":"818","line":32,"column":8,"nodeType":"811","endLine":32,"endColumn":10,"suggestions":"870"},{"ruleId":"813","replacedBy":"871"},{"ruleId":"815","replacedBy":"872"},{"ruleId":"805","severity":1,"message":"873","line":8,"column":8,"nodeType":"807","messageId":"808","endLine":8,"endColumn":14},{"ruleId":"805","severity":1,"message":"874","line":51,"column":11,"nodeType":"807","messageId":"808","endLine":51,"endColumn":16},{"ruleId":"840","severity":1,"message":"841","line":85,"column":17,"nodeType":"842","endLine":85,"endColumn":82},{"ruleId":"875","severity":1,"message":"876","line":135,"column":24,"nodeType":"877","messageId":"878","endLine":135,"endColumn":26},{"ruleId":"809","severity":1,"message":"818","line":161,"column":7,"nodeType":"811","endLine":161,"endColumn":9,"suggestions":"879"},{"ruleId":"809","severity":1,"message":"818","line":15,"column":7,"nodeType":"811","endLine":15,"endColumn":9,"suggestions":"880"},{"ruleId":"805","severity":1,"message":"854","line":1,"column":15,"nodeType":"807","messageId":"808","endLine":1,"endColumn":23},{"ruleId":"805","severity":1,"message":"881","line":1,"column":36,"nodeType":"807","messageId":"808","endLine":1,"endColumn":42},{"ruleId":"809","severity":1,"message":"818","line":48,"column":8,"nodeType":"811","endLine":48,"endColumn":10,"suggestions":"882"},{"ruleId":"809","severity":1,"message":"818","line":40,"column":8,"nodeType":"811","endLine":40,"endColumn":10,"suggestions":"883"},{"ruleId":"809","severity":1,"message":"818","line":16,"column":8,"nodeType":"811","endLine":16,"endColumn":10,"suggestions":"884"},{"ruleId":"805","severity":1,"message":"885","line":5,"column":9,"nodeType":"807","messageId":"808","endLine":5,"endColumn":13},{"ruleId":"809","severity":1,"message":"818","line":39,"column":7,"nodeType":"811","endLine":39,"endColumn":9,"suggestions":"886"},{"ruleId":"809","severity":1,"message":"887","line":82,"column":9,"nodeType":"811","endLine":82,"endColumn":11,"suggestions":"888"},{"ruleId":"805","severity":1,"message":"889","line":5,"column":8,"nodeType":"807","messageId":"808","endLine":5,"endColumn":22},{"ruleId":"809","severity":1,"message":"890","line":30,"column":10,"nodeType":"811","endLine":30,"endColumn":12,"suggestions":"891"},{"ruleId":"809","severity":1,"message":"861","line":55,"column":8,"nodeType":"811","endLine":55,"endColumn":25,"suggestions":"892"},{"ruleId":"805","severity":1,"message":"854","line":1,"column":39,"nodeType":"807","messageId":"808","endLine":1,"endColumn":47},{"ruleId":"809","severity":1,"message":"855","line":55,"column":7,"nodeType":"811","endLine":55,"endColumn":17,"suggestions":"893"},{"ruleId":"809","severity":1,"message":"818","line":59,"column":7,"nodeType":"811","endLine":59,"endColumn":9,"suggestions":"894"},{"ruleId":"805","severity":1,"message":"895","line":37,"column":12,"nodeType":"807","messageId":"808","endLine":37,"endColumn":18},{"ruleId":"809","severity":1,"message":"896","line":105,"column":7,"nodeType":"811","endLine":105,"endColumn":11,"suggestions":"897"},{"ruleId":"813","replacedBy":"898"},{"ruleId":"815","replacedBy":"899"},{"ruleId":"809","severity":1,"message":"845","line":13,"column":7,"nodeType":"811","endLine":13,"endColumn":23,"suggestions":"900"},{"ruleId":"809","severity":1,"message":"845","line":18,"column":7,"nodeType":"811","endLine":18,"endColumn":21,"suggestions":"901"},{"ruleId":"809","severity":1,"message":"861","line":55,"column":8,"nodeType":"811","endLine":55,"endColumn":25,"suggestions":"902"},{"ruleId":"809","severity":1,"message":"903","line":43,"column":5,"nodeType":"807","endLine":43,"endColumn":14,"suggestions":"904"},{"ruleId":"805","severity":1,"message":"839","line":1,"column":15,"nodeType":"807","messageId":"808","endLine":1,"endColumn":24},{"ruleId":"805","severity":1,"message":"881","line":1,"column":25,"nodeType":"807","messageId":"808","endLine":1,"endColumn":31},{"ruleId":"805","severity":1,"message":"854","line":1,"column":25,"nodeType":"807","messageId":"808","endLine":1,"endColumn":33},{"ruleId":"805","severity":1,"message":"905","line":4,"column":9,"nodeType":"807","messageId":"808","endLine":4,"endColumn":18},{"ruleId":"809","severity":1,"message":"906","line":67,"column":7,"nodeType":"811","endLine":67,"endColumn":11,"suggestions":"907"},{"ruleId":"809","severity":1,"message":"818","line":71,"column":7,"nodeType":"811","endLine":71,"endColumn":9,"suggestions":"908"},{"ruleId":"805","severity":1,"message":"885","line":3,"column":9,"nodeType":"807","messageId":"808","endLine":3,"endColumn":13},{"ruleId":"809","severity":1,"message":"818","line":59,"column":7,"nodeType":"811","endLine":59,"endColumn":9,"suggestions":"909"},{"ruleId":"805","severity":1,"message":"910","line":37,"column":11,"nodeType":"807","messageId":"808","endLine":37,"endColumn":18},{"ruleId":"809","severity":1,"message":"861","line":48,"column":8,"nodeType":"811","endLine":48,"endColumn":25,"suggestions":"911"},{"ruleId":"805","severity":1,"message":"912","line":7,"column":8,"nodeType":"807","messageId":"808","endLine":7,"endColumn":15},{"ruleId":"805","severity":1,"message":"913","line":15,"column":15,"nodeType":"807","messageId":"808","endLine":15,"endColumn":21},{"ruleId":"809","severity":1,"message":"914","line":187,"column":8,"nodeType":"865","endLine":187,"endColumn":31},{"ruleId":"809","severity":1,"message":"914","line":228,"column":8,"nodeType":"865","endLine":228,"endColumn":30},{"ruleId":"809","severity":1,"message":"914","line":228,"column":31,"nodeType":"865","endLine":228,"endColumn":53},{"ruleId":"809","severity":1,"message":"818","line":263,"column":7,"nodeType":"811","endLine":263,"endColumn":9,"suggestions":"915"},{"ruleId":"805","severity":1,"message":"913","line":3,"column":14,"nodeType":"807","messageId":"808","endLine":3,"endColumn":20},{"ruleId":"805","severity":1,"message":"916","line":7,"column":8,"nodeType":"807","messageId":"808","endLine":7,"endColumn":12},{"ruleId":"805","severity":1,"message":"917","line":6,"column":8,"nodeType":"807","messageId":"808","endLine":6,"endColumn":14},{"ruleId":"805","severity":1,"message":"918","line":7,"column":8,"nodeType":"807","messageId":"808","endLine":7,"endColumn":16},{"ruleId":"805","severity":1,"message":"919","line":8,"column":8,"nodeType":"807","messageId":"808","endLine":8,"endColumn":18},{"ruleId":"805","severity":1,"message":"917","line":6,"column":8,"nodeType":"807","messageId":"808","endLine":6,"endColumn":14},{"ruleId":"805","severity":1,"message":"918","line":7,"column":8,"nodeType":"807","messageId":"808","endLine":7,"endColumn":16},{"ruleId":"805","severity":1,"message":"919","line":8,"column":8,"nodeType":"807","messageId":"808","endLine":8,"endColumn":18},{"ruleId":"805","severity":1,"message":"920","line":9,"column":8,"nodeType":"807","messageId":"808","endLine":9,"endColumn":11},{"ruleId":"805","severity":1,"message":"917","line":7,"column":8,"nodeType":"807","messageId":"808","endLine":7,"endColumn":14},{"ruleId":"805","severity":1,"message":"918","line":8,"column":8,"nodeType":"807","messageId":"808","endLine":8,"endColumn":16},{"ruleId":"805","severity":1,"message":"919","line":9,"column":8,"nodeType":"807","messageId":"808","endLine":9,"endColumn":18},{"ruleId":"805","severity":1,"message":"920","line":10,"column":8,"nodeType":"807","messageId":"808","endLine":10,"endColumn":11},{"ruleId":"805","severity":1,"message":"921","line":70,"column":12,"nodeType":"807","messageId":"808","endLine":70,"endColumn":17},{"ruleId":"805","severity":1,"message":"922","line":70,"column":19,"nodeType":"807","messageId":"808","endLine":70,"endColumn":27},{"ruleId":"809","severity":1,"message":"923","line":229,"column":6,"nodeType":"811","endLine":229,"endColumn":64,"suggestions":"924"},{"ruleId":"805","severity":1,"message":"925","line":39,"column":15,"nodeType":"807","messageId":"808","endLine":39,"endColumn":21},{"ruleId":"805","severity":1,"message":"854","line":1,"column":32,"nodeType":"807","messageId":"808","endLine":1,"endColumn":40},{"ruleId":"809","severity":1,"message":"926","line":245,"column":7,"nodeType":"811","endLine":253,"endColumn":6,"suggestions":"927"},{"ruleId":"805","severity":1,"message":"854","line":1,"column":32,"nodeType":"807","messageId":"808","endLine":1,"endColumn":40},{"ruleId":"805","severity":1,"message":"928","line":4,"column":9,"nodeType":"807","messageId":"808","endLine":4,"endColumn":22},{"ruleId":"809","severity":1,"message":"929","line":177,"column":7,"nodeType":"811","endLine":177,"endColumn":131,"suggestions":"930"},{"ruleId":"805","severity":1,"message":"854","line":1,"column":32,"nodeType":"807","messageId":"808","endLine":1,"endColumn":40},{"ruleId":"809","severity":1,"message":"914","line":160,"column":8,"nodeType":"865","endLine":160,"endColumn":24},{"ruleId":"809","severity":1,"message":"914","line":160,"column":25,"nodeType":"865","endLine":160,"endColumn":51},"no-unused-vars","'noImage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'slideshowInner.current'. Either exclude it or remove the dependency array. Mutable values like 'slideshowInner.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["931"],"no-native-reassign",["932"],"no-negated-in-lhs",["933"],"'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["934"],["932"],["933"],["932"],["933"],["932"],["933"],["932"],["933"],["935"],["936"],["937"],["932"],["933"],"'effect' is assigned a value but never used.","'image' is defined but never used.","'positionRadius' is assigned a value but never used.","'img' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'canvasHeight' and 'canvasWidth'. Either include them or remove the dependency array.",["938"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["932"],["933"],"React Hook useCallback has missing dependencies: 'images', 'index', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["939"],["940"],["932"],["933"],"'handleApiLoaded' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["932"],["933"],"'useState' is defined but never used.","React Hook useCallback has a missing dependency: 'posts'. Either include it or remove the dependency array.",["941"],["942"],"'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'posts' and 'props.id'. Either include them or remove the dependency array.",["943"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["944"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["945"],["932"],["933"],"'Button' is defined but never used.","'theme' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["946"],["947"],"'useRef' is defined but never used.",["948"],["949"],["950"],"'push' is defined but never used.",["951"],"React Hook useEffect has a missing dependency: 'mousewheel'. Either include it or remove the dependency array.",["952"],"'LinearProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'handleToggle'. Either include it or remove the dependency array.",["953"],["954"],["955"],["956"],"'loaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'posts'. Either include them or remove the dependency array.",["957"],["932"],["933"],["958"],["959"],["960"],"React Hook useEffect contains a call to 'setSliderBoxHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["961"],"'getStages' is defined but never used.","React Hook useCallback has a missing dependency: 'locations'. Either include it or remove the dependency array.",["962"],["963"],["964"],"'classes' is assigned a value but never used.",["965"],"'NoImage' is defined but never used.","'power2' is defined but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.",["966"],"'pink' is defined but never used.","'purple' is defined but never used.","'blueGrey' is defined but never used.","'lightGreen' is defined but never used.","'red' is defined but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","React Hook useEffect has unnecessary dependencies: 'bodyRef.current', 'containerRef.current', and 'sectionRefs.current'. Either exclude them or remove the dependency array. Mutable values like 'sectionRefs.current' aren't valid dependencies because mutating them doesn't re-render the component.",["967"],"'scroll' is assigned a value but never used.","React Hook useEffect has unnecessary dependencies: 'window.innerHeight' and 'window.innerWidth'. Either exclude them or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["968"],"'ScrollTrigger' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'HorizontalSectionRefs.current', 'bodyRef.current', 'containerRef.current', 'horizontalRef.current', and 'sectionRefs.current'. Either exclude them or remove the dependency array. Mutable values like 'bodyRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["969"],{"desc":"970","fix":"971"},"no-global-assign","no-unsafe-negation",{"desc":"972","fix":"973"},{"desc":"972","fix":"974"},{"desc":"972","fix":"975"},{"desc":"972","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"979","fix":"981"},{"desc":"982","fix":"983"},{"desc":"972","fix":"984"},{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},{"desc":"972","fix":"989"},{"desc":"972","fix":"990"},{"desc":"972","fix":"991"},{"desc":"972","fix":"992"},{"desc":"972","fix":"993"},{"desc":"972","fix":"994"},{"desc":"972","fix":"995"},{"desc":"996","fix":"997"},{"desc":"998","fix":"999"},{"desc":"987","fix":"1000"},{"desc":"982","fix":"1001"},{"desc":"972","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"979","fix":"1005"},{"desc":"979","fix":"1006"},{"desc":"987","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"972","fix":"1012"},{"desc":"972","fix":"1013"},{"desc":"987","fix":"1014"},{"desc":"972","fix":"1015"},{"desc":"970","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},"Update the dependencies array to be: []",{"range":"1021","text":"1022"},"Update the dependencies array to be: [dispatch]",{"range":"1023","text":"1024"},{"range":"1025","text":"1024"},{"range":"1026","text":"1024"},{"range":"1027","text":"1024"},"Update the dependencies array to be: [canvasHeight, canvasWidth]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [images, index, props]",{"range":"1030","text":"1031"},{"range":"1032","text":"1031"},"Update the dependencies array to be: [posts]",{"range":"1033","text":"1034"},{"range":"1035","text":"1024"},"Update the dependencies array to be: [posts, props.id]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [props]",{"range":"1038","text":"1039"},{"range":"1040","text":"1024"},{"range":"1041","text":"1024"},{"range":"1042","text":"1024"},{"range":"1043","text":"1024"},{"range":"1044","text":"1024"},{"range":"1045","text":"1024"},{"range":"1046","text":"1024"},"Update the dependencies array to be: [mousewheel]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [handleToggle]",{"range":"1049","text":"1050"},{"range":"1051","text":"1039"},{"range":"1052","text":"1034"},{"range":"1053","text":"1024"},"Update the dependencies array to be: [dispatch, id, posts]",{"range":"1054","text":"1055"},{"range":"1056","text":"1031"},{"range":"1057","text":"1031"},{"range":"1058","text":"1039"},"Add dependencies array: []",{"range":"1059","text":"1060"},"Update the dependencies array to be: [locations]",{"range":"1061","text":"1062"},{"range":"1063","text":"1024"},{"range":"1064","text":"1024"},{"range":"1065","text":"1039"},{"range":"1066","text":"1024"},{"range":"1067","text":"1022"},"Update the dependencies array to be: [bodyRef, containerRef, sectionRefs, HorizontalSectionRefs, addToRefs]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [addToRefs]",{"range":"1070","text":"1071"},[7314,7338],"[]",[3742,3744],"[dispatch]",[722,724],[580,582],[503,505],[2956,2958],"[canvasHeight, canvasWidth]",[527,543],"[images, index, props]",[720,734],[2288,2304],"[posts]",[2368,2370],[991,993],"[posts, props.id]",[2275,2294],"[props]",[1097,1099],[5034,5036],[575,577],[1445,1447],[1206,1208],[577,579],[1256,1258],[3128,3130],"[mousewheel]",[977,979],"[handleToggle]",[2192,2209],[2037,2047],[2111,2113],[4090,4094],"[dispatch, id, posts]",[526,542],[719,733],[2267,2284],[1897,1897],", []",[2094,2098],"[locations]",[2170,2172],[1688,1690],[1966,1983],[7960,7962],[7889,7947],[8232,8412],"[bodyRef, containerRef, sectionRefs, HorizontalSectionRefs, addToRefs]",[6014,6138],"[addToRefs]"]